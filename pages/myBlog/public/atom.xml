<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lemon</title>
  
  <subtitle>Lemonの博客</subtitle>
  <link href="https://lemonsama123.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://lemonsama123.gitee.io/"/>
  <updated>2022-04-23T15:10:35.064Z</updated>
  <id>https://lemonsama123.gitee.io/</id>
  
  <author>
    <name>Leomn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法提高</title>
    <link href="https://lemonsama123.gitee.io/posts/30fef56b.html"/>
    <id>https://lemonsama123.gitee.io/posts/30fef56b.html</id>
    <published>2022-04-23T15:10:35.000Z</published>
    <updated>2022-04-23T15:10:35.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>算法进阶</title>
    <link href="https://lemonsama123.gitee.io/posts/5469c363.html"/>
    <id>https://lemonsama123.gitee.io/posts/5469c363.html</id>
    <published>2022-04-23T15:10:32.000Z</published>
    <updated>2022-04-23T15:10:32.596Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>算法基础</title>
    <link href="https://lemonsama123.gitee.io/posts/fa1802cb.html"/>
    <id>https://lemonsama123.gitee.io/posts/fa1802cb.html</id>
    <published>2022-04-23T15:10:29.000Z</published>
    <updated>2022-04-24T00:27:16.768Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、基础算法"><a href="#一、基础算法" class="headerlink" title="一、基础算法"></a>一、基础算法</h1><h2 id="1-1-排序"><a href="#1-1-排序" class="headerlink" title="1.1 排序"></a>1.1 排序</h2><h2 id="1-2-二分"><a href="#1-2-二分" class="headerlink" title="1.2 二分"></a>1.2 二分</h2><h2 id="1-3-高精度"><a href="#1-3-高精度" class="headerlink" title="1.3 高精度"></a>1.3 高精度</h2><h2 id="1-4-前缀和与差分"><a href="#1-4-前缀和与差分" class="headerlink" title="1.4 前缀和与差分"></a>1.4 前缀和与差分</h2><h2 id="1-5-双指针算法"><a href="#1-5-双指针算法" class="headerlink" title="1.5 双指针算法"></a>1.5 双指针算法</h2><h2 id="1-6-位运算"><a href="#1-6-位运算" class="headerlink" title="1.6 位运算"></a>1.6 位运算</h2><h2 id="1-7-离散化"><a href="#1-7-离散化" class="headerlink" title="1.7 离散化"></a>1.7 离散化</h2><h2 id="1-8-区间合并"><a href="#1-8-区间合并" class="headerlink" title="1.8 区间合并"></a>1.8 区间合并</h2><h1 id="二、数据结构"><a href="#二、数据结构" class="headerlink" title="二、数据结构"></a>二、数据结构</h1><h2 id="2-1-链表与邻接表：树与图的存储"><a href="#2-1-链表与邻接表：树与图的存储" class="headerlink" title="2.1 链表与邻接表：树与图的存储"></a>2.1 链表与邻接表：树与图的存储</h2><h2 id="2-2-栈与队列：单调队列、单调栈"><a href="#2-2-栈与队列：单调队列、单调栈" class="headerlink" title="2.2 栈与队列：单调队列、单调栈"></a>2.2 栈与队列：单调队列、单调栈</h2><h2 id="2-3-kmp"><a href="#2-3-kmp" class="headerlink" title="2.3 kmp"></a>2.3 kmp</h2><h2 id="2-4-Trie"><a href="#2-4-Trie" class="headerlink" title="2.4 Trie"></a>2.4 Trie</h2><h2 id="2-5-并查集"><a href="#2-5-并查集" class="headerlink" title="2.5 并查集"></a>2.5 并查集</h2><h2 id="2-6-堆"><a href="#2-6-堆" class="headerlink" title="2.6 堆"></a>2.6 堆</h2><h2 id="2-7-Hash表"><a href="#2-7-Hash表" class="headerlink" title="2.7 Hash表"></a>2.7 Hash表</h2><h1 id="三、搜索与图论"><a href="#三、搜索与图论" class="headerlink" title="三、搜索与图论"></a>三、搜索与图论</h1><h2 id="3-1-DFS与BFS"><a href="#3-1-DFS与BFS" class="headerlink" title="3.1 DFS与BFS"></a>3.1 DFS与BFS</h2><h2 id="3-2-树与图的遍历：拓扑排序"><a href="#3-2-树与图的遍历：拓扑排序" class="headerlink" title="3.2 树与图的遍历：拓扑排序"></a>3.2 树与图的遍历：拓扑排序</h2><h2 id="3-3-最短路"><a href="#3-3-最短路" class="headerlink" title="3.3 最短路"></a>3.3 最短路</h2><h2 id="3-4-最小生成树"><a href="#3-4-最小生成树" class="headerlink" title="3.4 最小生成树"></a>3.4 最小生成树</h2><h2 id="3-5-二分图：染色法、匈牙利算法"><a href="#3-5-二分图：染色法、匈牙利算法" class="headerlink" title="3.5 二分图：染色法、匈牙利算法"></a>3.5 二分图：染色法、匈牙利算法</h2><h1 id="四、数学知识"><a href="#四、数学知识" class="headerlink" title="四、数学知识"></a>四、数学知识</h1><h2 id="4-1-质数"><a href="#4-1-质数" class="headerlink" title="4.1 质数"></a>4.1 质数</h2><h2 id="4-2-约数"><a href="#4-2-约数" class="headerlink" title="4.2 约数"></a>4.2 约数</h2><p>欧拉函数<br>快速幂<br>扩展欧几里得算法<br>中国剩余定理<br>高斯消元<br>组合计数<br>容斥原理<br>简单博弈论</p><h1 id="五、动态规划"><a href="#五、动态规划" class="headerlink" title="五、动态规划"></a>五、动态规划</h1><p>背包问题<br>线性DP<br>区间DP<br>计数类DP<br>数位统计DP<br>状态压缩DP<br>树形DP<br>记忆化搜索</p><h1 id="六、贪心"><a href="#六、贪心" class="headerlink" title="六、贪心"></a>六、贪心</h1><h1 id="七、时空复杂度分析"><a href="#七、时空复杂度分析" class="headerlink" title="七、时空复杂度分析"></a>七、时空复杂度分析</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>图算法</title>
    <link href="https://lemonsama123.gitee.io/posts/922ba922.html"/>
    <id>https://lemonsama123.gitee.io/posts/922ba922.html</id>
    <published>2022-04-01T05:01:20.000Z</published>
    <updated>2022-04-07T15:19:51.186Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、图的基本概念及名词解释"><a href="#一、图的基本概念及名词解释" class="headerlink" title="一、图的基本概念及名词解释"></a>一、图的基本概念及名词解释</h1><h1 id="二、图的表示"><a href="#二、图的表示" class="headerlink" title="二、图的表示"></a>二、图的表示</h1><p>这里所说的图的表示指的是图的<a href="https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/350782">存储结构</a>。</p><p>笔者在刷题过程中遇到过的表示方法有三种：邻接矩阵、邻接表、边集数组和类，其中邻接矩阵、邻接表和类是我们在写算法是会用到的，有时候题目会以边集数组的形式给出数据，我们应当将其转换为邻接矩阵、邻接表或类。</p><p>为了方便，约定：$N$ 为点数， $M$ 为边数。</p><p>有向图一般使用 $G$ 表示，无向图一般使用 $E$ 表示</p><h2 id="2-1-邻接矩阵"><a href="#2-1-邻接矩阵" class="headerlink" title="2.1 邻接矩阵"></a>2.1 邻接矩阵</h2><p>这是一种使用二维矩阵来进行存图的方式。</p><p>适用于边数较多的稠密图使用，当边数量接近点的数量的平方，即 $M \approx N^{2}$ 是，定义为稀疏图。</p><p>下面分别介绍无权无向图、无权有向图、带权无向图和带权有向图的邻接矩阵。</p><h3 id="2-1-1-无权无向图的邻接矩阵"><a href="#2-1-1-无权无向图的邻接矩阵" class="headerlink" title="2.1.1 无权无向图的邻接矩阵"></a>2.1.1 无权无向图的邻接矩阵</h3><p>$$<br>A[i][j] = \left\lbrace\begin{array}{ll}<br>1, &amp;(v_{i}, v_{j}) \in E  \newline<br>0 ,&amp; (v_{i}, v_{j}) \notin G<br>\end{array}\right.<br>$$</p><p>例如下面的图：</p><img src="https://s2.loli.net/2022/04/01/IBXEl29bzGOwa1T.png" alt="无权无向图" style="zoom:50%;"><p>其邻接矩阵为：</p><p><img src="https://s2.loli.net/2022/04/01/4Q1xNFWRlaXqGtd.png" alt="无权无向图的邻接矩阵"></p><h3 id="2-1-2-无权有向图的邻接矩阵"><a href="#2-1-2-无权有向图的邻接矩阵" class="headerlink" title="2.1.2 无权有向图的邻接矩阵"></a>2.1.2 无权有向图的邻接矩阵</h3><p>$$<br>A[i][j] = \left\lbrace\begin{array}{ll}<br>1, &amp; &lt;v_{i}, v_{j}&gt; \in G \newline<br>0 ,&amp; &lt;v_{i}, v_{j}&gt;\notin G<br>\end{array}\right.<br>$$</p><h3 id="2-1-3-带权无向图的邻接矩阵"><a href="#2-1-3-带权无向图的邻接矩阵" class="headerlink" title="2.1.3 带权无向图的邻接矩阵"></a>2.1.3 带权无向图的邻接矩阵</h3><p>$$<br>A[i][j] = \left\lbrace\begin{array}{ll}<br>W_{ij} , &amp; (v_{i}, v_{j}) \in E \newline<br>0 ,&amp; i = j \newline<br>\infty, &amp; \text{其他}<br>\end{array}\right.<br>$$</p><h3 id="2-1-4-带权有向图的邻接矩阵"><a href="#2-1-4-带权有向图的邻接矩阵" class="headerlink" title="2.1.4 带权有向图的邻接矩阵"></a>2.1.4 带权有向图的邻接矩阵</h3><p>$$<br>A[i][j] = \left\lbrace\begin{array}{ll}<br>W_{ij} , &amp; &lt;v_{i}, v_{j}&gt; \in E \newline<br>0 ,&amp; i = j \newline<br>\infty, &amp; \text{其他}<br>\end{array}\right.<br>$$</p><h2 id="2-2-邻接表"><a href="#2-2-邻接表" class="headerlink" title="2.2 邻接表"></a>2.2 邻接表</h2><h2 id="2-3-边集数组"><a href="#2-3-边集数组" class="headerlink" title="2.3 边集数组"></a>2.3 边集数组</h2><h2 id="2-4-类"><a href="#2-4-类" class="headerlink" title="2.4 类"></a>2.4 类</h2><h1 id="三、并查集"><a href="#三、并查集" class="headerlink" title="三、并查集"></a>三、并查集</h1><h2 id="3-1-Quick-Find-并查集"><a href="#3-1-Quick-Find-并查集" class="headerlink" title="3.1 Quick Find 并查集"></a>3.1 Quick Find 并查集</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> root<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> root<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-2-Quick-Union-并查集"><a href="#3-2-Quick-Union-并查集" class="headerlink" title="3.2 Quick Union 并查集"></a>3.2 Quick Union 并查集</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> root<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            x <span class="token operator">=</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-3-按秩合并的并查集"><a href="#3-3-按秩合并的并查集" class="headerlink" title="3.3 按秩合并的并查集"></a>3.3 按秩合并的并查集</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> root<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rank<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        rank <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            rank<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">!=</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            x <span class="token operator">=</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&gt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">=</span> rootY<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>                rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-4-路径压缩优化的并查集"><a href="#3-4-路径压缩优化的并查集" class="headerlink" title="3.4 路径压缩优化的并查集"></a>3.4 路径压缩优化的并查集</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> root<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-5-图论算法中用到的并查集的最终版本"><a href="#3-5-图论算法中用到的并查集的最终版本" class="headerlink" title="3.5 图论算法中用到的并查集的最终版本"></a>3.5 图论算法中用到的并查集的最终版本</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UnionFind</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> root<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rank<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">UnionFind</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        rank <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            rank<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&gt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">=</span> rootY<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>                rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>        <span class="token keyword">static</span> <span class="token keyword">int</span> root<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> rank<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        rank <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            rank<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&gt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">=</span> rootY<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>                rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-6-并查集的几道题"><a href="#3-6-并查集的几道题" class="headerlink" title="3.6 并查集的几道题"></a>3.6 并查集的几道题</h2><p><a href="https://leetcode-cn.com/problems/number-of-provinces/">leetcode 547. 省份数量</a></p><p><a href="http://poj.org/problem?id=1182">poj 1182. 食物链</a></p><h1 id="四、DFS-和-BFS"><a href="#四、DFS-和-BFS" class="headerlink" title="四、DFS 和 BFS"></a>四、DFS 和 BFS</h1><p>没什么好说的。</p><h1 id="五、最小生成树"><a href="#五、最小生成树" class="headerlink" title="五、最小生成树"></a>五、最小生成树</h1><p>最小生成树算法用于带权无向图，主要有两种：<a href="https://baike.baidu.com/item/Prim/10242166?fr=aladdin">Prim</a> 算法和 <a href="https://baike.baidu.com/item/%E5%85%8B%E9%B2%81%E6%96%AF%E5%8D%A1%E5%B0%94%E7%AE%97%E6%B3%95/4455899?fromtitle=Kruskal&amp;fromid=10242089&amp;fr=aladdin">Kruskal</a> 算法。</p><h2 id="5-1-Prim-算法"><a href="#5-1-Prim-算法" class="headerlink" title="5.1 Prim 算法"></a>5.1 Prim 算法</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">prim</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>points <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> points<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> adjacencyMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                adjacencyMatrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                adjacencyMatrix<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> minCost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>minCost<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//初始化一下其他顶点与第一个顶点的距离</span>            minCost<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> adjacencyMatrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> minIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> minValue <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>                    minValue <span class="token operator">=</span> minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>minIndex <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            res <span class="token operator">+=</span> minValue<span class="token punctuation">;</span>            visited<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            minCost<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> adjacencyMatrix<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> adjacencyMatrix<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Prim 算法的另外一种模板：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Comparator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">prim</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> points<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>points <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> points<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> size <span class="token operator">=</span> points<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span></span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x<span class="token punctuation">.</span>cost<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> coordinate1 <span class="token operator">=</span> points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> coordinate2 <span class="token operator">=</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> cost <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>coordinate1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> coordinate2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>coordinate1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> coordinate2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Edge</span> edge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">;</span>            pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>edge<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Edge</span> e <span class="token operator">=</span> pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> point1 <span class="token operator">=</span> e<span class="token punctuation">.</span>point1<span class="token punctuation">;</span>            <span class="token keyword">int</span> point2 <span class="token operator">=</span> e<span class="token punctuation">.</span>point2<span class="token punctuation">;</span>            <span class="token keyword">int</span> cost <span class="token operator">=</span> e<span class="token punctuation">.</span>cost<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>visited<span class="token punctuation">[</span>point2<span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                result <span class="token operator">+=</span> cost<span class="token punctuation">;</span>                visited<span class="token punctuation">[</span>point2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">int</span> distance <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>point2<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>points<span class="token punctuation">[</span>point2<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> points<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span>point2<span class="token punctuation">,</span> j<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                count<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Edge</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> point1<span class="token punctuation">;</span>    <span class="token keyword">int</span> point2<span class="token punctuation">;</span>    <span class="token keyword">int</span> cost<span class="token punctuation">;</span>    <span class="token class-name">Edge</span><span class="token punctuation">(</span><span class="token keyword">int</span> point1<span class="token punctuation">,</span> <span class="token keyword">int</span> point2<span class="token punctuation">,</span> <span class="token keyword">int</span> cost<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>point1 <span class="token operator">=</span> point1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>point2 <span class="token operator">=</span> point2<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cost <span class="token operator">=</span> cost<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-2-Kruskal-算法"><a href="#5-2-Kruskal-算法" class="headerlink" title="5.2 Kruskal 算法"></a>5.2 Kruskal 算法</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Comparator</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Kruskal</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> root<span class="token punctuation">;</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rank<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        rank <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            rank<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        root<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&gt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">=</span> rootY<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>                <span class="token operator">++</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//points 是以边集数组的形式输入</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">kruskal</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> edges<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span></span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span>cost<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> from <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> <span class="token keyword">to</span> <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> cost <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                priorityQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span>        <span class="token function">init</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>priorityQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Edge</span> curEdge <span class="token operator">=</span> priorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">connected</span><span class="token punctuation">(</span>curEdge<span class="token punctuation">.</span>from<span class="token punctuation">,</span> curEdge<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">union</span><span class="token punctuation">(</span>curEdge<span class="token punctuation">.</span>from<span class="token punctuation">,</span> curEdge<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">--</span>count<span class="token punctuation">;</span>                ans <span class="token operator">+=</span> curEdge<span class="token punctuation">.</span>cost<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Edge</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> from<span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token keyword">to</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> cost<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span><span class="token keyword">int</span> from<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token keyword">to</span><span class="token punctuation">,</span> <span class="token keyword">int</span> cost<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>from <span class="token operator">=</span> from<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">to</span> <span class="token operator">=</span> <span class="token keyword">to</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cost <span class="token operator">=</span> cost<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-3-最小生成树的几道题"><a href="#5-3-最小生成树的几道题" class="headerlink" title="5.3 最小生成树的几道题"></a>5.3 最小生成树的几道题</h2><p><a href="https://leetcode-cn.com/problems/min-cost-to-connect-all-points/">leetcode 1584. 连接所有点的最小费用</a></p><p><a href="http://poj.org/problem?id=1789">poj 1789. Truck History</a></p><p><a href="http://poj.org/problem?id=2485">poj 2485. Highways</a></p><p><a href="http://poj.org/problem?id=1258">poj 1258. Agri-Net</a></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token comment">//直接使用邻接矩阵的 prim</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">prim</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">prim</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> graph<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> minCost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>minCost<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            minCost<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> minIdx <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> minVal <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    minIdx <span class="token operator">=</span> j<span class="token punctuation">;</span>                    minVal <span class="token operator">=</span> minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            res <span class="token operator">+=</span> minVal<span class="token punctuation">;</span>            visited<span class="token punctuation">[</span>minIdx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            minCost<span class="token punctuation">[</span>minIdx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> graph<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>minIdx<span class="token punctuation">]</span> <span class="token operator">&lt;</span> minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    minCost<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> graph<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>minIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token comment">//使用类+优先级队列的kruskal</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">kruskal</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">kruskal</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> edges<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> edges<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span></span> priorityQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">int</span> from <span class="token operator">=</span> i<span class="token punctuation">;</span>                <span class="token keyword">int</span> <span class="token keyword">to</span> <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token keyword">int</span> cost <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                priorityQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">init</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>priorityQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Edge</span> curEdge <span class="token operator">=</span> priorityQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">connected</span><span class="token punctuation">(</span>curEdge<span class="token punctuation">.</span>from<span class="token punctuation">,</span> curEdge<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">union</span><span class="token punctuation">(</span>curEdge<span class="token punctuation">.</span>from<span class="token punctuation">,</span> curEdge<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token operator">--</span>count<span class="token punctuation">;</span>                ans <span class="token operator">+=</span> curEdge<span class="token punctuation">.</span>cost<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> root<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rank<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        rank <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            root<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            rank<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        root<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> root<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> rootX <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> rootY <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>rootX <span class="token operator">!=</span> rootY<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&gt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rank<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span> <span class="token operator">=</span> rootY<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                root<span class="token punctuation">[</span>rootY<span class="token punctuation">]</span> <span class="token operator">=</span> rootX<span class="token punctuation">;</span>                <span class="token operator">++</span>rank<span class="token punctuation">[</span>rootX<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">connected</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">find</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">find</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">PriorityQueue</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token comment">/** * 使用类+优先级队列的prim * 相较于朴素prim，实现较为简单 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main3</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> n <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">prim</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">prim</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>graph <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> graph<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> size <span class="token operator">=</span> graph<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span></span> pq <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Edge</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> visited <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> cost <span class="token operator">=</span> graph<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token class-name">Edge</span> edge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> cost<span class="token punctuation">)</span><span class="token punctuation">;</span>            pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>edge<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>pq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Edge</span> e <span class="token operator">=</span> pq<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> point1 <span class="token operator">=</span> e<span class="token punctuation">.</span>from<span class="token punctuation">;</span>            <span class="token keyword">int</span> point2 <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token keyword">to</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> cost <span class="token operator">=</span> e<span class="token punctuation">.</span>cost<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span>visited<span class="token punctuation">[</span>point2<span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                result <span class="token operator">+=</span> cost<span class="token punctuation">;</span>                visited<span class="token punctuation">[</span>point2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visited<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">int</span> distance <span class="token operator">=</span> graph<span class="token punctuation">[</span>point2<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                        pq<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Edge</span><span class="token punctuation">(</span>point2<span class="token punctuation">,</span> j<span class="token punctuation">,</span> distance<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                count<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="六、最短路径"><a href="#六、最短路径" class="headerlink" title="六、最短路径"></a>六、最短路径</h1><h1 id="七、拓扑排序"><a href="#七、拓扑排序" class="headerlink" title="七、拓扑排序"></a>七、拓扑排序</h1><h2 id="7-1-AOV-网和拓扑排序简介"><a href="#7-1-AOV-网和拓扑排序简介" class="headerlink" title="7.1 AOV 网和拓扑排序简介"></a>7.1 AOV 网和拓扑排序简介</h2><h1 id="八、关键路径"><a href="#八、关键路径" class="headerlink" title="八、关键路径"></a>八、关键路径</h1><h2 id="8-1-AOE-网和关键路径简介"><a href="#8-1-AOE-网和关键路径简介" class="headerlink" title="8.1 AOE 网和关键路径简介"></a>8.1 AOE 网和关键路径简介</h2><h1 id="九、参考"><a href="#九、参考" class="headerlink" title="九、参考"></a>九、参考</h1><ul><li><a href="https://blog.csdn.net/Real_Fool_/article/details/114141377?spm=1001.2014.3001.5506">数据结构：图Graph【详解】</a></li><li><a href="https://blog.csdn.net/weixin_41413511/article/details/105953993?spm=1001.2014.3001.5506">一张图看懂数据结构——图</a></li><li><a href="https://leetcode-cn.com/problems/network-delay-time/solution/gong-shui-san-xie-yi-ti-wu-jie-wu-chong-oghpz/">【宫水三叶】涵盖所有的「存图方式」与「最短路算法（详尽注释）」</a></li><li><a href="https://leetcode-cn.com/problems/min-cost-to-connect-all-points/solution/prim-and-kruskal-by-yexiso-c500/">Prim and Kruskal</a></li><li><a href="https://leetcode-cn.com/leetbook/read/graph/r340gv/">leetbook《图》</a></li><li><a href="http://poj.org/">poj</a></li><li>《算法》第四版</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="图" scheme="https://lemonsama123.gitee.io/tags/%E5%9B%BE/"/>
    
    <category term="最小生成树" scheme="https://lemonsama123.gitee.io/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
    <category term="最短路" scheme="https://lemonsama123.gitee.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="AOV" scheme="https://lemonsama123.gitee.io/tags/AOV/"/>
    
    <category term="AOE" scheme="https://lemonsama123.gitee.io/tags/AOE/"/>
    
    <category term="拓扑排序" scheme="https://lemonsama123.gitee.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
    <category term="关键路径" scheme="https://lemonsama123.gitee.io/tags/%E5%85%B3%E9%94%AE%E8%B7%AF%E5%BE%84/"/>
    
    <category term="并查集" scheme="https://lemonsama123.gitee.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理</title>
    <link href="https://lemonsama123.gitee.io/posts/8d4b7ae1.html"/>
    <id>https://lemonsama123.gitee.io/posts/8d4b7ae1.html</id>
    <published>2022-03-01T01:25:30.000Z</published>
    <updated>2022-04-11T13:16:23.306Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="第一章-计算机系统概述"><a href="#第一章-计算机系统概述" class="headerlink" title="第一章 计算机系统概述"></a>第一章 计算机系统概述</h1><h2 id="1-1-计算机发展历程"><a href="#1-1-计算机发展历程" class="headerlink" title="1.1 计算机发展历程"></a>1.1 计算机发展历程</h2><h3 id="1-1-1-国外计算机发展状况"><a href="#1-1-1-国外计算机发展状况" class="headerlink" title="1.1.1 国外计算机发展状况"></a>1.1.1 国外计算机发展状况</h3><ol><li>电子管计算机（1946——1958年）：第一代计算机的基本电子器件为电子管。</li><li>晶体管计算机（1958年——1964年）：第二代计算机的基本电子器件为晶体管。</li><li>集成电路计算机（1964年——1971年）：第三代计算机的基本电子器件普遍采用集成电路。</li><li>超大规模集成电路计算机（1971年至今）：第四代计算机普遍采用了超大规模集成电路，以微处理器为特征，运算速度从 MIPS（每秒 $10^6$ 条指令）提高到 GIPS（每秒 $10^9$ 条指令）甚至 TIPS（每秒 $10^{12}$ 条指令）水平。</li></ol><h3 id="1-1-2-摩尔定律"><a href="#1-1-2-摩尔定律" class="headerlink" title="1.1.2 摩尔定律"></a>1.1.2 摩尔定律</h3><p>但价格不变时，集成电路上可容纳的晶体管数量大约 $18 \sim 24$ 个月翻一番，性能也将提升一倍。</p><h3 id="1-1-3-集成电路工艺发展概述"><a href="#1-1-3-集成电路工艺发展概述" class="headerlink" title="1.1.3 集成电路工艺发展概述"></a>1.1.3 集成电路工艺发展概述</h3><p>集成电路生产只要分为 IC 设计、IC 制造和 IC 封测三大环节。</p><h2 id="1-2-计算机系统的组成"><a href="#1-2-计算机系统的组成" class="headerlink" title="1.2 计算机系统的组成"></a>1.2 计算机系统的组成</h2><h3 id="1-2-1-计算机硬件系统"><a href="#1-2-1-计算机硬件系统" class="headerlink" title="1.2.1 计算机硬件系统"></a>1.2.1 计算机硬件系统</h3><p><a href="https://baike.baidu.com/item/%E7%BA%A6%E7%BF%B0%C2%B7%E5%86%AF%C2%B7%E8%AF%BA%E4%BE%9D%E6%9B%BC/986797?fromtitle=%E5%86%AF%C2%B7%E8%AF%BA%E4%BE%9D%E6%9B%BC&amp;fromid=388909&amp;fr=aladdin">冯·诺依曼</a>思想：</p><ul><li>存储程序：将解题的步骤编制成程序，然后将程序和运行程序所需要的数据以二进制的形式存到存储器中，方便执行。</li><li>程序控制：计算机中的控制器逐条取出存储器中的指令并按顺序执行，控制个功能部件进行相应的操作，完成数据的加工处理。</li></ul><p>按照冯·诺依曼的设计思想，计算机的硬件系统包含<a href="https://baike.baidu.com/item/%E8%BF%90%E7%AE%97%E5%99%A8/2667320?fr=aladdin">运算器</a>、<a href="https://baike.baidu.com/item/%E6%8E%A7%E5%88%B6%E5%99%A8/2206126?fr=aladdin">控制器</a>、<a href="https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E5%99%A8/1583185?fr=aladdin">存储器</a>、<a href="https://baike.baidu.com/item/%E8%BE%93%E5%85%A5%E8%AE%BE%E5%A4%87/10823368?fr=aladdin">输入设备</a>和<a href="https://baike.baidu.com/item/%E8%BE%93%E5%87%BA%E8%AE%BE%E5%A4%87/10823333?fr=aladdin">输出设备</a>五大部件。</p><ul><li>存储器：存储器的主要功能是存放程序和数据。</li><li>运算器是一种用于信息加工的部件，它对数据进行算术运算和逻辑运算。</li></ul><img src="https://s2.loli.net/2022/03/04/h7IXaSnglVZCf3w.png" alt="冯·诺依曼结构" style="zoom: 80%;"><h1 id="第四章-存储系统"><a href="#第四章-存储系统" class="headerlink" title="第四章 存储系统"></a>第四章 存储系统</h1><h1 id="4-1-存储器概述"><a href="#4-1-存储器概述" class="headerlink" title="4.1 存储器概述"></a>4.1 存储器概述</h1><h2 id="4-1-1-存储器分类"><a href="#4-1-1-存储器分类" class="headerlink" title="4.1.1 存储器分类"></a>4.1.1 存储器分类</h2><h4 id="1-按存储介质分类"><a href="#1-按存储介质分类" class="headerlink" title="1. 按存储介质分类"></a>1. 按存储介质分类</h4><ol><li>磁存储器：磁芯、磁盘、磁带存储器</li><li>半导体存储器</li><li></li><li>光存储器</li></ol><h4 id="2-按存取方式分类"><a href="#2-按存取方式分类" class="headerlink" title="2. 按存取方式分类"></a>2. 按存取方式分类</h4><ol><li>随机存储器（RAM）</li><li>顺序存储器（SAM）</li><li>直接存储器（DAM）</li></ol><h4 id="3-按信息的可改写性分类"><a href="#3-按信息的可改写性分类" class="headerlink" title="3. 按信息的可改写性分类"></a>3. 按信息的可改写性分类</h4><ol><li>读写存储器</li><li>只读存储器（ROM）</li></ol><h4 id="4-按信息的可保存性分类"><a href="#4-按信息的可保存性分类" class="headerlink" title="4. 按信息的可保存性分类"></a>4. 按信息的可保存性分类</h4><ol><li>易失性存储器</li><li>非易失性存储器</li></ol><h4 id="5-按功能分类"><a href="#5-按功能分类" class="headerlink" title="5. 按功能分类"></a>5. 按功能分类</h4><ol><li>寄存器存储器</li><li>高速缓冲存储器</li><li>主存储器</li><li>外部存储器</li></ol><h3 id="4-1-2-存储器技术指标"><a href="#4-1-2-存储器技术指标" class="headerlink" title="4.1.2 存储器技术指标"></a>4.1.2 存储器技术指标</h3><h4 id="1-存储容量"><a href="#1-存储容量" class="headerlink" title="1. 存储容量"></a>1. 存储容量</h4><h4 id="2-存取速度"><a href="#2-存取速度" class="headerlink" title="2. 存取速度"></a>2. 存取速度</h4><ol><li>存取时间</li><li>存取周期</li><li>存储器带宽</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络</title>
    <link href="https://lemonsama123.gitee.io/posts/e255a10a.html"/>
    <id>https://lemonsama123.gitee.io/posts/e255a10a.html</id>
    <published>2022-03-01T01:25:27.000Z</published>
    <updated>2022-03-21T06:37:44.100Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="第一章-概述"><a href="#第一章-概述" class="headerlink" title="第一章 概述"></a>第一章 概述</h1><h2 id="1-1-计算机网络在信息时代中的作用"><a href="#1-1-计算机网络在信息时代中的作用" class="headerlink" title="1.1 计算机网络在信息时代中的作用"></a>1.1 计算机网络在信息时代中的作用</h2><h1 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a>第二章 物理层</h1><h2 id="2-1-物理层的基本概念"><a href="#2-1-物理层的基本概念" class="headerlink" title="2.1 物理层的基本概念"></a>2.1 物理层的基本概念</h2><ul><li>物理层考虑的是怎样才能在连接各种计算机的传输媒体上<strong>传输数据比特流</strong>，而不是指具体的传输媒体。</li><li>作用：尽可能<strong>屏蔽</strong>掉不同传输媒体和通信手段的差异。</li><li>用于物理层的协议也常称为物理层<strong>规程</strong>（procedure）。</li></ul><p>物理层的主要任务是确定与传输媒体的接口的一些特性，有四个特征：</p><ol><li>机械特性：指明接口所用接线器的形状和尺寸、引线数目和排列、固定和锁定装置等。</li><li>电气特性：指明在接口电缆的各条线上出现的电压的范围。</li><li>功能特性：指明某条线上出现的某一电平的电压的意义。</li><li>过程特性：指明对于不同功能的各种可能事件的出现顺序。</li></ol><h2 id="2-2-数据通信的基础知识"><a href="#2-2-数据通信的基础知识" class="headerlink" title="2.2 数据通信的基础知识"></a>2.2 数据通信的基础知识</h2><h3 id="2-2-1-数据通信系统的模型"><a href="#2-2-1-数据通信系统的模型" class="headerlink" title="2.2.1 数据通信系统的模型"></a>2.2.1 数据通信系统的模型</h3><p>一个数据通信系统可以分为三大部分：<code>源系统</code>、<code>传输系统</code>、<code>目的系统</code>。</p><img src="https://s2.loli.net/2022/03/13/TWJ3d8ViNsneE7b.png" alt="数据通信系统的模型" style="zoom: 50%;"><p>源系统一般包括两个部分：</p><ul><li><strong>源点</strong>：源点设备产生要传输的数据。源点也成为<strong>源站</strong>或<strong>信源</strong>。</li><li><strong>发送器</strong>：通常源点生成的数字比特流要通过发送器编码后才能在传输系统中进行传输。典型的发送器就是调制解调器。</li></ul><p>目的系统一般也包括两个部分：</p><ul><li><strong>接收器</strong>：接收传输系统传送过来的信号，并把它转换为能够被目的设备处理的信息。典型的接收器就是解调器，它把来自传输线路上的模拟信号进行解调，提取出在发送端置入的消息，还原出发送端产生的数字比特流。</li><li><strong>终点</strong>：终点设备从接收器获取传送来的数字比特流，然后把信息输出。终点又称为<strong>目的站</strong>或<strong>信宿</strong>。 </li></ul><p>常用术语：</p><p>- </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL中的函数</title>
    <link href="https://lemonsama123.gitee.io/posts/1e2619a3.html"/>
    <id>https://lemonsama123.gitee.io/posts/1e2619a3.html</id>
    <published>2022-01-28T05:09:42.000Z</published>
    <updated>2022-01-28T05:12:46.714Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>各版本的MySQL的安装</title>
    <link href="https://lemonsama123.gitee.io/posts/84e07c0b.html"/>
    <id>https://lemonsama123.gitee.io/posts/84e07c0b.html</id>
    <published>2022-01-27T14:23:40.000Z</published>
    <updated>2022-04-23T15:07:05.263Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="还冇写"><a href="#还冇写" class="headerlink" title="还冇写"></a>还冇写</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>DCL</title>
    <link href="https://lemonsama123.gitee.io/posts/2ceced73.html"/>
    <id>https://lemonsama123.gitee.io/posts/2ceced73.html</id>
    <published>2022-01-27T07:21:38.000Z</published>
    <updated>2022-01-27T07:35:14.947Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/categories/MySQL/"/>
    
    
    <category term="数据库" scheme="https://lemonsama123.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>DQL</title>
    <link href="https://lemonsama123.gitee.io/posts/54189da0.html"/>
    <id>https://lemonsama123.gitee.io/posts/54189da0.html</id>
    <published>2022-01-27T07:21:36.000Z</published>
    <updated>2022-01-28T05:50:35.606Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p><code>Data Query Language</code>，简称 <code>DQL</code>，<a href="https://baike.baidu.com/item/DQL/4868445?fr=aladdin">数据查询语言</a>，是用于查询数据的语言，是 <code>SQL</code> 的一个子集。</p><ul><li>查询数据库数据，使用的最多的时 <code>select</code> 语句</li><li>有单表查询和多表查询以及嵌套查询</li><li>是数据库语言中最核心、重要的语句</li><li>使用频率最高的语句</li></ul><p>用到的数据库代码：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">/*SQLyog Ultimate v10.00 Beta1MySQL - 5.5.15 : Database - myemployees**********************************************************************/</span><span class="token comment">/*!40101 SET NAMES utf8 */</span><span class="token punctuation">;</span><span class="token comment">/*!40101 SET SQL_MODE=''*/</span><span class="token punctuation">;</span><span class="token comment">/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */</span><span class="token punctuation">;</span><span class="token comment">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */</span><span class="token punctuation">;</span><span class="token comment">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */</span><span class="token punctuation">;</span><span class="token comment">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token comment">/*!32312 IF NOT EXISTS*/</span><span class="token punctuation">`</span>myemployees<span class="token punctuation">`</span> <span class="token comment">/*!40100 DEFAULT CHARACTER SET gb2312 */</span><span class="token punctuation">;</span><span class="token keyword">USE</span> <span class="token punctuation">`</span>myemployees<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token comment">/*Table structure for table `departments` */</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>departments<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>departments<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>department_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>department_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>location_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">KEY</span> <span class="token punctuation">`</span>loc_id_fk<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">CONSTRAINT</span> <span class="token punctuation">`</span>loc_id_fk<span class="token punctuation">`</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token punctuation">`</span>locations<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">271</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>gb2312<span class="token punctuation">;</span><span class="token comment">/*Data for the table `departments` */</span><span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token punctuation">`</span>departments<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>department_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'Adm'</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'Mar'</span><span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'Pur'</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token string">'Hum'</span><span class="token punctuation">,</span><span class="token number">203</span><span class="token punctuation">,</span><span class="token number">2400</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'Shi'</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">'IT'</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">1400</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token string">'Pub'</span><span class="token punctuation">,</span><span class="token number">204</span><span class="token punctuation">,</span><span class="token number">2700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'Sal'</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token string">'Exe'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'Fin'</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token string">'Acc'</span><span class="token punctuation">,</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token string">'Tre'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token string">'Cor'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token string">'Con'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'Sha'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token string">'Ben'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span><span class="token string">'Man'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token string">'Con'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span><span class="token string">'Con'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">'Ope'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">210</span><span class="token punctuation">,</span><span class="token string">'IT '</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span><span class="token string">'NOC'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token string">'IT '</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">,</span><span class="token string">'Gov'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">,</span><span class="token string">'Ret'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token string">'Rec'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">270</span><span class="token punctuation">,</span><span class="token string">'Pay'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*Table structure for table `employees` */</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>employees<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>employees<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>first_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>last_name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>email<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>phone_number<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>job_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>salary<span class="token punctuation">`</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>commission_pct<span class="token punctuation">`</span> <span class="token keyword">double</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>department_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>hiredate<span class="token punctuation">`</span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">KEY</span> <span class="token punctuation">`</span>dept_id_fk<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">KEY</span> <span class="token punctuation">`</span>job_id_fk<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">CONSTRAINT</span> <span class="token punctuation">`</span>dept_id_fk<span class="token punctuation">`</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token punctuation">`</span>departments<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">CONSTRAINT</span> <span class="token punctuation">`</span>job_id_fk<span class="token punctuation">`</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token punctuation">`</span>jobs<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">207</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>gb2312<span class="token punctuation">;</span><span class="token comment">/*Data for the table `employees` */</span><span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token punctuation">`</span>employees<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>employee_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>first_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>email<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>phone_number<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>salary<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>commission_pct<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>manager_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>department_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>hiredate<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'Steven'</span><span class="token punctuation">,</span><span class="token string">'K_ing'</span><span class="token punctuation">,</span><span class="token string">'SKING'</span><span class="token punctuation">,</span><span class="token string">'515.123.4567'</span><span class="token punctuation">,</span><span class="token string">'AD_PRES'</span><span class="token punctuation">,</span><span class="token number">24000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token string">'1992-04-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token string">'Neena'</span><span class="token punctuation">,</span><span class="token string">'Kochhar'</span><span class="token punctuation">,</span><span class="token string">'NKOCHHAR'</span><span class="token punctuation">,</span><span class="token string">'515.123.4568'</span><span class="token punctuation">,</span><span class="token string">'AD_VP'</span><span class="token punctuation">,</span><span class="token number">17000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token string">'1992-04-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token string">'Lex'</span><span class="token punctuation">,</span><span class="token string">'De Haan'</span><span class="token punctuation">,</span><span class="token string">'LDEHAAN'</span><span class="token punctuation">,</span><span class="token string">'515.123.4569'</span><span class="token punctuation">,</span><span class="token string">'AD_VP'</span><span class="token punctuation">,</span><span class="token number">17000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token string">'1992-04-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token string">'Alexander'</span><span class="token punctuation">,</span><span class="token string">'Hunold'</span><span class="token punctuation">,</span><span class="token string">'AHUNOLD'</span><span class="token punctuation">,</span><span class="token string">'590.423.4567'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token number">9000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">'1992-04-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token string">'Bruce'</span><span class="token punctuation">,</span><span class="token string">'Ernst'</span><span class="token punctuation">,</span><span class="token string">'BERNST'</span><span class="token punctuation">,</span><span class="token string">'590.423.4568'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token number">6000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">'1992-04-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token string">'David'</span><span class="token punctuation">,</span><span class="token string">'Austin'</span><span class="token punctuation">,</span><span class="token string">'DAUSTIN'</span><span class="token punctuation">,</span><span class="token string">'590.423.4569'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token number">4800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">'1998-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">106</span><span class="token punctuation">,</span><span class="token string">'Valli'</span><span class="token punctuation">,</span><span class="token string">'Pataballa'</span><span class="token punctuation">,</span><span class="token string">'VPATABAL'</span><span class="token punctuation">,</span><span class="token string">'590.423.4560'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token number">4800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">'1998-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">107</span><span class="token punctuation">,</span><span class="token string">'Diana'</span><span class="token punctuation">,</span><span class="token string">'Lorentz'</span><span class="token punctuation">,</span><span class="token string">'DLORENTZ'</span><span class="token punctuation">,</span><span class="token string">'590.423.5567'</span><span class="token punctuation">,</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token number">4200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">'1998-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token string">'Nancy'</span><span class="token punctuation">,</span><span class="token string">'Greenberg'</span><span class="token punctuation">,</span><span class="token string">'NGREENBE'</span><span class="token punctuation">,</span><span class="token string">'515.124.4569'</span><span class="token punctuation">,</span><span class="token string">'FI_MGR'</span><span class="token punctuation">,</span><span class="token number">12000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'1998-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">109</span><span class="token punctuation">,</span><span class="token string">'Daniel'</span><span class="token punctuation">,</span><span class="token string">'Faviet'</span><span class="token punctuation">,</span><span class="token string">'DFAVIET'</span><span class="token punctuation">,</span><span class="token string">'515.124.4169'</span><span class="token punctuation">,</span><span class="token string">'FI_ACCOUNT'</span><span class="token punctuation">,</span><span class="token number">9000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'1998-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token string">'John'</span><span class="token punctuation">,</span><span class="token string">'Chen'</span><span class="token punctuation">,</span><span class="token string">'JCHEN'</span><span class="token punctuation">,</span><span class="token string">'515.124.4269'</span><span class="token punctuation">,</span><span class="token string">'FI_ACCOUNT'</span><span class="token punctuation">,</span><span class="token number">8200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token string">'Ismael'</span><span class="token punctuation">,</span><span class="token string">'Sciarra'</span><span class="token punctuation">,</span><span class="token string">'ISCIARRA'</span><span class="token punctuation">,</span><span class="token string">'515.124.4369'</span><span class="token punctuation">,</span><span class="token string">'FI_ACCOUNT'</span><span class="token punctuation">,</span><span class="token number">7700.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token string">'Jose Manuel'</span><span class="token punctuation">,</span><span class="token string">'Urman'</span><span class="token punctuation">,</span><span class="token string">'JMURMAN'</span><span class="token punctuation">,</span><span class="token string">'515.124.4469'</span><span class="token punctuation">,</span><span class="token string">'FI_ACCOUNT'</span><span class="token punctuation">,</span><span class="token number">7800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">113</span><span class="token punctuation">,</span><span class="token string">'Luis'</span><span class="token punctuation">,</span><span class="token string">'Popp'</span><span class="token punctuation">,</span><span class="token string">'LPOPP'</span><span class="token punctuation">,</span><span class="token string">'515.124.4567'</span><span class="token punctuation">,</span><span class="token string">'FI_ACCOUNT'</span><span class="token punctuation">,</span><span class="token number">6900.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token string">'Den'</span><span class="token punctuation">,</span><span class="token string">'Raphaely'</span><span class="token punctuation">,</span><span class="token string">'DRAPHEAL'</span><span class="token punctuation">,</span><span class="token string">'515.127.4561'</span><span class="token punctuation">,</span><span class="token string">'PU_MAN'</span><span class="token punctuation">,</span><span class="token number">11000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token string">'Alexander'</span><span class="token punctuation">,</span><span class="token string">'Khoo'</span><span class="token punctuation">,</span><span class="token string">'AKHOO'</span><span class="token punctuation">,</span><span class="token string">'515.127.4562'</span><span class="token punctuation">,</span><span class="token string">'PU_CLERK'</span><span class="token punctuation">,</span><span class="token number">3100.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token string">'Shelli'</span><span class="token punctuation">,</span><span class="token string">'Baida'</span><span class="token punctuation">,</span><span class="token string">'SBAIDA'</span><span class="token punctuation">,</span><span class="token string">'515.127.4563'</span><span class="token punctuation">,</span><span class="token string">'PU_CLERK'</span><span class="token punctuation">,</span><span class="token number">2900.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token string">'Sigal'</span><span class="token punctuation">,</span><span class="token string">'Tobias'</span><span class="token punctuation">,</span><span class="token string">'STOBIAS'</span><span class="token punctuation">,</span><span class="token string">'515.127.4564'</span><span class="token punctuation">,</span><span class="token string">'PU_CLERK'</span><span class="token punctuation">,</span><span class="token number">2800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">118</span><span class="token punctuation">,</span><span class="token string">'Guy'</span><span class="token punctuation">,</span><span class="token string">'Himuro'</span><span class="token punctuation">,</span><span class="token string">'GHIMURO'</span><span class="token punctuation">,</span><span class="token string">'515.127.4565'</span><span class="token punctuation">,</span><span class="token string">'PU_CLERK'</span><span class="token punctuation">,</span><span class="token number">2600.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">119</span><span class="token punctuation">,</span><span class="token string">'Karen'</span><span class="token punctuation">,</span><span class="token string">'Colmenares'</span><span class="token punctuation">,</span><span class="token string">'KCOLMENA'</span><span class="token punctuation">,</span><span class="token string">'515.127.4566'</span><span class="token punctuation">,</span><span class="token string">'PU_CLERK'</span><span class="token punctuation">,</span><span class="token number">2500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">'2000-09-09 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token string">'Matthew'</span><span class="token punctuation">,</span><span class="token string">'Weiss'</span><span class="token punctuation">,</span><span class="token string">'MWEISS'</span><span class="token punctuation">,</span><span class="token string">'650.123.1234'</span><span class="token punctuation">,</span><span class="token string">'ST_MAN'</span><span class="token punctuation">,</span><span class="token number">8000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token string">'Adam'</span><span class="token punctuation">,</span><span class="token string">'Fripp'</span><span class="token punctuation">,</span><span class="token string">'AFRIPP'</span><span class="token punctuation">,</span><span class="token string">'650.123.2234'</span><span class="token punctuation">,</span><span class="token string">'ST_MAN'</span><span class="token punctuation">,</span><span class="token number">8200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token string">'Payam'</span><span class="token punctuation">,</span><span class="token string">'Kaufling'</span><span class="token punctuation">,</span><span class="token string">'PKAUFLIN'</span><span class="token punctuation">,</span><span class="token string">'650.123.3234'</span><span class="token punctuation">,</span><span class="token string">'ST_MAN'</span><span class="token punctuation">,</span><span class="token number">7900.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token string">'Shanta'</span><span class="token punctuation">,</span><span class="token string">'Vollman'</span><span class="token punctuation">,</span><span class="token string">'SVOLLMAN'</span><span class="token punctuation">,</span><span class="token string">'650.123.4234'</span><span class="token punctuation">,</span><span class="token string">'ST_MAN'</span><span class="token punctuation">,</span><span class="token number">6500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token string">'Kevin'</span><span class="token punctuation">,</span><span class="token string">'Mourgos'</span><span class="token punctuation">,</span><span class="token string">'KMOURGOS'</span><span class="token punctuation">,</span><span class="token string">'650.123.5234'</span><span class="token punctuation">,</span><span class="token string">'ST_MAN'</span><span class="token punctuation">,</span><span class="token number">5800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token string">'Julia'</span><span class="token punctuation">,</span><span class="token string">'Nayer'</span><span class="token punctuation">,</span><span class="token string">'JNAYER'</span><span class="token punctuation">,</span><span class="token string">'650.124.1214'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">126</span><span class="token punctuation">,</span><span class="token string">'Irene'</span><span class="token punctuation">,</span><span class="token string">'Mikkilineni'</span><span class="token punctuation">,</span><span class="token string">'IMIKKILI'</span><span class="token punctuation">,</span><span class="token string">'650.124.1224'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2700.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token string">'James'</span><span class="token punctuation">,</span><span class="token string">'Landry'</span><span class="token punctuation">,</span><span class="token string">'JLANDRY'</span><span class="token punctuation">,</span><span class="token string">'650.124.1334'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2400.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span><span class="token string">'Steven'</span><span class="token punctuation">,</span><span class="token string">'Markle'</span><span class="token punctuation">,</span><span class="token string">'SMARKLE'</span><span class="token punctuation">,</span><span class="token string">'650.124.1434'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">129</span><span class="token punctuation">,</span><span class="token string">'Laura'</span><span class="token punctuation">,</span><span class="token string">'Bissot'</span><span class="token punctuation">,</span><span class="token string">'LBISSOT'</span><span class="token punctuation">,</span><span class="token string">'650.124.5234'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3300.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token string">'Mozhe'</span><span class="token punctuation">,</span><span class="token string">'Atkinson'</span><span class="token punctuation">,</span><span class="token string">'MATKINSO'</span><span class="token punctuation">,</span><span class="token string">'650.124.6234'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">131</span><span class="token punctuation">,</span><span class="token string">'James'</span><span class="token punctuation">,</span><span class="token string">'Marlow'</span><span class="token punctuation">,</span><span class="token string">'JAMRLOW'</span><span class="token punctuation">,</span><span class="token string">'650.124.7234'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">132</span><span class="token punctuation">,</span><span class="token string">'TJ'</span><span class="token punctuation">,</span><span class="token string">'Olson'</span><span class="token punctuation">,</span><span class="token string">'TJOLSON'</span><span class="token punctuation">,</span><span class="token string">'650.124.8234'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2100.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">133</span><span class="token punctuation">,</span><span class="token string">'Jason'</span><span class="token punctuation">,</span><span class="token string">'Mallin'</span><span class="token punctuation">,</span><span class="token string">'JMALLIN'</span><span class="token punctuation">,</span><span class="token string">'650.127.1934'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3300.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2004-02-06 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">134</span><span class="token punctuation">,</span><span class="token string">'Michael'</span><span class="token punctuation">,</span><span class="token string">'Rogers'</span><span class="token punctuation">,</span><span class="token string">'MROGERS'</span><span class="token punctuation">,</span><span class="token string">'650.127.1834'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2900.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">135</span><span class="token punctuation">,</span><span class="token string">'Ki'</span><span class="token punctuation">,</span><span class="token string">'Gee'</span><span class="token punctuation">,</span><span class="token string">'KGEE'</span><span class="token punctuation">,</span><span class="token string">'650.127.1734'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2400.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">136</span><span class="token punctuation">,</span><span class="token string">'Hazel'</span><span class="token punctuation">,</span><span class="token string">'Philtanker'</span><span class="token punctuation">,</span><span class="token string">'HPHILTAN'</span><span class="token punctuation">,</span><span class="token string">'650.127.1634'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">137</span><span class="token punctuation">,</span><span class="token string">'Renske'</span><span class="token punctuation">,</span><span class="token string">'Ladwig'</span><span class="token punctuation">,</span><span class="token string">'RLADWIG'</span><span class="token punctuation">,</span><span class="token string">'650.121.1234'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3600.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">138</span><span class="token punctuation">,</span><span class="token string">'Stephen'</span><span class="token punctuation">,</span><span class="token string">'Stiles'</span><span class="token punctuation">,</span><span class="token string">'SSTILES'</span><span class="token punctuation">,</span><span class="token string">'650.121.2034'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">139</span><span class="token punctuation">,</span><span class="token string">'John'</span><span class="token punctuation">,</span><span class="token string">'Seo'</span><span class="token punctuation">,</span><span class="token string">'JSEO'</span><span class="token punctuation">,</span><span class="token string">'650.121.2019'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2700.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span><span class="token string">'Joshua'</span><span class="token punctuation">,</span><span class="token string">'Patel'</span><span class="token punctuation">,</span><span class="token string">'JPATEL'</span><span class="token punctuation">,</span><span class="token string">'650.121.1834'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">141</span><span class="token punctuation">,</span><span class="token string">'Trenna'</span><span class="token punctuation">,</span><span class="token string">'Rajs'</span><span class="token punctuation">,</span><span class="token string">'TRAJS'</span><span class="token punctuation">,</span><span class="token string">'650.121.8009'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">142</span><span class="token punctuation">,</span><span class="token string">'Curtis'</span><span class="token punctuation">,</span><span class="token string">'Davies'</span><span class="token punctuation">,</span><span class="token string">'CDAVIES'</span><span class="token punctuation">,</span><span class="token string">'650.121.2994'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">3100.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">143</span><span class="token punctuation">,</span><span class="token string">'Randall'</span><span class="token punctuation">,</span><span class="token string">'Matos'</span><span class="token punctuation">,</span><span class="token string">'RMATOS'</span><span class="token punctuation">,</span><span class="token string">'650.121.2874'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2600.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">144</span><span class="token punctuation">,</span><span class="token string">'Peter'</span><span class="token punctuation">,</span><span class="token string">'Vargas'</span><span class="token punctuation">,</span><span class="token string">'PVARGAS'</span><span class="token punctuation">,</span><span class="token string">'650.121.2004'</span><span class="token punctuation">,</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token number">2500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token string">'John'</span><span class="token punctuation">,</span><span class="token string">'Russell'</span><span class="token punctuation">,</span><span class="token string">'JRUSSEL'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.429268'</span><span class="token punctuation">,</span><span class="token string">'SA_MAN'</span><span class="token punctuation">,</span><span class="token number">14000.00</span><span class="token punctuation">,</span><span class="token number">0.40</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token string">'Karen'</span><span class="token punctuation">,</span><span class="token string">'Partners'</span><span class="token punctuation">,</span><span class="token string">'KPARTNER'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.467268'</span><span class="token punctuation">,</span><span class="token string">'SA_MAN'</span><span class="token punctuation">,</span><span class="token number">13500.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token string">'Alberto'</span><span class="token punctuation">,</span><span class="token string">'Errazuriz'</span><span class="token punctuation">,</span><span class="token string">'AERRAZUR'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.429278'</span><span class="token punctuation">,</span><span class="token string">'SA_MAN'</span><span class="token punctuation">,</span><span class="token number">12000.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token string">'Gerald'</span><span class="token punctuation">,</span><span class="token string">'Cambrault'</span><span class="token punctuation">,</span><span class="token string">'GCAMBRAU'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.619268'</span><span class="token punctuation">,</span><span class="token string">'SA_MAN'</span><span class="token punctuation">,</span><span class="token number">11000.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token string">'Eleni'</span><span class="token punctuation">,</span><span class="token string">'Zlotkey'</span><span class="token punctuation">,</span><span class="token string">'EZLOTKEY'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.429018'</span><span class="token punctuation">,</span><span class="token string">'SA_MAN'</span><span class="token punctuation">,</span><span class="token number">10500.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2002-12-23 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token string">'Peter'</span><span class="token punctuation">,</span><span class="token string">'Tucker'</span><span class="token punctuation">,</span><span class="token string">'PTUCKER'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.129268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">10000.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">151</span><span class="token punctuation">,</span><span class="token string">'David'</span><span class="token punctuation">,</span><span class="token string">'Bernstein'</span><span class="token punctuation">,</span><span class="token string">'DBERNSTE'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.345268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">9500.00</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">152</span><span class="token punctuation">,</span><span class="token string">'Peter'</span><span class="token punctuation">,</span><span class="token string">'Hall'</span><span class="token punctuation">,</span><span class="token string">'PHALL'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.478968'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">9000.00</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">153</span><span class="token punctuation">,</span><span class="token string">'Christopher'</span><span class="token punctuation">,</span><span class="token string">'Olsen'</span><span class="token punctuation">,</span><span class="token string">'COLSEN'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.498718'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">8000.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">154</span><span class="token punctuation">,</span><span class="token string">'Nanette'</span><span class="token punctuation">,</span><span class="token string">'Cambrault'</span><span class="token punctuation">,</span><span class="token string">'NCAMBRAU'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.987668'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7500.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">155</span><span class="token punctuation">,</span><span class="token string">'Oliver'</span><span class="token punctuation">,</span><span class="token string">'Tuvault'</span><span class="token punctuation">,</span><span class="token string">'OTUVAULT'</span><span class="token punctuation">,</span><span class="token string">'011.44.1344.486508'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7000.00</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">,</span><span class="token number">145</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">156</span><span class="token punctuation">,</span><span class="token string">'Janette'</span><span class="token punctuation">,</span><span class="token string">'K_ing'</span><span class="token punctuation">,</span><span class="token string">'JKING'</span><span class="token punctuation">,</span><span class="token string">'011.44.1345.429268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">10000.00</span><span class="token punctuation">,</span><span class="token number">0.35</span><span class="token punctuation">,</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">157</span><span class="token punctuation">,</span><span class="token string">'Patrick'</span><span class="token punctuation">,</span><span class="token string">'Sully'</span><span class="token punctuation">,</span><span class="token string">'PSULLY'</span><span class="token punctuation">,</span><span class="token string">'011.44.1345.929268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">9500.00</span><span class="token punctuation">,</span><span class="token number">0.35</span><span class="token punctuation">,</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">158</span><span class="token punctuation">,</span><span class="token string">'Allan'</span><span class="token punctuation">,</span><span class="token string">'McEwen'</span><span class="token punctuation">,</span><span class="token string">'AMCEWEN'</span><span class="token punctuation">,</span><span class="token string">'011.44.1345.829268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">9000.00</span><span class="token punctuation">,</span><span class="token number">0.35</span><span class="token punctuation">,</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">159</span><span class="token punctuation">,</span><span class="token string">'Lindsey'</span><span class="token punctuation">,</span><span class="token string">'Smith'</span><span class="token punctuation">,</span><span class="token string">'LSMITH'</span><span class="token punctuation">,</span><span class="token string">'011.44.1345.729268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">8000.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span><span class="token string">'Louise'</span><span class="token punctuation">,</span><span class="token string">'Doran'</span><span class="token punctuation">,</span><span class="token string">'LDORAN'</span><span class="token punctuation">,</span><span class="token string">'011.44.1345.629268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7500.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">161</span><span class="token punctuation">,</span><span class="token string">'Sarath'</span><span class="token punctuation">,</span><span class="token string">'Sewall'</span><span class="token punctuation">,</span><span class="token string">'SSEWALL'</span><span class="token punctuation">,</span><span class="token string">'011.44.1345.529268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7000.00</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">146</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">162</span><span class="token punctuation">,</span><span class="token string">'Clara'</span><span class="token punctuation">,</span><span class="token string">'Vishney'</span><span class="token punctuation">,</span><span class="token string">'CVISHNEY'</span><span class="token punctuation">,</span><span class="token string">'011.44.1346.129268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">10500.00</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">163</span><span class="token punctuation">,</span><span class="token string">'Danielle'</span><span class="token punctuation">,</span><span class="token string">'Greene'</span><span class="token punctuation">,</span><span class="token string">'DGREENE'</span><span class="token punctuation">,</span><span class="token string">'011.44.1346.229268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">9500.00</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">,</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">164</span><span class="token punctuation">,</span><span class="token string">'Mattea'</span><span class="token punctuation">,</span><span class="token string">'Marvins'</span><span class="token punctuation">,</span><span class="token string">'MMARVINS'</span><span class="token punctuation">,</span><span class="token string">'011.44.1346.329268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7200.00</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token punctuation">,</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span><span class="token string">'David'</span><span class="token punctuation">,</span><span class="token string">'Lee'</span><span class="token punctuation">,</span><span class="token string">'DLEE'</span><span class="token punctuation">,</span><span class="token string">'011.44.1346.529268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">6800.00</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token punctuation">,</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">166</span><span class="token punctuation">,</span><span class="token string">'Sundar'</span><span class="token punctuation">,</span><span class="token string">'Ande'</span><span class="token punctuation">,</span><span class="token string">'SANDE'</span><span class="token punctuation">,</span><span class="token string">'011.44.1346.629268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">6400.00</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token punctuation">,</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">167</span><span class="token punctuation">,</span><span class="token string">'Amit'</span><span class="token punctuation">,</span><span class="token string">'Banda'</span><span class="token punctuation">,</span><span class="token string">'ABANDA'</span><span class="token punctuation">,</span><span class="token string">'011.44.1346.729268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">6200.00</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token punctuation">,</span><span class="token number">147</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">,</span><span class="token string">'Lisa'</span><span class="token punctuation">,</span><span class="token string">'Ozer'</span><span class="token punctuation">,</span><span class="token string">'LOZER'</span><span class="token punctuation">,</span><span class="token string">'011.44.1343.929268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">11500.00</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">169</span><span class="token punctuation">,</span><span class="token string">'Harrison'</span><span class="token punctuation">,</span><span class="token string">'Bloom'</span><span class="token punctuation">,</span><span class="token string">'HBLOOM'</span><span class="token punctuation">,</span><span class="token string">'011.44.1343.829268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">10000.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">,</span><span class="token string">'Tayler'</span><span class="token punctuation">,</span><span class="token string">'Fox'</span><span class="token punctuation">,</span><span class="token string">'TFOX'</span><span class="token punctuation">,</span><span class="token string">'011.44.1343.729268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">9600.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">171</span><span class="token punctuation">,</span><span class="token string">'William'</span><span class="token punctuation">,</span><span class="token string">'Smith'</span><span class="token punctuation">,</span><span class="token string">'WSMITH'</span><span class="token punctuation">,</span><span class="token string">'011.44.1343.629268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7400.00</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">,</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">172</span><span class="token punctuation">,</span><span class="token string">'Elizabeth'</span><span class="token punctuation">,</span><span class="token string">'Bates'</span><span class="token punctuation">,</span><span class="token string">'EBATES'</span><span class="token punctuation">,</span><span class="token string">'011.44.1343.529268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7300.00</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">,</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">173</span><span class="token punctuation">,</span><span class="token string">'Sundita'</span><span class="token punctuation">,</span><span class="token string">'Kumar'</span><span class="token punctuation">,</span><span class="token string">'SKUMAR'</span><span class="token punctuation">,</span><span class="token string">'011.44.1343.329268'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">6100.00</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token punctuation">,</span><span class="token number">148</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">,</span><span class="token string">'Ellen'</span><span class="token punctuation">,</span><span class="token string">'Abel'</span><span class="token punctuation">,</span><span class="token string">'EABEL'</span><span class="token punctuation">,</span><span class="token string">'011.44.1644.429267'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">11000.00</span><span class="token punctuation">,</span><span class="token number">0.30</span><span class="token punctuation">,</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span><span class="token string">'Alyssa'</span><span class="token punctuation">,</span><span class="token string">'Hutton'</span><span class="token punctuation">,</span><span class="token string">'AHUTTON'</span><span class="token punctuation">,</span><span class="token string">'011.44.1644.429266'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">8800.00</span><span class="token punctuation">,</span><span class="token number">0.25</span><span class="token punctuation">,</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">,</span><span class="token string">'Jonathon'</span><span class="token punctuation">,</span><span class="token string">'Taylor'</span><span class="token punctuation">,</span><span class="token string">'JTAYLOR'</span><span class="token punctuation">,</span><span class="token string">'011.44.1644.429265'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">8600.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">177</span><span class="token punctuation">,</span><span class="token string">'Jack'</span><span class="token punctuation">,</span><span class="token string">'Livingston'</span><span class="token punctuation">,</span><span class="token string">'JLIVINGS'</span><span class="token punctuation">,</span><span class="token string">'011.44.1644.429264'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">8400.00</span><span class="token punctuation">,</span><span class="token number">0.20</span><span class="token punctuation">,</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">,</span><span class="token string">'Kimberely'</span><span class="token punctuation">,</span><span class="token string">'Grant'</span><span class="token punctuation">,</span><span class="token string">'KGRANT'</span><span class="token punctuation">,</span><span class="token string">'011.44.1644.429263'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">7000.00</span><span class="token punctuation">,</span><span class="token number">0.15</span><span class="token punctuation">,</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">179</span><span class="token punctuation">,</span><span class="token string">'Charles'</span><span class="token punctuation">,</span><span class="token string">'Johnson'</span><span class="token punctuation">,</span><span class="token string">'CJOHNSON'</span><span class="token punctuation">,</span><span class="token string">'011.44.1644.429262'</span><span class="token punctuation">,</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token number">6200.00</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token punctuation">,</span><span class="token number">149</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token string">'Winston'</span><span class="token punctuation">,</span><span class="token string">'Taylor'</span><span class="token punctuation">,</span><span class="token string">'WTAYLOR'</span><span class="token punctuation">,</span><span class="token string">'650.507.9876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">181</span><span class="token punctuation">,</span><span class="token string">'Jean'</span><span class="token punctuation">,</span><span class="token string">'Fleaur'</span><span class="token punctuation">,</span><span class="token string">'JFLEAUR'</span><span class="token punctuation">,</span><span class="token string">'650.507.9877'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3100.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">182</span><span class="token punctuation">,</span><span class="token string">'Martha'</span><span class="token punctuation">,</span><span class="token string">'Sullivan'</span><span class="token punctuation">,</span><span class="token string">'MSULLIVA'</span><span class="token punctuation">,</span><span class="token string">'650.507.9878'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">183</span><span class="token punctuation">,</span><span class="token string">'Girard'</span><span class="token punctuation">,</span><span class="token string">'Geoni'</span><span class="token punctuation">,</span><span class="token string">'GGEONI'</span><span class="token punctuation">,</span><span class="token string">'650.507.9879'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">184</span><span class="token punctuation">,</span><span class="token string">'Nandita'</span><span class="token punctuation">,</span><span class="token string">'Sarchand'</span><span class="token punctuation">,</span><span class="token string">'NSARCHAN'</span><span class="token punctuation">,</span><span class="token string">'650.509.1876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">4200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">185</span><span class="token punctuation">,</span><span class="token string">'Alexis'</span><span class="token punctuation">,</span><span class="token string">'Bull'</span><span class="token punctuation">,</span><span class="token string">'ABULL'</span><span class="token punctuation">,</span><span class="token string">'650.509.2876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">4100.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">186</span><span class="token punctuation">,</span><span class="token string">'Julia'</span><span class="token punctuation">,</span><span class="token string">'Dellinger'</span><span class="token punctuation">,</span><span class="token string">'JDELLING'</span><span class="token punctuation">,</span><span class="token string">'650.509.3876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3400.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">187</span><span class="token punctuation">,</span><span class="token string">'Anthony'</span><span class="token punctuation">,</span><span class="token string">'Cabrio'</span><span class="token punctuation">,</span><span class="token string">'ACABRIO'</span><span class="token punctuation">,</span><span class="token string">'650.509.4876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">188</span><span class="token punctuation">,</span><span class="token string">'Kelly'</span><span class="token punctuation">,</span><span class="token string">'Chung'</span><span class="token punctuation">,</span><span class="token string">'KCHUNG'</span><span class="token punctuation">,</span><span class="token string">'650.505.1876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">189</span><span class="token punctuation">,</span><span class="token string">'Jennifer'</span><span class="token punctuation">,</span><span class="token string">'Dilly'</span><span class="token punctuation">,</span><span class="token string">'JDILLY'</span><span class="token punctuation">,</span><span class="token string">'650.505.2876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3600.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">190</span><span class="token punctuation">,</span><span class="token string">'Timothy'</span><span class="token punctuation">,</span><span class="token string">'Gates'</span><span class="token punctuation">,</span><span class="token string">'TGATES'</span><span class="token punctuation">,</span><span class="token string">'650.505.3876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2900.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">191</span><span class="token punctuation">,</span><span class="token string">'Randall'</span><span class="token punctuation">,</span><span class="token string">'Perkins'</span><span class="token punctuation">,</span><span class="token string">'RPERKINS'</span><span class="token punctuation">,</span><span class="token string">'650.505.4876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">122</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">192</span><span class="token punctuation">,</span><span class="token string">'Sarah'</span><span class="token punctuation">,</span><span class="token string">'Bell'</span><span class="token punctuation">,</span><span class="token string">'SBELL'</span><span class="token punctuation">,</span><span class="token string">'650.501.1876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">4000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">193</span><span class="token punctuation">,</span><span class="token string">'Britney'</span><span class="token punctuation">,</span><span class="token string">'Everett'</span><span class="token punctuation">,</span><span class="token string">'BEVERETT'</span><span class="token punctuation">,</span><span class="token string">'650.501.2876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3900.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">194</span><span class="token punctuation">,</span><span class="token string">'Samuel'</span><span class="token punctuation">,</span><span class="token string">'McCain'</span><span class="token punctuation">,</span><span class="token string">'SMCCAIN'</span><span class="token punctuation">,</span><span class="token string">'650.501.3876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3200.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">195</span><span class="token punctuation">,</span><span class="token string">'Vance'</span><span class="token punctuation">,</span><span class="token string">'Jones'</span><span class="token punctuation">,</span><span class="token string">'VJONES'</span><span class="token punctuation">,</span><span class="token string">'650.501.4876'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2800.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">196</span><span class="token punctuation">,</span><span class="token string">'Alana'</span><span class="token punctuation">,</span><span class="token string">'Walsh'</span><span class="token punctuation">,</span><span class="token string">'AWALSH'</span><span class="token punctuation">,</span><span class="token string">'650.507.9811'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3100.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">197</span><span class="token punctuation">,</span><span class="token string">'Kevin'</span><span class="token punctuation">,</span><span class="token string">'Feeney'</span><span class="token punctuation">,</span><span class="token string">'KFEENEY'</span><span class="token punctuation">,</span><span class="token string">'650.507.9822'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">3000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">198</span><span class="token punctuation">,</span><span class="token string">'Donald'</span><span class="token punctuation">,</span><span class="token string">'OConnell'</span><span class="token punctuation">,</span><span class="token string">'DOCONNEL'</span><span class="token punctuation">,</span><span class="token string">'650.507.9833'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2600.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">199</span><span class="token punctuation">,</span><span class="token string">'Douglas'</span><span class="token punctuation">,</span><span class="token string">'Grant'</span><span class="token punctuation">,</span><span class="token string">'DGRANT'</span><span class="token punctuation">,</span><span class="token string">'650.507.9844'</span><span class="token punctuation">,</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token number">2600.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">124</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token string">'2014-03-05 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token string">'Jennifer'</span><span class="token punctuation">,</span><span class="token string">'Whalen'</span><span class="token punctuation">,</span><span class="token string">'JWHALEN'</span><span class="token punctuation">,</span><span class="token string">'515.123.4444'</span><span class="token punctuation">,</span><span class="token string">'AD_ASST'</span><span class="token punctuation">,</span><span class="token number">4400.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token string">'Michael'</span><span class="token punctuation">,</span><span class="token string">'Hartstein'</span><span class="token punctuation">,</span><span class="token string">'MHARTSTE'</span><span class="token punctuation">,</span><span class="token string">'515.123.5555'</span><span class="token punctuation">,</span><span class="token string">'MK_MAN'</span><span class="token punctuation">,</span><span class="token number">13000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">202</span><span class="token punctuation">,</span><span class="token string">'Pat'</span><span class="token punctuation">,</span><span class="token string">'Fay'</span><span class="token punctuation">,</span><span class="token string">'PFAY'</span><span class="token punctuation">,</span><span class="token string">'603.123.6666'</span><span class="token punctuation">,</span><span class="token string">'MK_REP'</span><span class="token punctuation">,</span><span class="token number">6000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">203</span><span class="token punctuation">,</span><span class="token string">'Susan'</span><span class="token punctuation">,</span><span class="token string">'Mavris'</span><span class="token punctuation">,</span><span class="token string">'SMAVRIS'</span><span class="token punctuation">,</span><span class="token string">'515.123.7777'</span><span class="token punctuation">,</span><span class="token string">'HR_REP'</span><span class="token punctuation">,</span><span class="token number">6500.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">204</span><span class="token punctuation">,</span><span class="token string">'Hermann'</span><span class="token punctuation">,</span><span class="token string">'Baer'</span><span class="token punctuation">,</span><span class="token string">'HBAER'</span><span class="token punctuation">,</span><span class="token string">'515.123.8888'</span><span class="token punctuation">,</span><span class="token string">'PR_REP'</span><span class="token punctuation">,</span><span class="token number">10000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token string">'Shelley'</span><span class="token punctuation">,</span><span class="token string">'Higgins'</span><span class="token punctuation">,</span><span class="token string">'SHIGGINS'</span><span class="token punctuation">,</span><span class="token string">'515.123.8080'</span><span class="token punctuation">,</span><span class="token string">'AC_MGR'</span><span class="token punctuation">,</span><span class="token number">12000.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">206</span><span class="token punctuation">,</span><span class="token string">'William'</span><span class="token punctuation">,</span><span class="token string">'Gietz'</span><span class="token punctuation">,</span><span class="token string">'WGIETZ'</span><span class="token punctuation">,</span><span class="token string">'515.123.8181'</span><span class="token punctuation">,</span><span class="token string">'AC_ACCOUNT'</span><span class="token punctuation">,</span><span class="token number">8300.00</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token number">205</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token string">'2016-03-03 00:00:00'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*Table structure for table `jobs` */</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>jobs<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>jobs<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>job_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>job_title<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>min_salary<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>max_salary<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>gb2312<span class="token punctuation">;</span><span class="token comment">/*Data for the table `jobs` */</span><span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token punctuation">`</span>jobs<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>job_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>job_title<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>min_salary<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>max_salary<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">'AC_ACCOUNT'</span><span class="token punctuation">,</span><span class="token string">'Public Accountant'</span><span class="token punctuation">,</span><span class="token number">4200</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'AC_MGR'</span><span class="token punctuation">,</span><span class="token string">'Accounting Manager'</span><span class="token punctuation">,</span><span class="token number">8200</span><span class="token punctuation">,</span><span class="token number">16000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'AD_ASST'</span><span class="token punctuation">,</span><span class="token string">'Administration Assistant'</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'AD_PRES'</span><span class="token punctuation">,</span><span class="token string">'President'</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">,</span><span class="token number">40000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'AD_VP'</span><span class="token punctuation">,</span><span class="token string">'Administration Vice President'</span><span class="token punctuation">,</span><span class="token number">15000</span><span class="token punctuation">,</span><span class="token number">30000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'FI_ACCOUNT'</span><span class="token punctuation">,</span><span class="token string">'Accountant'</span><span class="token punctuation">,</span><span class="token number">4200</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'FI_MGR'</span><span class="token punctuation">,</span><span class="token string">'Finance Manager'</span><span class="token punctuation">,</span><span class="token number">8200</span><span class="token punctuation">,</span><span class="token number">16000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'HR_REP'</span><span class="token punctuation">,</span><span class="token string">'Human Resources Representative'</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token string">'Programmer'</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'MK_MAN'</span><span class="token punctuation">,</span><span class="token string">'Marketing Manager'</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">,</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'MK_REP'</span><span class="token punctuation">,</span><span class="token string">'Marketing Representative'</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">,</span><span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PR_REP'</span><span class="token punctuation">,</span><span class="token string">'Public Relations Representative'</span><span class="token punctuation">,</span><span class="token number">4500</span><span class="token punctuation">,</span><span class="token number">10500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PU_CLERK'</span><span class="token punctuation">,</span><span class="token string">'Purchasing Clerk'</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token number">5500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'PU_MAN'</span><span class="token punctuation">,</span><span class="token string">'Purchasing Manager'</span><span class="token punctuation">,</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">15000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'SA_MAN'</span><span class="token punctuation">,</span><span class="token string">'Sales Manager'</span><span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">,</span><span class="token number">20000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'SA_REP'</span><span class="token punctuation">,</span><span class="token string">'Sales Representative'</span><span class="token punctuation">,</span><span class="token number">6000</span><span class="token punctuation">,</span><span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'SH_CLERK'</span><span class="token punctuation">,</span><span class="token string">'Shipping Clerk'</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token number">5500</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'ST_CLERK'</span><span class="token punctuation">,</span><span class="token string">'Stock Clerk'</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'ST_MAN'</span><span class="token punctuation">,</span><span class="token string">'Stock Manager'</span><span class="token punctuation">,</span><span class="token number">5500</span><span class="token punctuation">,</span><span class="token number">8500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*Table structure for table `locations` */</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>locations<span class="token punctuation">`</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>locations<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>location_id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>street_address<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>postal_code<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>city<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>state_province<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>country_id<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">3201</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>gb2312<span class="token punctuation">;</span><span class="token comment">/*Data for the table `locations` */</span><span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token punctuation">`</span>locations<span class="token punctuation">`</span><span class="token punctuation">(</span><span class="token punctuation">`</span>location_id<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>street_address<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>postal_code<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>city<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>state_province<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>country_id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">'1297 Via Cola di Rie'</span><span class="token punctuation">,</span><span class="token string">'00989'</span><span class="token punctuation">,</span><span class="token string">'Roma'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'IT'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1100</span><span class="token punctuation">,</span><span class="token string">'93091 Calle della Testa'</span><span class="token punctuation">,</span><span class="token string">'10934'</span><span class="token punctuation">,</span><span class="token string">'Venice'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'IT'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1200</span><span class="token punctuation">,</span><span class="token string">'2017 Shinjuku-ku'</span><span class="token punctuation">,</span><span class="token string">'1689'</span><span class="token punctuation">,</span><span class="token string">'Tokyo'</span><span class="token punctuation">,</span><span class="token string">'Tokyo Prefecture'</span><span class="token punctuation">,</span><span class="token string">'JP'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1300</span><span class="token punctuation">,</span><span class="token string">'9450 Kamiya-cho'</span><span class="token punctuation">,</span><span class="token string">'6823'</span><span class="token punctuation">,</span><span class="token string">'Hiroshima'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'JP'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1400</span><span class="token punctuation">,</span><span class="token string">'2014 Jabberwocky Rd'</span><span class="token punctuation">,</span><span class="token string">'26192'</span><span class="token punctuation">,</span><span class="token string">'Southlake'</span><span class="token punctuation">,</span><span class="token string">'Texas'</span><span class="token punctuation">,</span><span class="token string">'US'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">,</span><span class="token string">'2011 Interiors Blvd'</span><span class="token punctuation">,</span><span class="token string">'99236'</span><span class="token punctuation">,</span><span class="token string">'South San Francisco'</span><span class="token punctuation">,</span><span class="token string">'California'</span><span class="token punctuation">,</span><span class="token string">'US'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1600</span><span class="token punctuation">,</span><span class="token string">'2007 Zagora St'</span><span class="token punctuation">,</span><span class="token string">'50090'</span><span class="token punctuation">,</span><span class="token string">'South Brunswick'</span><span class="token punctuation">,</span><span class="token string">'New Jersey'</span><span class="token punctuation">,</span><span class="token string">'US'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1700</span><span class="token punctuation">,</span><span class="token string">'2004 Charade Rd'</span><span class="token punctuation">,</span><span class="token string">'98199'</span><span class="token punctuation">,</span><span class="token string">'Seattle'</span><span class="token punctuation">,</span><span class="token string">'Washington'</span><span class="token punctuation">,</span><span class="token string">'US'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1800</span><span class="token punctuation">,</span><span class="token string">'147 Spadina Ave'</span><span class="token punctuation">,</span><span class="token string">'M5V 2L7'</span><span class="token punctuation">,</span><span class="token string">'Toronto'</span><span class="token punctuation">,</span><span class="token string">'Ontario'</span><span class="token punctuation">,</span><span class="token string">'CA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1900</span><span class="token punctuation">,</span><span class="token string">'6092 Boxwood St'</span><span class="token punctuation">,</span><span class="token string">'YSW 9T2'</span><span class="token punctuation">,</span><span class="token string">'Whitehorse'</span><span class="token punctuation">,</span><span class="token string">'Yukon'</span><span class="token punctuation">,</span><span class="token string">'CA'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span><span class="token string">'40-5-12 Laogianggen'</span><span class="token punctuation">,</span><span class="token string">'190518'</span><span class="token punctuation">,</span><span class="token string">'Beijing'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'CN'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2100</span><span class="token punctuation">,</span><span class="token string">'1298 Vileparle (E)'</span><span class="token punctuation">,</span><span class="token string">'490231'</span><span class="token punctuation">,</span><span class="token string">'Bombay'</span><span class="token punctuation">,</span><span class="token string">'Maharashtra'</span><span class="token punctuation">,</span><span class="token string">'IN'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2200</span><span class="token punctuation">,</span><span class="token string">'12-98 Victoria Street'</span><span class="token punctuation">,</span><span class="token string">'2901'</span><span class="token punctuation">,</span><span class="token string">'Sydney'</span><span class="token punctuation">,</span><span class="token string">'New South Wales'</span><span class="token punctuation">,</span><span class="token string">'AU'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2300</span><span class="token punctuation">,</span><span class="token string">'198 Clementi North'</span><span class="token punctuation">,</span><span class="token string">'540198'</span><span class="token punctuation">,</span><span class="token string">'Singapore'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'SG'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2400</span><span class="token punctuation">,</span><span class="token string">'8204 Arthur St'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'London'</span><span class="token punctuation">,</span><span class="token boolean">NULL</span><span class="token punctuation">,</span><span class="token string">'UK'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token string">'Magdalen Centre, The Oxford Science Park'</span><span class="token punctuation">,</span><span class="token string">'OX9 9ZB'</span><span class="token punctuation">,</span><span class="token string">'Oxford'</span><span class="token punctuation">,</span><span class="token string">'Oxford'</span><span class="token punctuation">,</span><span class="token string">'UK'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2600</span><span class="token punctuation">,</span><span class="token string">'9702 Chester Road'</span><span class="token punctuation">,</span><span class="token string">'09629850293'</span><span class="token punctuation">,</span><span class="token string">'Stretford'</span><span class="token punctuation">,</span><span class="token string">'Manchester'</span><span class="token punctuation">,</span><span class="token string">'UK'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2700</span><span class="token punctuation">,</span><span class="token string">'Schwanthalerstr. 7031'</span><span class="token punctuation">,</span><span class="token string">'80925'</span><span class="token punctuation">,</span><span class="token string">'Munich'</span><span class="token punctuation">,</span><span class="token string">'Bavaria'</span><span class="token punctuation">,</span><span class="token string">'DE'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2800</span><span class="token punctuation">,</span><span class="token string">'Rua Frei Caneca 1360 '</span><span class="token punctuation">,</span><span class="token string">'01307-002'</span><span class="token punctuation">,</span><span class="token string">'Sao Paulo'</span><span class="token punctuation">,</span><span class="token string">'Sao Paulo'</span><span class="token punctuation">,</span><span class="token string">'BR'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2900</span><span class="token punctuation">,</span><span class="token string">'20 Rue des Corps-Saints'</span><span class="token punctuation">,</span><span class="token string">'1730'</span><span class="token punctuation">,</span><span class="token string">'Geneva'</span><span class="token punctuation">,</span><span class="token string">'Geneve'</span><span class="token punctuation">,</span><span class="token string">'CH'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token string">'Murtenstrasse 921'</span><span class="token punctuation">,</span><span class="token string">'3095'</span><span class="token punctuation">,</span><span class="token string">'Bern'</span><span class="token punctuation">,</span><span class="token string">'BE'</span><span class="token punctuation">,</span><span class="token string">'CH'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3100</span><span class="token punctuation">,</span><span class="token string">'Pieter Breughelstraat 837'</span><span class="token punctuation">,</span><span class="token string">'3029SK'</span><span class="token punctuation">,</span><span class="token string">'Utrecht'</span><span class="token punctuation">,</span><span class="token string">'Utrecht'</span><span class="token punctuation">,</span><span class="token string">'NL'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3200</span><span class="token punctuation">,</span><span class="token string">'Mariano Escobedo 9991'</span><span class="token punctuation">,</span><span class="token string">'11932'</span><span class="token punctuation">,</span><span class="token string">'Mexico City'</span><span class="token punctuation">,</span><span class="token string">'Distrito Federal,'</span><span class="token punctuation">,</span><span class="token string">'MX'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */</span><span class="token punctuation">;</span><span class="token comment">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */</span><span class="token punctuation">;</span><span class="token comment">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */</span><span class="token punctuation">;</span><span class="token comment">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、语法"><a href="#二、语法" class="headerlink" title="二、语法"></a>二、语法</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT [ALL|DISTINCT]{*|table.*|table.fidld1[as alias1][,table.filed2[as alias2]][,...]}FROM tableName [as table_alias] #联合查询[WHERE ...] #筛选条件[GROUP BY ...] #指定结果按哪几个字段分组[HAVING] #过滤分组的记录必须满足的次要条件[ORDER BY] #指定查询记录按一个或多个字段排序[LIMIT {[offset,]row_count|row_countOFFSET offset}]; #指定查询的距离从哪条至哪条<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>[]</code> 表示可选，<code>{}</code> 表示必有一个被选。</p></blockquote><h2 id="三、查询指定表的字段"><a href="#三、查询指定表的字段" class="headerlink" title="三、查询指定表的字段"></a>三、查询指定表的字段</h2><h3 id="3-1-语法"><a href="#3-1-语法" class="headerlink" title="3.1 语法"></a>3.1 语法</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">as 别名];<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>AS</code> 为起别名</p></blockquote><ul><li>可给数据列取别名</li><li>可给表取别名</li><li>可把经计算或直接的结果用一个新名称来代替</li><li><code>AS</code> 关键字可以省略</li></ul><p>示例 1：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT`last_name`,`salary`,`email`FROM`employees`;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/RANZlFin8YrJxyE.png" alt="image-20220127190826297"></p><p>示例 2：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span><span class="token punctuation">`</span>last_name<span class="token punctuation">`</span> <span class="token keyword">AS</span> 姓<span class="token punctuation">,</span><span class="token punctuation">`</span>salary<span class="token punctuation">`</span> <span class="token keyword">AS</span> 工资<span class="token punctuation">,</span><span class="token punctuation">`</span>email<span class="token punctuation">`</span> <span class="token keyword">AS</span> 邮箱<span class="token keyword">FROM</span><span class="token punctuation">`</span>employees<span class="token punctuation">`</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/bGLmVNEvQayq8sZ.png" alt="image-20220127190916417"></p><blockquote><p>通过上面两个示例我们也看到了使用别名和不使用别名的区别。</p></blockquote><p>同时我们可以通过 <code>SELECT * FROM table_name</code> 来查询所有字段。</p><h3 id="3-2-关键字-DISTINCT-和-ALL"><a href="#3-2-关键字-DISTINCT-和-ALL" class="headerlink" title="3.2 关键字 DISTINCT 和 ALL"></a>3.2 关键字 <code>DISTINCT 和 ALL</code></h3><p>作用：去重，即如果在查询结果中有重复的记录，只返回一条。</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT DISTINCT `department_id` FROM `employees`;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条语句查询结果为：</p><p><img src="https://s2.loli.net/2022/01/27/rBRvxU3VlwSIXJD.png" alt="image-20220127185804019"></p><p>如果什么也不写，则默认为 <code>ALL</code>，即 <code>SELECT ALL * FROM table_name;</code> 和 <code>SELECT * FROM table_name</code> 是等价的。</p><blockquote><p>我们可以通过 <code>SELECT DISTINCT COUNT(字段名) FROM table_name</code> 来查询某个字段有多少不的值。</p></blockquote><h3 id="3-3-常量、表达式与函数"><a href="#3-3-常量、表达式与函数" class="headerlink" title="3.3 常量、表达式与函数"></a>3.3 常量、表达式与函数</h3><ul><li>查询常量：<code>SELECT 常量;</code></li><li>查询表达式：<code>SELECT 表达式;</code></li><li>查询函数：<code>SELECT 函数名(参数列表);</code></li></ul><p>例如：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 100;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/IYoBAeQwZW3jPVG.png" alt="image-20220127191836720"></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 100*99;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/4fd7eiZ8W1YTUqc.png" alt="image-20220127191905109"></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT VERSION();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/YrPOJLpQI8dDEHy.png" alt="image-20220127191951436"></p><h4 id="3-3-1-常用函数介绍"><a href="#3-3-1-常用函数介绍" class="headerlink" title="3.3.1 常用函数介绍"></a>3.3.1 常用函数介绍</h4><h5 id="concat-函数"><a href="#concat-函数" class="headerlink" title="concat() 函数"></a><code>concat()</code> 函数</h5><p>功能：拼接字符（串）</p><p>语法：<code>SELECT CONCAT(字符1，字符2，字符3...);</code></p><h5 id="ifnull-函数"><a href="#ifnull-函数" class="headerlink" title="ifnull() 函数"></a><code>ifnull()</code> 函数</h5><p>功能：判断某字段或表达式是否为 <code>null</code>，如果为 <code>null</code> 返回指定的值，否则返回原本的值</p><p>语法：<code>SELECT ifnull(字段,字段为null是返回的值);</code></p><h5 id="isnull-函数"><a href="#isnull-函数" class="headerlink" title="isnull() 函数"></a><code>isnull()</code> 函数</h5><p>功能：判断某字段或表达式是否为 <code>null</code>，如果是，则返回 1，否则返回 0.</p><p>语法：<code>SELECT ISNULL(字段) FROM 表名;</code></p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><p>例一：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#案例：查询员工名和姓连接成一个字段，并显示为 姓名SELECT CONCAT(last_name,first_name) AS 姓名 FROM employees;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/TMXFPfCl1qQuetw.png" alt="img"></p><p>例二：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT IFNULL(commission_pct,0) AS 奖金率,commission_pctFROM employees;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/R4qmEDSbFGakt6h.png" alt="img"></p><p>例三：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT ISNULL(commission_pct),commission_pct FROM employees;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/xAHkQopN48zgq7c.png" alt="img"></p><h2 id="四、条件查询"><a href="#四、条件查询" class="headerlink" title="四、条件查询"></a>四、条件查询</h2><p>作用：用于过滤、筛选出表中符合<strong>筛选条件</strong>的记录。</p><p>筛选条件可由一个或多个逻辑表达式组成，结果一般为真或假。</p><p>条件运算符有：<code>&gt; &lt; = &lt;&gt; != &gt;= &lt;= &lt;=&gt;</code>.</p><blockquote><p><code>&lt;&gt;</code> 同 <code>!=</code> 表示不等于，<code>&lt;=&gt;</code> 是安全对于。</p></blockquote><p>逻辑运算符有：</p><table><thead><tr><th>操作符名称</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td><code>AND</code> 或 <code>&amp;&amp;</code></td><td><code>条件表达式1 AND 条件表达式2</code> 或 <code>条件表达式1 &amp;&amp; 条件表达式2</code></td><td>逻辑与，全真则真，一假则假</td></tr><tr><td><code>OR</code> 或 `</td><td></td><td>`</td></tr><tr><td><code>NOT</code> 或 <code>!</code></td><td><code>NOT 条件表达式</code> 或 <code>!条件表达式</code></td><td>逻辑假，真则假，假则真</td></tr></tbody></table><p>除了按条件表达式查询外，还有模糊查询，模糊查询用到的关键字有：</p><ul><li><code>LIKE</code>：一般搭配通配符使用，可以匹配字符型或数值型。</li><li><code>BETWEEN ... AND ...</code>.</li><li><code>IN</code>.</li><li><code>IS NULL|IS NOT NULL</code>：用于判断 <code>NULL</code> 值。</li></ul><h3 id="4-1-按条件表达式或逻辑表达式查询"><a href="#4-1-按条件表达式或逻辑表达式查询" class="headerlink" title="4.1 按条件表达式或逻辑表达式查询"></a>4.1 按条件表达式或逻辑表达式查询</h3><blockquote><p>逻辑表达式是多个通过逻辑运算符连接起来的条件表达式。</p></blockquote><p>语法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 字段1 [[AS] 别名1],字段2 [[AS] 别名2],字段3 [[AS] 别名3],...字段n [[AS] 别名n]WHERE条件表达式1 [逻辑运算符1 条件表达式2 [逻辑运算符1 条件表达式2...]];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-按条件表达式或逻辑表达式查询的例子"><a href="#4-2-按条件表达式或逻辑表达式查询的例子" class="headerlink" title="4.2 按条件表达式或逻辑表达式查询的例子"></a>4.2 按条件表达式或逻辑表达式查询的例子</h3><p>例一：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询工资大于 12000 的员工信息SELECT * FROM employees WHERE salary &gt; 12000;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/b52jitMvfFBZSeu.png" alt="image-20220127225520178"></p><p>例二：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询部门编号不等于90号的员工们和部门编号SELECT last_name,department_id FROM employees WHERE department_id &lt;&gt; 90;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/sGWpYuDeX6oyOJN.png" alt="image-20220127225647042"></p><p>例三：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECTlast_name AS 名,salary AS 工资,salary*12*IFNULL(commission_pct,0)FROMemployeesWHEREsalary&gt;=10000 AND salary&lt;=20000;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/MVS1h2HFQGvn9wT.png" alt="image-20220127225854682"></p><p>例四：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询部门编号不是在90到110之间，或者工资高于15000的通过信息SELECT*FROMemployeesWHERENOT(department_id&gt;=90 AND department_id&lt;= 110) OR salary&gt;15000;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/lugb7aPN4QcCLYM.png" alt="image-20220127230028325"></p><h3 id="4-3-模糊查询"><a href="#4-3-模糊查询" class="headerlink" title="4.3 模糊查询"></a>4.3 模糊查询</h3><table><thead><tr><th>操作符名称</th><th>语法</th><th>描述</th></tr></thead><tbody><tr><td><code>IS NULL</code></td><td><code>a is NULL</code></td><td>若 a 为 <code>NULL</code>，则结果为真</td></tr><tr><td><code>IS NOT NULL</code></td><td><code>a IS NOT BULL</code></td><td>若 a 不为 <code>NULL</code>，则结果为真</td></tr><tr><td><code>BETWEEN ... AND ...</code></td><td><code>a BETWEEN b AND c </code></td><td>若 a 范围在 b 和 c 之间，则结果为真</td></tr><tr><td><code>NOT BETWEEN ... AND ...</code></td><td><code>a NOT  BETWEEN b AND c </code></td><td>若 a 范围不在 b 和 c 之间，则结果为真</td></tr><tr><td><code>LIKE</code></td><td><code>a LIKE b</code></td><td><code>SQL</code> 匹配模式，若 a 匹配 b，则结果为真</td></tr><tr><td><code>IN</code></td><td><code>a IN(a1,a2,a3,...)</code></td><td>若 a 等于 a1、a2、a3……中的某一个，则结果为真</td></tr></tbody></table><blockquote><p>最常用的通配符有：<code>%</code> 和 <code>_</code>，分别表示任意多个字符（包括 0 个）和单个字符。</p></blockquote><h3 id="4-4-按条件查询的例子"><a href="#4-4-按条件查询的例子" class="headerlink" title="4.4 按条件查询的例子"></a>4.4 按条件查询的例子</h3><p>例一：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询员工名中包含字符 a 的员工信息SELECT*FROM employeesWHERElast_name LIKE '%a%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/tG1HaXxfW7q8h63.png" alt="image-20220127231151924"></p><p>例二：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询员工名中第三个字符为 n，第五个字符为 l 的员工名和工资SELECT last_name,salaryFROM employeesWHERElast_name LIKE '__n_l%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/wKXGnmlIF9bEdYc.png" alt="image-20220127231251874"></p><p>例三：</p><pre class="line-numbers language-mysq" data-language="mysq"><code class="language-mysq">#查询员工名中第二个字符为 _ 的员工名SELECTlast_nameFROMemployeesWHERElast_name LIKE '_$_%' ESCAPE '$';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/AIR8wuDdngWvMzH.png" alt="image-20220127231339095"></p><p>例四：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询员工编号在100到120之间所有的员工信息SELECT*FROMemployeesWHEREemployee_id BETWEEN 100 AND 120;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/9B7uSOh4mwzeCqd.png" alt="image-20220127231504799"></p><p>例五：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询员工的工种编号是 IT_PROG、AD_VP、AD_PRES 中的一个的员工名和工种编号SELECTlast_name,job_idFROM employeesWHEREjob_id IN('IT_PROG','AD_VP','AD_PRES');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/JARVZEKrINedguo.png" alt="image-20220127231609324"></p><p>例六：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询有奖金的员工名和奖金率SELECTlast_name,commission_pctFROM employeesWHEREcommission_pct IS NOT NULL;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/zjqrQdApv2Omktg.png" alt="image-20220127231719052"></p><h3 id="4-5-几点说明"><a href="#4-5-几点说明" class="headerlink" title="4.5 几点说明"></a>4.5 几点说明</h3><ol><li><code>a BETWEEN b AND c</code> 等价于 <code>a &gt;= b &amp;&amp; a &lt;= c </code>，故 b 和 c 的位置不可对调。</li><li><code>BETWEEN ... AND ...</code> 包含临界值。</li><li><code>=</code> 和 <code>&lt;&gt;</code> 不可以判断 <code>NULL</code>  值，<code>IS NULL</code> 或 <code>IS NOT NULL</code> 可以。</li><li><code>IS NULL</code> 与 <code>&lt;=&gt;</code>比较</li></ol><table><thead><tr><th></th><th>普通类型的数值</th><th><code>null</code>值</th><th>可读性</th></tr></thead><tbody><tr><td><code>IS NULL</code></td><td>×</td><td>√</td><td>√</td></tr><tr><td><code>&lt;=&gt;</code></td><td>√</td><td>√</td><td>×</td></tr></tbody></table><h2 id="五、排序查询"><a href="#五、排序查询" class="headerlink" title="五、排序查询"></a>五、排序查询</h2><p>语法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 查询列表 FROM 表 ORDER BY 查询列表 [ASC|DESC]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><ol><li><code>ASC</code> 代表升序，<code>DESC</code> 代表降序，不写默认为升序</li><li><code>ORDER BY</code> 字句中支持单个字段、多个字段、表达式、函数、别名</li><li><code>ORDER BY</code> 子句一般放在查询语句最后面，除 <code>LIMLT</code> 子句之外</li></ol></blockquote><h3 id="5-1-例子"><a href="#5-1-例子" class="headerlink" title="5.1 例子"></a>5.1 例子</h3><p>例一：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询员工信息，要求工资从高到低排序SELECT*FROM`employees`ORDER BY`salary` DESC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/28/k5hpvGAN6xPgR7b.png" alt="image-20220128125247588"></p><p>例二：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询部门编号&gt;=90的员工信息，要求按入职时间的先后进行排序SELECT*FROM `employees`WHERE`department_id`&gt;=90ORDER BYhiredate ASC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/28/Equ6NUDWtrwlkTj.png" alt="image-20220128125901249"></p><p>例三：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#按年薪高低显示员工信息和年薪SELECT*,salary*12*(IFNULL(commission_pct,0)+1) AS 年薪FROMemployeesORDER BY年薪 DESC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/28/ZgMeJKcfVxrRq47.png" alt="image-20220128125936347"></p><p>例四：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#按姓名长度显示员工的姓名和工资SELECTlast_name AS 姓名,salary AS 工资FROMemployeesORDER BYLENGTH(last_name) DESC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/28/tL7bIBNC3o2F16E.png" alt="image-20220128130016993"></p><p>例五：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#查询员工信息，要求先按工资升序排序，再按员工降序编号排序SELECT*FROMemployeesORDER BYsalary ASC,employee_id DESC;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s3.bmp.ovh/imgs/2022/01/45b08060196f29a7.png"></p><h2 id="六、分组查询"><a href="#六、分组查询" class="headerlink" title="六、分组查询"></a>六、分组查询</h2><p>语法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">SELECT 分组函数,分组后的字段FROM 表[WHERE 筛选条件]GROUP BY 分组的字段[HAVING 分组后的筛选][ORDER BY 排序列表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关于函数的详细介绍请参阅：<a href="/posts/1e2619a3.html">MySQL中的函数</a></p><p>分组查询中的筛选条件可分为两类：</p><table><thead><tr><th></th><th>数据源</th><th>位置</th><th>关键字</th></tr></thead><tbody><tr><td>分组前筛选</td><td>原始表</td><td><code>GROUP BY</code> 子句的前面</td><td><code>WHERE</code></td></tr><tr><td>分组后筛选</td><td>分组后的结果集</td><td><code>GROUP BY</code> 子句的后面</td><td><code>HAVING</code></td></tr></tbody></table><ol><li>分组函数做条件肯定是放在 <code>HAING</code> 子句中</li><li>能用分组前筛选的，优先考虑使用分组前筛选</li><li><code>GROUP BY</code> 子句支持单个字段分组，多个字段分组（多个 字段之间有用逗号隔开，没有顺序要求）、表达式或函数（用得较少）</li><li>也可以添加排序（排序放在整个分组查询的最后）</li></ol><h3 id="6-1-例子"><a href="#6-1-例子" class="headerlink" title="6.1 例子"></a>6.1 例子</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/categories/MySQL/"/>
    
    
    <category term="数据库" scheme="https://lemonsama123.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>DML</title>
    <link href="https://lemonsama123.gitee.io/posts/b26fc0fd.html"/>
    <id>https://lemonsama123.gitee.io/posts/b26fc0fd.html</id>
    <published>2022-01-27T07:21:33.000Z</published>
    <updated>2022-01-27T14:27:14.339Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/categories/MySQL/"/>
    
    
    <category term="数据库" scheme="https://lemonsama123.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>DDL</title>
    <link href="https://lemonsama123.gitee.io/posts/63ad7bb4.html"/>
    <id>https://lemonsama123.gitee.io/posts/63ad7bb4.html</id>
    <published>2022-01-27T07:21:31.000Z</published>
    <updated>2022-01-27T10:29:08.091Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p><code>Data Definition Language</code>，简称 <code>DDL</code>，<a href="https://baike.baidu.com/item/DDL/21997?fr=aladdin">数据定义语言</a>，是用于定义和管理数据如数据库、数据表这样的数据对象对象的语言，是 <code>SQL</code> 的一个子集。主要作用就是数据库和数据表的创建、修改和删除，用到的关键字分别为：<code>create</code>、<code>alter</code>、<code>drop</code>.</p><h2 id="二、库的管理"><a href="#二、库的管理" class="headerlink" title="二、库的管理"></a>二、库的管理</h2><p>语言：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#创建数据库</span><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">]</span> 库名 <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token punctuation">[</span><span class="token operator">=</span><span class="token punctuation">]</span> 字符集名<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">#修改数据库的名字</span><span class="token keyword">rename</span> <span class="token keyword">database</span> 旧表名 <span class="token keyword">to</span> 新表名<span class="token punctuation">;</span><span class="token comment">#修改库的字符集</span><span class="token keyword">alter</span> <span class="token keyword">database</span> 库名 <span class="token keyword">character</span> <span class="token keyword">set</span> 字符集名<span class="token punctuation">;</span><span class="token comment">#删除数据库</span><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token punctuation">[</span><span class="token keyword">if</span> <span class="token keyword">exists</span><span class="token punctuation">]</span> 数据库名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>来个例子：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">#创建一个<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/categories/MySQL/"/>
    
    
    <category term="数据库" scheme="https://lemonsama123.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>结构化查询语言的介绍与基本操作</title>
    <link href="https://lemonsama123.gitee.io/posts/7fc1a07b.html"/>
    <id>https://lemonsama123.gitee.io/posts/7fc1a07b.html</id>
    <published>2022-01-25T11:13:19.000Z</published>
    <updated>2022-01-27T15:36:05.980Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、结构化查询语言的分类"><a href="#一、结构化查询语言的分类" class="headerlink" title="一、结构化查询语言的分类"></a>一、结构化查询语言的分类</h2><table><thead><tr><th align="center">名称</th><th align="center">解释</th><th align="center">命令</th></tr></thead><tbody><tr><td align="center"><a href="/posts/63ad7bb4.html">DDL</a>（数据定义语言）</td><td align="center">定义和管理数据对象，如数据库、数据表等</td><td align="center"><code>create</code>、<code>drop</code>、<code>alter</code></td></tr><tr><td align="center"><a href="/posts/b26fc0fd.html">DML</a>（数据操作语言）</td><td align="center">用于操作数据库对象中所包含的数据</td><td align="center"><code>insert</code>、<code>update</code>、<code>delete</code></td></tr><tr><td align="center"><a href="/posts/54189da0.html">DQL</a>（数据查询语言）</td><td align="center">用于查询数据库数据</td><td align="center"><code>select</code></td></tr><tr><td align="center"><a href="/posts/2ceced73.html">DCL</a>（数据控制语言）</td><td align="center">用于管理数据库的语言，包括管理权限及数据更改</td><td align="center"><code>grant</code>、<code>commit</code>、<code>rollback</code></td></tr></tbody></table><blockquote><p>补充几个关于数据库的操作</p></blockquote><ul><li>创建数据库：<code>create database [if not exists] 数据库名;</code></li><li>删除数据库：<code>drop database [if exists] 数据库名;</code></li><li>查看数据库：<code>show databases;</code></li><li>使用数据库：<code>use 数据库名;</code></li></ul><h2 id="二、可视化工具介绍"><a href="#二、可视化工具介绍" class="headerlink" title="二、可视化工具介绍"></a>二、可视化工具介绍</h2><p>这里要介绍的可视化工具是 <code>SQLyog</code>.</p><p><img src="https://s2.loli.net/2022/01/27/jMOcvurEo64t9ZW.png" alt="SQLyog"></p><p>特点：简洁，易用，图形化。</p><blockquote><p><code>IntelliJ IDEA</code> 也可以连接到数据。</p></blockquote><p><img src="https://s2.loli.net/2022/01/27/3eJaSbnhpUBR6PT.png" alt="IntelliJ IDEA"></p><p><img src="https://s2.loli.net/2022/01/27/YK96yIPZUbldhSp.png" alt="IntelliJ IDEA"></p><p><img src="https://s2.loli.net/2022/01/27/QiL8T9SbaFnIoCs.png" alt="IntelliJ IDEA"></p><p><img src="https://s2.loli.net/2022/01/27/pqsLMcNriZjgVaI.png" alt="IntelliJ IDEA"></p><h2 id="三、创建数据表"><a href="#三、创建数据表" class="headerlink" title="三、创建数据表"></a>三、创建数据表</h2><p>属于 <code>DDL</code> 的一种，语法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table [if not exists] `表名` {'字段名1' 列类型 [属性][索引][注释],    '字段名2' 列类型 [属性][索引][注释],    ...    '字段名n' 列类型 [属性][索引][注释]}[表类型][表字符集][注释];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>反引号用于区分 <code>MySQL</code> 关键字和普通字符。属性又称约束。</p></blockquote><h2 id="四、数据值和列类型"><a href="#四、数据值和列类型" class="headerlink" title="四、数据值和列类型"></a>四、数据值和列类型</h2><p>列类型：规定数据库中该列存放的数据类型。</p><h3 id="4-1-数值类型"><a href="#4-1-数值类型" class="headerlink" title="4.1 数值类型"></a>4.1 数值类型</h3><table><thead><tr><th align="center">类型</th><th align="center">说明</th><th align="center">取值范围</th><th align="center">存储要求</th></tr></thead><tbody><tr><td align="center"><strong><code>tinyint</code></strong></td><td align="center">非常小的数据‘</td><td align="center">有符号值：$-2^7 \sim 2^7-1$<br>无符号值：$0 \sim 2^8-1$</td><td align="center">1字节</td></tr><tr><td align="center"><strong><code>smallint</code></strong></td><td align="center">较小的数据</td><td align="center">有符号值：$-2^{15} \sim 2^{15}-1$<br>无符号值：$0 \sim 2^{16}-1$</td><td align="center">2字节</td></tr><tr><td align="center"><code>mediumint</code></td><td align="center">中等大小的数据</td><td align="center">有符号值：$-2^{23} \sim 2^{23}-1$<br>无符号值：$0 \sim 2^{24}-1$</td><td align="center">3字节</td></tr><tr><td align="center"><strong><code>int</code></strong></td><td align="center">标准整数</td><td align="center">有符号值：$-2^{31} \sim 2^{31}-1$<br>无符号值：$0 \sim 2^{32}-1$</td><td align="center">4字节</td></tr><tr><td align="center"><code>bigint</code></td><td align="center">较大的整数</td><td align="center">有符号值：$-2^{63} \sim 2^{63}-1$<br>无符号值：$0 \sim 2^{64}-1$</td><td align="center">8字节</td></tr><tr><td align="center"><code>float</code></td><td align="center">单精度浮点数</td><td align="center">$\pm 1.1752351\text{e}-38$</td><td align="center">4字节</td></tr><tr><td align="center"><strong><code>double</code></strong></td><td align="center">双精度浮点数</td><td align="center">$\pm2.2250738585072014\text{3}-308$</td><td align="center">8字节</td></tr><tr><td align="center"><code>decimal</code></td><td align="center">字符串形式的浮点数</td><td align="center">$\text {decicmal}(m,d)$</td><td align="center"></td></tr></tbody></table><h3 id="4-2-字符串类型"><a href="#4-2-字符串类型" class="headerlink" title="4.2 字符串类型"></a>4.2 字符串类型</h3><table><thead><tr><th align="center">类型</th><th align="center">说明</th><th align="center">最大长度</th></tr></thead><tbody><tr><td align="center"><strong><code>char[(M)]</code></strong></td><td align="center">固定长度字符串，检索快但费空间，$0 \le \text{M} \le 255$</td><td align="center">M 字符</td></tr><tr><td align="center"><strong><code>varchar[(M)]</code></strong></td><td align="center">可变长度字符串，$0 \le \text{M} \le 65535$</td><td align="center">变长度</td></tr><tr><td align="center"><code>tinytext</code></td><td align="center">微型文本串</td><td align="center">$2^8-1$ 字节</td></tr><tr><td align="center"><strong><code>text</code></strong></td><td align="center">文本串</td><td align="center">$x^{16}-1$ 字节</td></tr></tbody></table><h3 id="4-3-日期和时间型数值类型"><a href="#4-3-日期和时间型数值类型" class="headerlink" title="4.3 日期和时间型数值类型"></a>4.3 日期和时间型数值类型</h3><table><thead><tr><th align="center">类型</th><th align="center">说明</th><th align="center">取值范围</th></tr></thead><tbody><tr><td align="center"><code>DATE</code></td><td align="center"><code>YYYY-MM-DD</code>，日期格式</td><td align="center"><code>1000-01-01</code><del>`9999</del>12-31`</td></tr><tr><td align="center"><code>TIME</code></td><td align="center"><code>hh:mm:ss</code>，时间格式</td><td align="center"><code>-838:59:59~838:59:59</code></td></tr><tr><td align="center"><strong><code>DATETIME</code></strong></td><td align="center"><code>YY-MM-DD hh:mm:ss</code></td><td align="center"><code>1000-01-01 00:00:00~9990-12-31 23:59:59</code></td></tr><tr><td align="center"><code>TIMESTAMP</code></td><td align="center"><code>YYYYMMDDhhmmss</code> 格式表示的时间戳</td><td align="center"><code>197010101000000~2037年的某个时刻</code></td></tr><tr><td align="center"><code>YEAR</code></td><td align="center"><code>YYYY</code> 格式的年份值</td><td align="center"><code>1901~2155</code></td></tr></tbody></table><h3 id="4-4-NULL-值"><a href="#4-4-NULL-值" class="headerlink" title="4.4 NULL 值"></a>4.4 <code>NULL</code> 值</h3><ul><li>理解为“没有值”或“未知值”。</li><li>不要用 <code>NULL</code> 值做算术运算，结果仍为 <code>NULL</code>.</li></ul><h2 id="五、数据字段属性"><a href="#五、数据字段属性" class="headerlink" title="五、数据字段属性"></a>五、数据字段属性</h2>    <meta charset="UTF-8">    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>Document</title>    <table border="1px">        <tbody><tr align="center">            <td><b>属性</b></td>            <td><b>说明</b></td>        </tr>        <tr>            <td><code>UnSigned</code></td>            <td>                <ul>                    <li>无符号的</li>                    <li>声明该数据列不允许负数</li>                </ul>            </td>        </tr>        <tr>            <td><code>ZEROFILL</code></td>            <td>                <ul>                    <li>0 填充的</li>                    <li>不足位数的用 0 来填充，如 <code>int(3,5)</code>为 005</li>                </ul>            </td>        </tr>        <tr>            <td><code>Auto_InCrement</code></td>            <td>                <ul>                    <li>自动增长的，每添加一条数据，自动在上一个记录数上加 1（默认）</li>                    <li>通常用于设置主键，且为整数类型</li>                    <li>                        可定义起始值和步长<br>                        <ul>                            <li>当前表设置步长（<code>AUTO_INCREMENT=100</code>）：只影响当前表</li>                            <li><code>SET @@auto_increment_increment=5;</code>：影响所有使用自增的表（全局）</li>                        </ul>                    </li>                </ul>            </td>        </tr>        <tr>            <td><code>NULL</code> 和 <code>NOT NULL</code></td>            <td>                <ul>                    <li>默认为<code>NULL</code>，即没有插入该列的数值</li>                    <li>如果设置为<code>NOT NULL</code>，则该列必须有值</li>                </ul>            </td>        </tr>        <tr>            <td><code>DEFAULT</code></td>            <td>                <ul>                    <li>默认的</li>                    <li>用于设置默认值</li>                    <li>例如，性别字段，默认为“男”，否则为“女”；若无指定该列的值，则默认值为“男”的值</li>                </ul>            </td>        </tr>    </tbody></table><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 目标 : 创建一个school数据库</span><span class="token comment"># 创建学生表(列,字段)</span><span class="token comment"># 学号int 登录密码varchar(20) 姓名,性别varchar(2),出生日期(datatime),家庭住址,email</span><span class="token comment"># 创建表之前 , 一定要先选择数据库</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">`</span>student<span class="token punctuation">`</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">'学号'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'匿名'</span> <span class="token keyword">COMMENT</span> <span class="token string">'姓名'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>pwd<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'123456'</span> <span class="token keyword">COMMENT</span> <span class="token string">'密码'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>sex<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">'男'</span> <span class="token keyword">COMMENT</span> <span class="token string">'性别'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>birthday<span class="token punctuation">`</span> <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'生日'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>address<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'地址'</span><span class="token punctuation">,</span><span class="token punctuation">`</span>email<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">'邮箱'</span><span class="token punctuation">,</span><span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token comment"># 查看数据库的定义</span><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> school<span class="token punctuation">;</span><span class="token comment"># 查看数据表的定义</span><span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">;</span><span class="token comment"># 显示表结构</span><span class="token keyword">DESC</span> student<span class="token punctuation">;</span>  <span class="token comment"># 设置严格检查模式(不能容错了)SET sql_mode='STRICT_TRANS_TABLES';</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、数据表的类型"><a href="#六、数据表的类型" class="headerlink" title="六、数据表的类型"></a>六、数据表的类型</h2><h3 id="6-1-设置数据表的类型："><a href="#6-1-设置数据表的类型：" class="headerlink" title="6.1 设置数据表的类型："></a>6.1 设置数据表的类型：</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE 表名(   -- 省略一些代码   -- Mysql注释   -- 1. # 单行注释   -- 2. /*...*/ 多行注释)ENGINE = MyISAM (or InnoDB)-- 查看mysql所支持的引擎类型 (表类型)SHOW ENGINES;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>MySQL</code> 的数据表的类型 : <strong><code>MyISAM</code></strong> 、**<code>InnoDB</code>**、 <code>HEAP </code>、<code> BOB</code> 、<code>CSV</code>等。</p><p><img src="https://s2.loli.net/2022/01/27/DThuPma5pK2Clq6.png" alt="image-20220127135459932"></p><p>常见的 <code>MyISAM</code> 与 <code>InnoDB</code> 类型：</p><table><thead><tr><th>功能</th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td>事务处理</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>较大，约为前者的 2 倍</td></tr></tbody></table><p>经验 ( 适用场合 )  :</p><ul><li>适用 MyISAM : 节约空间及相应速度。</li><li>适用 InnoDB : 安全性 , 事务处理及多用户操作数据表。</li></ul><h3 id="6-2-数据表的存储位置"><a href="#6-2-数据表的存储位置" class="headerlink" title="6.2 数据表的存储位置"></a>6.2 数据表的存储位置</h3><ul><li><p><code>MySQL</code> 数据表以文件方式存放在磁盘中</p><ul><li>包括表文件，数据文件，以及数据库的选项文件。</li><li>位置：如果是通过压缩包安装的，则在<code>Mysql</code>安装目录<code>\data\</code>下存放数据表；如果是通过安装程序安装的，则在<code>C:/ProgramData/MySQL/MySQL Server 5.5/Data/</code>下存放数据表。目录名对应数据库名 , 该目录下文件名对应数据表。</li></ul><p><img src="https://s2.loli.net/2022/01/27/byth9QrKCwVcl53.png" alt="image-20220127140614464"></p><p><img src="https://s2.loli.net/2022/01/27/NXSW9bOyAxIB7sn.png" alt="image-20220127140645951"></p></li><li><p>注意 :</p><ul><li><code>*. frm</code>——表结构定义文件</li><li><code>. MYD</code>——数据文件 ( data )</li><li><code>* . MYI</code>——索引文件 ( index )</li><li><code>InnoDB</code> 类型数据表只有一个 <code>*.frm</code> 文件 , 以及上一级目录的 <code>ibdata1</code> 文件</li><li><code>MyISAM</code> 类型数据表对应三个文件 :</li></ul></li></ul><p><img src="https://s2.loli.net/2022/01/27/8mKVDAIrPnjRS3F.png" alt="image-20220127141135440"></p><h3 id="6-3-修改数据表"><a href="#6-3-修改数据表" class="headerlink" title="6.3 修改数据表"></a>6.3 修改数据表</h3><ul><li>修改表名：<code>ALTER TABLE 旧表名 RENAME AS 新表名</code></li><li>添加字段：<code>ALTER TABLE 表名 ADD字段名 列属性[属性]</code></li><li>修改字段：<ul><li><code>ALTER TABLE 表名 MODIFY 字段名 列属性[属性]</code></li><li><code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 列属性[属性]</code></li></ul></li><li>删除字段：<code>ALTER TABLE 表名 DROP 字段名</code></li></ul><h3 id="6-4-删除数据表"><a href="#6-4-删除数据表" class="headerlink" title="6.4 删除数据表"></a>6.4 删除数据表</h3><p>语法：<code>DROP TABLE [IF EXISTS] 表名</code></p><ul><li><code>IF EXISTS</code> 为可选，判断是否存在该数据表</li><li>如果删除不存在的数据表会抛出错误</li></ul><h3 id="6-5-其他"><a href="#6-5-其他" class="headerlink" title="6.5 其他"></a>6.5 其他</h3><ol><li>每个库目录存在一个保存当前数据库的选项文件 <code>db.opt</code></li><li>模式通配符：<ul><li>_   任意单个字符</li><li>%   任意多个字符，包括零字符</li><li> 单引号需要进行转义<code>\'</code></li></ul></li><li><code>CMD</code> 命令行内的语句结束符可以为 <code>";", "\G", "\g"</code>，仅影响显示结果。其他地方还是用分号结束。<code>delimiter</code> 可修改当前对话的语句结束符</li><li>SQL对大小写不敏感（关键字）</li><li>清除已有语句：<code>\c</code></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/categories/MySQL/"/>
    
    
    <category term="数据库" scheme="https://lemonsama123.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL简介与安装</title>
    <link href="https://lemonsama123.gitee.io/posts/97104bc6.html"/>
    <id>https://lemonsama123.gitee.io/posts/97104bc6.html</id>
    <published>2022-01-25T09:04:50.000Z</published>
    <updated>2022-02-17T07:07:25.213Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、数据库和-SQL-概述"><a href="#一、数据库和-SQL-概述" class="headerlink" title="一、数据库和 SQL 概述"></a>一、数据库和 SQL 概述</h2><h3 id="1-1-数据库的好处"><a href="#1-1-数据库的好处" class="headerlink" title="1.1 数据库的好处"></a>1.1 数据库的好处</h3><ol><li>持久化数据到本地。</li><li>可以实现结构化查询，方便管理。</li></ol><h3 id="1-2-数据库相关概念"><a href="#1-2-数据库相关概念" class="headerlink" title="1.2 数据库相关概念"></a>1.2 数据库相关概念</h3><ol><li><strong>DB</strong>（Database）：数据库，保存一组有组织的数据的容器。</li><li><strong>DBMS</strong>（Database Management System）：数据库管理系统，即数据库软件（产品），用于管理 DB 中的数据。</li></ol><p><img src="https://s2.loli.net/2022/01/25/I8YV4TfAUMtCvSw.png" alt="DBMS和DB"></p><ol start="3"><li><strong>SQL</strong>（Structure Query Language）：结构化查询语言，用于和 DBMS 通信。</li></ol><h3 id="1-3-数据库存储数据的特点"><a href="#1-3-数据库存储数据的特点" class="headerlink" title="1.3 数据库存储数据的特点"></a>1.3 数据库存储数据的特点</h3><ol><li>将数据放到表中，再将表放到库中。</li><li>一个数据库中可以有多个表，每个表都有一个名字，用来标识自己。表名具有唯一性。</li><li>表具有唯一性，这些特性定义了数据在表中如何存储，类似于 <code>Java</code> 中的“类”。</li><li>表由<strong>列</strong>组成，我们也称之为<strong>字段</strong>。所以表都是由一个或多个列组成，每一列类似于 <code>Java</code> 中的属性。</li><li>表中的数据是按行存储的，每一行相当于 <code>Java</code> 的对象。</li></ol><h3 id="1-4-常见的-DBMS"><a href="#1-4-常见的-DBMS" class="headerlink" title="1.4 常见的 DBMS"></a>1.4 常见的 DBMS</h3><ul><li><strong>MySQL</strong></li><li><strong>Oracle</strong></li><li><strong>DB2</strong></li><li><strong>SQLServer</strong></li></ul><h2 id="二、MySQL-的介绍，安装和使用"><a href="#二、MySQL-的介绍，安装和使用" class="headerlink" title="二、MySQL 的介绍，安装和使用"></a>二、MySQL 的介绍，安装和使用</h2><p><img src="https://s2.loli.net/2022/01/25/Z6WIJXgtSGbNBYU.png" alt="图解MySQL程序结构"></p><h3 id="2-1-MySQL-数据库产品的介绍"><a href="#2-1-MySQL-数据库产品的介绍" class="headerlink" title="2.1 MySQL 数据库产品的介绍"></a>2.1 MySQL 数据库产品的介绍</h3><ul><li><strong>MySQL</strong> 数据库隶属于 <strong>MySQL AB</strong>公司，总部位于瑞典，后被 <strong>Oracle</strong> 收购。</li><li>优点：<ul><li>成本低：开放源代码，一般可以免费试用。</li><li>性能高：执行很快。</li><li>简单：很容易安装和使用</li></ul></li></ul><h3 id="2-2-MySQL-数据库的安装（以-5-5-为例）"><a href="#2-2-MySQL-数据库的安装（以-5-5-为例）" class="headerlink" title="2.2 MySQL 数据库的安装（以 5.5 为例）"></a>2.2 MySQL 数据库的安装（以 5.5 为例）</h3><ul><li><strong>DBMD</strong> 分为两类：<ul><li>基于共享文件系统的 <strong>DBMS</strong>：<strong>Access</strong>.</li><li>基于客户机——服务器的 <strong>DBMS</strong>：<strong>MySQL</strong>、<strong>Oracle</strong>、<strong>SQLServer</strong>.</li></ul></li></ul><p><a href="http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/">MySQL 国内镜像</a></p><p><a href="/posts/84e07c0b.html">其他版本的MySQL的安装方法</a></p><h4 id="2-2-1-安装"><a href="#2-2-1-安装" class="headerlink" title="2.2.1 安装"></a>2.2.1 安装</h4><p><img src="https://s2.loli.net/2022/01/25/QRH1S9AveTuBWyO.png" alt="安装（图1）"></p><p><img src="https://s2.loli.net/2022/01/25/vlSdfFyiUPc562t.png" alt="安装（图2）"></p><p><img src="https://s2.loli.net/2022/01/25/eyphMDYVIO6JsiQ.png" alt="安装（图3）"></p><p><img src="https://s2.loli.net/2022/01/25/S1du94oXAf53Pxs.png" alt="安装（图4）"></p><p><img src="https://s2.loli.net/2022/01/25/FLXo4BlbdnkDhMR.png" alt="安装（图5）"></p><p><img src="https://s2.loli.net/2022/01/25/54MYDsi8wBPfqgA.png" alt="安装（图6）"></p><p><img src="https://s2.loli.net/2022/01/25/EwRMcmeSXlbFh5t.png" alt="安装（图7）"></p><h4 id="2-2-2-配置"><a href="#2-2-2-配置" class="headerlink" title="2.2.2 配置"></a>2.2.2 配置</h4><p>安装完毕后，会看到如下界面：</p><p><img src="https://s2.loli.net/2022/01/25/UuXoawc6xBhYPWI.png" alt="配置（图1）"></p><p>如果不小心关闭了这个界面，可进入 <strong>MySQL</strong> 安装目录下的 <strong>bin</strong> 目录，找到 <strong>MySQLInstanceConfig.exe</strong>，双击打开。</p><p><img src="https://s2.loli.net/2022/01/25/rdIslE7ozcneDHU.png" alt="配置（图2）"></p><p>开始配置</p><p><img src="https://s2.loli.net/2022/01/25/8UiCYFuqIDhtrms.png" alt="配置（图3）"></p><p><img src="https://s2.loli.net/2022/01/25/U8QH5cpBCbaoL3F.png" alt="配置（图4）"></p><p><img src="https://gitee.com/lemonsama123/image/raw/master/image/20211012111958.png" alt="配置（图5）"></p><p><img src="https://s2.loli.net/2022/01/25/Jr8TgHwcVk63nbz.png" alt="配置（图6）"></p><p><img src="https://s2.loli.net/2022/01/25/WLbywHoCa1T6vSj.png" alt="配置（图7）"></p><p><img src="https://s2.loli.net/2022/01/25/2oMwrdKHEsCgG78.png" alt="配置（图8）"></p><p><img src="https://s2.loli.net/2022/01/25/vZ3faWtS4ho1VJU.png" alt="配置（图9）"></p><p><img src="https://s2.loli.net/2022/01/25/izkl6uGQEmRCX3A.png" alt="配置（图10）"></p><p><img src="https://s2.loli.net/2022/01/25/8HQmBgMeuTUSscP.png" alt="配置（图11）"></p><p><img src="https://s2.loli.net/2022/01/25/V7RKvQOWJDMpt4A.png" alt="配置（图12）"></p><p><img src="https://s2.loli.net/2022/01/25/uUAjJfS2w1OR9Kz.png" alt="配置（图13）"></p><p><img src="https://s2.loli.net/2022/01/25/Pb5ZconQwkj6YsS.png" alt="配置（图14）"></p><p>至此，配置完毕。</p><h3 id="2-3-配置文件介绍"><a href="#2-3-配置文件介绍" class="headerlink" title="2.3 配置文件介绍"></a>2.3 配置文件介绍</h3><p><img src="https://s2.loli.net/2022/01/25/pIeXfh18Jb9ZLnr.png" alt="配置文件目录"></p><p><img src="https://s2.loli.net/2022/01/25/Zw5Fjvy6cMmoXT8.png" alt="配置文件"></p><p>可直接修改配置文件来设置相关的功能。</p><h2 id="三、MySQL-的使用"><a href="#三、MySQL-的使用" class="headerlink" title="三、MySQL 的使用"></a>三、MySQL 的使用</h2><h3 id="3-1-MySQL-服务的启动和停止"><a href="#3-1-MySQL-服务的启动和停止" class="headerlink" title="3.1 MySQL 服务的启动和停止"></a>3.1 MySQL 服务的启动和停止</h3><h4 id="3-1-1-方式一"><a href="#3-1-1-方式一" class="headerlink" title="3.1.1 方式一"></a>3.1.1 方式一</h4><p><img src="https://s2.loli.net/2022/01/25/9esXKpBQVDfYh8r.png" alt="启动方式一（图1）"></p><p><img src="https://s2.loli.net/2022/01/25/9esXKpBQVDfYh8r.png" alt="启动方式一（图2）"></p><p><img src="https://s2.loli.net/2022/01/25/usjpPWlETHomVtM.png" alt="启动方式一（图3）"></p><p><img src="https://s2.loli.net/2022/01/25/8IBoidE3fWDPFqn.png" alt="启动方式一（图4）"></p><p>右击可启动、停止和查看属性</p><p><img src="https://s2.loli.net/2022/01/25/tsaefkyhB1FmAnC.png" alt="启动方式一（图5）"></p><p>在属性界面可以把启动类型改成手动</p><p><img src="https://s2.loli.net/2022/01/25/BnUV81ePAksKZIE.png" alt="启动方式一（图6）"></p><h4 id="3-1-2-方式二"><a href="#3-1-2-方式二" class="headerlink" title="3.1.2 方式二"></a>3.1.2 方式二</h4><p><img src="https://s2.loli.net/2022/01/25/F9CTO4qg13LXtbf.png" alt="启动方式二（图1）">tg</p><p>通过 <code>net start mysql服务名</code> 启动 <strong>MySQL</strong> 服务：</p><p><img src="https://s2.loli.net/2022/01/25/sgzE8KDFcbCUAhM.png" alt="启动方式二（图2）"></p><p>通过 <code>net stop mysql服务名</code> 停止 <strong>MySQL</strong> 服务：</p><p><img src="https://s2.loli.net/2022/01/25/H5S6kYfZFXpqTcM.png" alt="启动方式二（图3）"></p><h3 id="3-2-MySQL-的登陆和退出"><a href="#3-2-MySQL-的登陆和退出" class="headerlink" title="3.2 MySQL 的登陆和退出"></a>3.2 MySQL 的登陆和退出</h3><h4 id="3-2-1-方式一：通过-MySQL-自带客户端登陆（不建议使用）"><a href="#3-2-1-方式一：通过-MySQL-自带客户端登陆（不建议使用）" class="headerlink" title="3.2.1 方式一：通过 MySQL 自带客户端登陆（不建议使用）"></a>3.2.1 方式一：通过 MySQL 自带客户端登陆（不建议使用）</h4><p><img src="https://s2.loli.net/2022/01/25/lqjmDxs3oSZ9KJY.png" alt="登陆方式一（图1）"></p><p><img src="https://s2.loli.net/2022/01/25/UijYA7vCnV1pHxh.png" alt="登陆方式一（图2）"></p><p>这种方式貌似只能登陆到 <strong>root</strong> 用户，故不建议使用。</p><p><code>exit</code> 或 <kbd>ctrl</kbd> + <kbd>c</kbd> 退出</p><p><img src="https://s2.loli.net/2022/01/25/raTYo4i27lxpbyq.png" alt="退出"></p><h4 id="3-2-2-方式二：通过命令行登陆"><a href="#3-2-2-方式二：通过命令行登陆" class="headerlink" title="3.2.2 方式二：通过命令行登陆"></a>3.2.2 方式二：通过命令行登陆</h4><p>使用 <code>mysql -h 主机名 端口号 -u 用户名 -p[密码]</code> 登陆。</p><p>如果要登陆到本机端口号为 3306 的 MySQL 数据库可简写为：<code>mysql -u 用户名 -p密码</code>.</p><p><img src="https://s2.loli.net/2022/01/25/XhARG8ilc5vUFI9.png" alt="登陆方式二（图1）"></p><p>退出：<code>exit</code> 或 <kbd>ctrl</kbd> + <kbd>c</kbd> </p><h2 id="四、MySQL-常用命令"><a href="#四、MySQL-常用命令" class="headerlink" title="四、MySQL 常用命令"></a>四、MySQL 常用命令</h2><h3 id="4-1-查看当前所有的数据库——SHOW-DATABASES"><a href="#4-1-查看当前所有的数据库——SHOW-DATABASES" class="headerlink" title="4.1 查看当前所有的数据库——SHOW DATABASES;"></a>4.1 查看当前所有的数据库——<code>SHOW DATABASES;</code></h3><p><img src="https://s2.loli.net/2022/01/25/Jd9TDzMeSGLPw5y.png" alt="SHOW DATABASES"></p><h3 id="4-2-打开某个库——USE-库名"><a href="#4-2-打开某个库——USE-库名" class="headerlink" title="4.2 打开某个库——USE 库名;"></a>4.2 打开某个库——<code>USE 库名;</code></h3><p><img src="https://s2.loli.net/2022/01/25/3YXI5yKH2kebzQd.png" alt="USE 库名"></p><h3 id="4-3-查看当前库中所有表——SHOW-TABLES"><a href="#4-3-查看当前库中所有表——SHOW-TABLES" class="headerlink" title="4.3 查看当前库中所有表——SHOW TABLES;"></a>4.3 查看当前库中所有表——<code>SHOW TABLES;</code></h3><p><img src="https://s2.loli.net/2022/01/25/sCTKGOp5U9PldDn.png" alt="SHOW TABLES"></p><h3 id="4-4-查看指定库的所有表——SHOW-TABLES-FROM-库名"><a href="#4-4-查看指定库的所有表——SHOW-TABLES-FROM-库名" class="headerlink" title="4.4 查看指定库的所有表——SHOW TABLES FROM 库名;"></a>4.4 查看指定库的所有表——<code>SHOW TABLES FROM 库名;</code></h3><p><img src="https://s2.loli.net/2022/01/25/HFZatm8xlXSnA1p.png" alt="SHOW TABLES FROM 库名"></p><h3 id="4-5-创建数据库——CREATE-DATABASE-if-not-exists-数据库名"><a href="#4-5-创建数据库——CREATE-DATABASE-if-not-exists-数据库名" class="headerlink" title="4.5 创建数据库——CREATE DATABASE [if not exists] 数据库名;"></a>4.5 创建数据库——<code>CREATE DATABASE [if not exists] 数据库名;</code></h3><p><img src="https://s2.loli.net/2022/01/27/3kGtUlem4NVQMF9.png" alt="create database"></p><h3 id="4-6-删除数据库——drop-database-if-exists-数据库名"><a href="#4-6-删除数据库——drop-database-if-exists-数据库名" class="headerlink" title="4.6 删除数据库——drop database [if exists] 数据库名;"></a>4.6 删除数据库——<code>drop database [if exists] 数据库名;</code></h3><p><img src="https://s2.loli.net/2022/01/27/omzClBLK6gq8k1E.png" alt="drop database"></p><h3 id="4-7-创建表"><a href="#4-7-创建表" class="headerlink" title="4.7 创建表"></a>4.7 创建表</h3><p>语法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">create table 表名(  列名 列类型, 列名 列类型，...);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/25/yARO9VgkifoqH2r.png" alt="创建表"></p><h3 id="4-8-查看表结构——DESC-表名"><a href="#4-8-查看表结构——DESC-表名" class="headerlink" title="4.8 查看表结构——DESC 表名;"></a>4.8 查看表结构——<code>DESC 表名;</code></h3><p><img src="https://s2.loli.net/2022/01/25/Kjtcx1V7sEkprCR.png" alt="DESC 表名"></p><h3 id="4-9-查看当前所在库——SELECT-DATABASE"><a href="#4-9-查看当前所在库——SELECT-DATABASE" class="headerlink" title="4.9  查看当前所在库——SELECT DATABASE();"></a>4.9  查看当前所在库——<code>SELECT DATABASE();</code></h3><p><img src="https://s2.loli.net/2022/01/25/ZoOXAlqsh95iGNI.png" alt="SELECT DATABASE()"></p><h3 id="4-10-查看-MySQL-版本"><a href="#4-10-查看-MySQL-版本" class="headerlink" title="4.10 查看 MySQL 版本"></a>4.10 查看 MySQL 版本</h3><h4 id="4-10-1-方式一：登陆到-MySQL-服务端"><a href="#4-10-1-方式一：登陆到-MySQL-服务端" class="headerlink" title="4.10.1 方式一：登陆到 MySQL 服务端"></a>4.10.1 方式一：登陆到 MySQL 服务端</h4><p><code>select version();</code></p><p><img src="https://s2.loli.net/2022/01/25/QUyPZr923GjEVwM.png" alt="select version()"></p><h4 id="4-10-2-方式二：没有登陆到-MySQL-服务器"><a href="#4-10-2-方式二：没有登陆到-MySQL-服务器" class="headerlink" title="4.10.2 方式二：没有登陆到 MySQL 服务器"></a>4.10.2 方式二：没有登陆到 MySQL 服务器</h4><p><code> mysql --version</code></p><p><img src="https://s2.loli.net/2022/01/25/vsFhH71cSxQ5942.png" alt="mysql --version"></p><h3 id="4-11-修改指定用户密码"><a href="#4-11-修改指定用户密码" class="headerlink" title="4.11 修改指定用户密码"></a>4.11 修改指定用户密码</h3><p>语法：</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">update user set password=password('新密码')where user='用户名';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/27/k8sVWpTjlrF96Lo.png" alt="image-20220127112520553"></p><blockquote><p>这条命令实际上是修改 <code>mysql</code> 库中的 <code>user</code> 表的 <code>password</code> 字段。</p></blockquote><h2 id="五、MySQL-的语法规范"><a href="#五、MySQL-的语法规范" class="headerlink" title="五、MySQL 的语法规范"></a>五、MySQL 的语法规范</h2><ol><li>不区分大小写，但建议关键字大写，表名、列明小写。</li><li>每条最好用分号结尾。</li><li>每条命令根据需要，可以进行缩进或换行。</li><li>注释：<ol><li>单行注释：<code>#注释文字</code></li><li>单行注释：<code>-- 注释文字</code></li><li>多行注释：<code>/* 注释文字 */</code></li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/categories/MySQL/"/>
    
    
    <category term="数据库" scheme="https://lemonsama123.gitee.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="MySQL" scheme="https://lemonsama123.gitee.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>数学公式</title>
    <link href="https://lemonsama123.gitee.io/posts/3d3518c5.html"/>
    <id>https://lemonsama123.gitee.io/posts/3d3518c5.html</id>
    <published>2022-01-24T07:46:52.000Z</published>
    <updated>2022-04-07T15:22:22.783Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><table><thead><tr><th>效果（大写/小写）</th><th>Tex</th><th>MathJax</th><th>变体</th><th>变体语法</th></tr></thead><tbody><tr><td>$\text{A}\alpha$</td><td><code>\alpha\alpha</code></td><td><code>\text{A}\alpha</code> 或  <code>{\rm A} \alpha</code></td><td></td><td></td></tr><tr><td>$\text{B}\beta$</td><td><code>\Beta\beta</code></td><td><code>\text{B}\beta</code> 或 <code>{\rm B}\beta</code></td><td></td><td></td></tr><tr><td>$\Gamma\gamma$</td><td><code>\Gamma\gamma</code></td><td><code>\Gamma\gamma</code></td><td></td><td></td></tr><tr><td>$\Delta\delta$</td><td><code>\Delta\delta</code></td><td><code>\Delta\delta</code></td><td></td><td></td></tr><tr><td>$\text{E}\epsilon$</td><td><code>\Epsilon\epsilon</code></td><td><code>\text{E}\epsilon</code> 或 <code>{\rm E}\epsilon</code></td><td>$\varepsilon$</td><td><code>\varepsilon</code></td></tr><tr><td>$\text{Z}\zeta$</td><td><code>\Zeta\zeta</code></td><td><code>\text{Z}\zeta</code> 或 <code>{\rm E}\epsilon</code></td><td></td><td></td></tr><tr><td>$\text{E}\eta$</td><td><code>\Eta\eta</code></td><td><code>\text{E}\eta</code> 或 <code>{\rm E}\eta</code></td><td></td><td></td></tr><tr><td>$\Theta\theta$</td><td><code>\Theta\theta</code></td><td><code>\Theta\theta</code></td><td>$\vartheta$</td><td><code>\vartheta</code></td></tr><tr><td>$\text{I}\iota$</td><td><code>\Iota\iota</code></td><td><code>\text{I}\iota</code> 或 <code>{\rm I}\iota</code></td><td></td><td></td></tr><tr><td>$\text{K}\kappa$</td><td><code>\Kappa\kappa</code></td><td><code>\text{K}\kappa</code> 或 <code>{\rm K}\kappa</code></td><td></td><td></td></tr><tr><td>$\Lambda\lambda$</td><td><code>\Lambda\lambda</code></td><td><code>\Lambda\lambda</code></td><td></td><td></td></tr><tr><td>$\text{M}\mu$</td><td><code>\Mu\mu</code></td><td><code>\text{M}\mu</code> 或 <code>{\rm M}\mu</code></td><td></td><td></td></tr><tr><td>$\text{N}\nu$</td><td><code>\Nu\nu</code></td><td><code>\text{N}\nu</code> 或 <code>{\rm N}\nu</code></td><td></td><td></td></tr><tr><td>$\Xi\xi$</td><td><code>\Xi\xi</code></td><td><code>\Xi\xi</code></td><td></td><td></td></tr><tr><td>$\text{O}\omicron$</td><td><code>\Omicron\omicron</code></td><td><code>\text{O}\omicro</code> 或 <code>{\rm O}\omicro</code></td><td></td><td></td></tr><tr><td>$\Pi\pi$</td><td><code>\Pi\pi</code></td><td><code>\Pi\pi</code></td><td>$\varpi$</td><td><code>\varpi</code></td></tr><tr><td>$\text{P}\rho$</td><td><code>\Rho\rho</code></td><td><code>\text{P}\rho</code> 或 <code>{\rm P}\rho</code></td><td>$\varrho$</td><td><code>\varrho</code></td></tr><tr><td>$\Sigma\sigma$</td><td><code>\Sigma\sigma</code></td><td><code>\Sigma\sigma</code></td><td>$\varsigma$</td><td><code>\varsigma</code></td></tr><tr><td>$\text{T}\tau$</td><td><code>\Tau\tau</code></td><td><code>\text{T}\tau</code> 或 <code>{\rm T}\tau</code></td><td></td><td></td></tr><tr><td>$\Upsilon\upsilon$</td><td><code>\Upsilon\upsilon</code></td><td><code>\Upsilon\upsilon</code></td><td></td><td></td></tr><tr><td>$\Phi\phi$</td><td><code>\Phi\phi</code></td><td><code>\Phi\phi</code></td><td>$\varphi$</td><td><code>\varphi</code></td></tr><tr><td>$\text{X}\chi$</td><td><code>\Chi\chi</code></td><td><code>\text{X}\chi</code> 或 <code>{\rm X}\chi</code></td><td></td><td></td></tr><tr><td>$\Psi\psi$</td><td><code>\Psi\psi</code></td><td><code>\Psi\psi</code></td><td></td><td></td></tr><tr><td>$\Omega\omega$</td><td><code>\Omega\omega</code></td><td><code>\Omega\omega</code></td><td></td><td></td></tr></tbody></table><blockquote><p>注：字母 $\text{ABEIKMNOPTX}$ 在 <code>MathJax</code> 中只能通 <code>\text{字母}</code> 或 <code>{\rm 字母}</code> 的形式来表示，但在 <code>Tex</code> 中依然可以用类似于 <code>\Alpha</code> 的形式来表示。希腊字母的变体在数学和物理中也经常被使用。</p></blockquote><p><img src="https://pic1.zhimg.com/v2-da3e717cf670582fbfbdddee33073524_b.jpg" alt="希腊字母"></p><h2 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$a^2,a_1$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>a^2,a_1<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$x^{y + z},p_{ij}$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>x^{y + z},p_{ij}<br>$$</p><blockquote><p>如果上下标是由一个表达式或多个字母，则应当将它们放在 <code>{}</code> 中，类似于 <code>a^{b+c}</code>.</p></blockquote><h2 id="分式与根式"><a href="#分式与根式" class="headerlink" title="分式与根式"></a>分式与根式</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\frac{1}{2},\frac 1 2$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\frac{1}{2},\frac 1 2<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\frac 1 {x+y}$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\frac 1 {x+y}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\frac {\frac 1 x + 1}{y + 1}, \frac {\dfrac 1 x + 1}{y + 1},\frac {\cfrac 1 x + 1}{y + 1}$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\frac {\frac 1 x + 1}{y + 1}, \frac {\dfrac 1 x + 1}{y + 1},\frac {\cfrac 1 x + 1}{y + 1}<br>$$</p><blockquote><p>同样的，分子或分母是由一个表达式或多个字母时，应当将它们放在 <code>{}</code> 中，<code>frac、dfrav、cfrac</code> 的区别是，<code>dfrac</code> 的上下间距较大，<code>cfrac</code> 离地更高。当然，不同的编辑器的渲染效果会有所不同，视具体情况选择。</p></blockquote><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\sqrt 2,\sqrt{x+y},\sqrt[3]x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\sqrt 2,\sqrt{x+y},\sqrt[3]x<br>$$</p><h2 id="一些运算符"><a href="#一些运算符" class="headerlink" title="一些运算符"></a>一些运算符</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$+-=$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>+-=<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\times,\cdot,\div$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\times,\cdot,\div<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\pm,\mp$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\pm,\mp<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\gt,\lt,\ge,\le,\gg,\ll,\ne,\not=,\approx,\equiv$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\gt,\lt,\ge,\le,\gg,\ll,\ne,\not=,\approx,\equiv<br>$$</p><pre class="line-numbers language-tex'" data-language="tex'"><code class="language-tex'">$$\cap,\cup,\in,\notin,\subseteq,\subseteqq,\subsetneq,\subsetneqq,\varnothing$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\cap,\cup,\in,\notin,\subseteq,\subseteqq,\subsetneq,\subsetneqq,\varnothing<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\forall,\exists,\nexists$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\forall,\exists,\nexists<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\because,\therefore$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\because,\therefore<br>$$</p><h2 id="大型运算符"><a href="#大型运算符" class="headerlink" title="大型运算符"></a>大型运算符</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\sum,\prod$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\sum,\prod<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\sum_{i=1}^n a_i,\prod_i^n b_i$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\sum_{i=1}^n a_i,\prod_{i=1}^n b_i<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\frac{\sum_{i=1}^n a_i}{\prod_{i=1}^n b_i}$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\frac{\sum_{i=1}^n a_i}{\prod_{i=1}^n b_i}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\frac{\sum\limits_{i=1}^n a_i}{\prod\limits_{i=1}^n b_i}$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\frac{\sum\limits_{i=1}^n a_i}{\prod\limits_{i=1}^n b_i}<br>$$</p><blockquote><p>用 <code>_</code> 和 <code>^</code> 来分别表示运算的上下限，<code>\limits</code> 是强制让上下限严格在运算符的上面和下面</p></blockquote><h2 id="积分符号"><a href="#积分符号" class="headerlink" title="积分符号"></a>积分符号</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\int,\iint,\iiint,\oint$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\int,\iint,\iiint,\oint<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\int_{a}^{b} f(x) \mathrm{d} x,\iint \limits_D f(x,y) \mathrm{d} xy, \iiint \limits _{\Omega} f(x,y,z) \mathrm{d}xyz$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\int_{a}^{b} f(x) \mathrm{d} x,\iint \limits_D f(x,y) \mathrm{d} xy, \iiint \limits _{\Omega} f(x,y,z) \mathrm{d}xyz<br>$$</p><blockquote><p>也是使用  <code>_</code> 和 <code>^</code> 来分别表示运算的上下限，<code>\limits</code> 强制让上下限严格在运算符的上面和下面。在 <code>MathJax</code> 中好像不支持 <code>\oiint</code> 和 <code>\oiiint</code>，但在 <code>Tex</code> 中是支持的。在 <code>Tex</code> 中，只有一个符号表示变量时我们才使用斜体，其他的我们都要修正为正体，对于 $\sin、\cos、\log、\ln$ 这些，直接通过 <code>\sin</code> 这种形式来表示，对于没有内置的符号，则可以通过 <code>\mathrm{符号}</code> 或来修饰。微分符号 ${\rm d}$ 也应该为正体。</p></blockquote><h2 id="一些符号"><a href="#一些符号" class="headerlink" title="一些符号"></a>一些符号</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\mathbb R,\mathbb Q,\mathbb N,\mathbb Z_+$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\mathbb R,\mathbb Q,\mathbb N,\mathbb Z_+<br>$$</p><blockquote><p>在 <code>Tex</code> 可直接用 <code>\R</code> 来达到上面的效果，而在 <code>MathJax</code> 中貌似只能通过 <code>\mathbb R</code> 来达到上面的效果。当需要表示集合时，请使用上面的符号</p></blockquote><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\cdots,\vdots,\ddots<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\cdots,\vdots,\ddots<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\infty,\partial,∂,\nabla,\propto，^{\circ}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\infty,\partial,∂,\nabla,\propto, ^{\circ}<br>$$</p><blockquote><p><code>Tex</code> 中支持 <code>\degree</code> 来表示度，在 <code>MathJax</code> 中好像不支持，这里使用的是 <code>^{\circ}</code> 来代替</p></blockquote><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\sin x ,\sec x, \cosh x,\log_2 x, \ln x, \lg x,\max x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\sin x ,\sec x, \cosh x,\log_2 x, \ln x, \lg x,\max x<br>$$</p><h2 id="标志符号"><a href="#标志符号" class="headerlink" title="标志符号"></a>标志符号</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\vec x,\overrightarrow {AB},\bar x,\overline{AB}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\vec x,\overrightarrow {AB}<br>,\bar x,\overline{AB}<br>$$</p><h2 id="箭头"><a href="#箭头" class="headerlink" title="箭头"></a>箭头</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\leftarrow,\rightarrow,\leftrightarrow,\Leftarrow,\Rightarrow,\Leftrightarrow,\longleftarrow,\longrightarrow,\longleftrightarrow,\Longleftarrow,\Longrightarrow,\Longleftrightarrow<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\leftarrow,\rightarrow,\leftrightarrow,\Leftarrow,\Rightarrow,\Leftrightarrow,\longleftarrow,\longrightarrow,\longleftrightarrow,\Longleftarrow,\Longrightarrow,\Longleftrightarrow<br>$$</p><h2 id="括号与定界符"><a href="#括号与定界符" class="headerlink" title="括号与定界符"></a>括号与定界符</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">()[]\{ \} \lbrace<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>()[]{ }\lbrace\rbrace<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\lceil,\rceil,\lfloor,\rfloor,||<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\lceil,\rceil,\lfloor,\rfloor,||<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\left(0,\frac 1 a\right]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\left(0,\frac 1 a\right]<br>$$</p><blockquote><p>使用 <code>\left</code> 和 <code>\right</code> 来修饰括号会使其具有自适应大小的特性</p></blockquote><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\left.\frac {∂f}{∂x}\right|_{x=0}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\left.\frac {∂f}{∂x}\right|_{x=0}<br>$$</p><blockquote><p>通过 <code>\left.</code> 和 <code>\right|</code> 使 <code>|</code> 具有自适应大小的特性</p></blockquote><h2 id="多行公式"><a href="#多行公式" class="headerlink" title="多行公式"></a>多行公式</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{aligned}a &amp; =b+c+d \newline &amp; =e+f\end{aligned}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{aligned}<br>a &amp; =b+c+d \newline<br> &amp; =e+f<br>\end{aligned}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\begin{align}a&amp;=b+c+d \newline&amp;=e+f\end{align}$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{align}<br>a&amp;=b+c+d \newline<br>&amp;=e+f<br>\end{align}<br>$$</p><blockquote><p>上面的两种方式是一样的。注意：在 <code>MathJax</code> 中，换行请用 <code>\newline</code>，在 <code>Tex</code> 中是支持 <code>\\</code> 换行的.</p></blockquote><h2 id="大括号"><a href="#大括号" class="headerlink" title="大括号"></a>大括号</h2><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">f(x)=\begin{cases}\sin x, &amp; -π\le x \le π\newline0,&amp; \text{其他}\end{cases}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>f(x)=<br>\begin{cases}<br>\sin x, &amp; -π\le x \le π\newline<br>0,&amp; \text{其他}<br>\end{cases}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$f(x)= \left\lbrace\begin{array}{ll}\sin x, &amp; -\pi\le x \le \pi\newline0,&amp; \text{其他}\end{array}\right.$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>f(x)= \left\lbrace\begin{array}{ll}<br>\sin x, &amp; -\pi\le x \le \pi\newline<br>0,&amp; \text{其他}<br>\end{array}\right.<br>$$</p><blockquote><p>在 <code>MathJax</code> 中，大括号 请使用 <code>\lbrace</code> 表示。</p></blockquote><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{matrix}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{matrix}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{matrix}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{matrix}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{array}{cccc}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{array}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{array}{cccc}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{array}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{bmatrix}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{bmatrix}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{bmatrix}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{bmatrix}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\left[\begin{array}{llll}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{array}\right]$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\left[\begin{array}{llll}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{array}\right]<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{pmatrix}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{pmatrix}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{pmatrix}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{pmatrix}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\left(\begin{array}{cccc}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{array}\right)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\left(\begin{array}{cccc}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{array}\right)<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{vmatrix}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{vmatrix}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{vmatrix}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{vmatrix}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\left|\begin{array}{cccc}a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newlinea_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newlinea_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newlinea_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}\end{array}\right|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\left|\begin{array}{cccc}<br>a_{11} &amp; a_{12} &amp; a_{13} &amp; \cdots &amp; a_{1n} \newline<br>a_{21} &amp; a_{22} &amp; a_{23} &amp; \cdots &amp; a_{2n} \newline<br>a_{31} &amp; a_{32} &amp; a_{33} &amp; \cdots &amp; a_{3n} \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots  \newline<br>a_{n1} &amp; a_{n2} &amp; a_{n3} &amp; \cdots &amp; a_{(n-1)n}<br>\end{array}\right|<br>$$</p><blockquote><p>另外，用 <code>\bf A</code> 来表示矩阵，<code>\bf B^{\rm T}</code> 表示矩阵的转置</p></blockquote><p>$$<br>\bf A,\bf B^{\rm T}<br>$$</p><h2 id="几个例子"><a href="#几个例子" class="headerlink" title="几个例子"></a>几个例子</h2><h3 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$f(x) = \frac{1} {\sqrt {2\pi} \sigma}{\mathrm e}^{-\frac{(x-\mu)^2}{2\sigma ^ 2}}$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>f(x) = \frac{1} {\sqrt {2\pi} \sigma}{\mathrm e}^{-\frac{(x-\mu)^2}{2\sigma ^ 2}}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$f(x) = \frac{1}{\sqrt{2\pi}\sigma}\exp\left[-\frac{(x-\mu)^2}{2\sigma ^ 2}\right]$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>f(x) = \frac{1}{\sqrt{2\pi}\sigma}\exp\left[-\frac{(x-\mu)^2}{2\sigma ^ 2}\right]<br>$$</p><h3 id="麦克斯韦方程组"><a href="#麦克斯韦方程组" class="headerlink" title="麦克斯韦方程组"></a>麦克斯韦方程组</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\begin{aligned}\oint _l \boldsymbol{H} \cdot \mathrm{d} \boldsymbol{l} &amp; = \iint_S \boldsymbol{J} \cdot \mathrm{d} \boldsymbol{S} + \iint_S \frac{\partial \boldsymbol{D}}{\partial t} \cdot {\mathrm d}\boldsymbol{S} \newline\oint_l \boldsymbol{E} \cdot \mathrm{d} \boldsymbol{l} &amp; = -\iint_s \frac{\partial \boldsymbol{B}}{\partial t} \cdot \mathrm{d} \boldsymbol{S}\newline\oint_S \boldsymbol{B} \cdot \mathrm{d} \boldsymbol{S}&amp; = 0 \newline\oint_S \boldsymbol{D} \cdot \mathrm{d} \boldsymbol{S} &amp; = \iiint_V \rho \mathrm{d} V\end{aligned}$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{aligned}<br>\oint _l \boldsymbol{H} \cdot \mathrm{d} \boldsymbol{l} &amp; = \iint_S \boldsymbol{J} \cdot \mathrm{d} \boldsymbol{S} + \iint_S \frac{\partial \boldsymbol{D}}{\partial t} \cdot {\mathrm d}\boldsymbol{S} \newline<br>\oint_l \boldsymbol{E} \cdot \mathrm{d} \boldsymbol{l} &amp; = -\iint_s \frac{\partial \boldsymbol{B}}{\partial t} \cdot \mathrm{d} \boldsymbol{S}\newline<br>\oint_S \boldsymbol{B} \cdot \mathrm{d} \boldsymbol{S}&amp; = 0 \newline<br>\oint_S \boldsymbol{D} \cdot \mathrm{d} \boldsymbol{S} &amp; = \iiint_V \rho \mathrm{d} V<br>\end{aligned}<br>$$</p><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\begin{aligned}\nabla \times \boldsymbol{H} &amp; = \boldsymbol{J} + \frac{\partial \boldsymbol{D}}{\partial t} \newline\nabla \times \boldsymbol{E} &amp; = - \frac{\partial \boldsymbol{B}}{\partial t} \newline\nabla \cdot \boldsymbol{B} &amp; = 0 \newline\nabla \cdot \boldsymbol{D} &amp; = \rho\end{aligned}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{aligned}<br>\nabla \times \boldsymbol{H} &amp; = \boldsymbol{J} + \frac{\partial \boldsymbol{D}}{\partial t} \newline<br>\nabla \times \boldsymbol{E} &amp; = - \frac{\partial \boldsymbol{B}}{\partial t} \newline<br>\nabla \cdot \boldsymbol{B} &amp; = 0 \newline<br>\nabla \cdot \boldsymbol{D} &amp; = \rho<br>\end{aligned}<br>$$</p><h3 id="范德蒙德行列式"><a href="#范德蒙德行列式" class="headerlink" title="范德蒙德行列式"></a>范德蒙德行列式</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$\begin{vmatrix}1 &amp; 1 &amp; 1 &amp; \cdots &amp; 1 \newlinex_{1} &amp; x_{2} &amp; x_{3} &amp; \cdots &amp; x_{n} \newlinex_{1}^2 &amp; x_{2}^2 &amp; x_{3}^2 &amp; \cdots &amp; x_{n}^2 \newline x_{1}^3 &amp; x_{2}^3 &amp; x_{3}^3 &amp; \cdots &amp; x_{n}^3 \newline\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \newlinex_{1}^{n-1} &amp; x_2^{n-1} &amp; x_{3}^{n-1} &amp; \cdots &amp; x_n^{n-1} \end{vmatrix} = \prod_{1 \le j \le i \le n}(x_i - x_j)$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{vmatrix}<br>1 &amp; 1 &amp; 1 &amp; \cdots &amp; 1 \newline<br>x_{1} &amp; x_{2} &amp; x_{3} &amp; \cdots &amp; x_{n} \newline<br>x_{1}^2 &amp; x_{2}^2 &amp; x_{3}^2 &amp; \cdots &amp; x_{n}^2 \newline<br>x_{1}^3 &amp; x_{2}^3 &amp; x_{3}^3 &amp; \cdots &amp; x_{n}^3 \newline<br>\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \newline<br>x_{1}^{n-1} &amp; x_2^{n-1} &amp; x_{3}^{n-1} &amp; \cdots &amp; x_n^{n-1}<br>\end{vmatrix} = \prod_{1 \le j \le i \le n}(x_i - x_j)<br>$$</p><h3 id="欧拉恒等式"><a href="#欧拉恒等式" class="headerlink" title="欧拉恒等式"></a>欧拉恒等式</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">\mathrm{e}^{\mathrm{i} x} = \cos x + \mathrm{i} \sin x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\text{e}^{\text{i} x} = \cos x + \text{i} \sin x<br>$$</p><h3 id="巴塞尔问题"><a href="#巴塞尔问题" class="headerlink" title="巴塞尔问题"></a>巴塞尔问题</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">1 + \frac{1}{2^2} + \frac{1}{3^2} + \cdots = \sum_{i=1}^{\infty} \frac{1}{i^2} =\frac{\pi^{2}}{6}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>1 + \frac{1}{2^2} + \frac{1}{3^2} + \cdots = \sum_{i=1}^{\infty} \frac{1}{i^2} =\frac{\pi^{2}}{6}<br>$$</p><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$$F(n)= \left\lbrace\begin{array}{ll}1, &amp;n \le 2\newlineF(n-1) + F(n-2),&amp; n \ge 3 \end{array}\right.$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>F(n)= \left\lbrace\begin{array}{ll}<br>1, &amp;n \le 2\newline<br>F(n-1) + F(n-2),&amp; n \ge 3<br>\end{array}\right.<br>$$</p><h3 id="牛顿莱布尼茨公式"><a href="#牛顿莱布尼茨公式" class="headerlink" title="牛顿莱布尼茨公式"></a>牛顿莱布尼茨公式</h3><pre class="line-numbers language-tex" data-language="tex"><code class="language-tex">$\int _a^b f(x)\mathrm{d}x = F(b) - F(a)$$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>$$<br>\int _a^b f(x)\mathrm{d}x = F(b) - F(a)<br>$$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>异或运算的性质与拓展</title>
    <link href="https://lemonsama123.gitee.io/posts/d7710b2d.html"/>
    <id>https://lemonsama123.gitee.io/posts/d7710b2d.html</id>
    <published>2022-01-09T13:56:30.000Z</published>
    <updated>2022-01-19T06:14:52.241Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h2><p>异或运算是<a href="https://baike.baidu.com/item/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6/2786163?fr=aladdin">位运算</a>的一种，在计算机语言中一般用 <code>^</code> 符号来表示，它是一个二元运算。对于两个二进制位为来说，运算的结果为：</p><table><thead><tr><th>a</th><th>b</th><th>a ^ b</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td></tr><tr><td>0</td><td>1</td><td>1</td></tr><tr><td>1</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>0</td></tr></tbody></table><p>可以看出，当两个参与运算的数相等是结果为 0，不等是结果为 1。</p><p>异或运算还可以看成无进位加法。</p><p>对于两个数来说，他们异或的结果是它们的对应二进制位相应做异或运算得到的结果，如：10110 和 00111 异或得到的结果为 10001</p><h2 id="0x02-性质"><a href="#0x02-性质" class="headerlink" title="0x02 性质"></a>0x02 性质</h2><ol><li>$0 ^{\wedge} N = N$，$N ^{\wedge} N = 0$</li><li>交换律： $a ^{\wedge} b = b ^{\wedge} a$</li><li>结合律： $(a ^{\wedge} b) ^{\wedge} c = a ^{\wedge} (b ^{\wedge} c)$</li><li>$a_{1} ^{\wedge} a_{2} ^{\wedge} a_{3} ^{\wedge} \cdots ^{\wedge} a_{n}$ 的结果与 $a_{1}, a_{2}, a_{3}, \cdots ,a_{n}$ 的顺序无关</li></ol><h2 id="0x03-异或运算在编程中的运用"><a href="#0x03-异或运算在编程中的运用" class="headerlink" title="0x03 异或运算在编程中的运用"></a>0x03 异或运算在编程中的运用</h2><h3 id="1、利用异或运算实现-swap-方法"><a href="#1、利用异或运算实现-swap-方法" class="headerlink" title="1、利用异或运算实现 swap() 方法"></a>1、利用异或运算实现 <code>swap()</code> 方法</h3><p>一般的 <code>swap()</code> 方法的写法如下</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>借助一个额外变量可做到交换两数</p><blockquote><p>由于 Java 语言的基础类型没有 C/C++ 中的指针传递或引用传递，只有值传递，我们不能写成 <code>swap(int a, int b)</code> 这样的方法。</p></blockquote><p>再来看看版本的：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假设 <code>arr[i] = 甲; arr[j] = 3</code></p><ol><li><code>arr[i] = arr[i] ^ arr[j] = 甲 ^ 乙; arr[j] = 乙;</code></li><li><code>arr[j] = arr[i] ^ arr[j] =  甲 ^ 乙 ^ 乙 = 甲; arr[i] = 甲 ^ 乙;</code>  </li><li><code>arr[i] = arr[i] ^ arr[j] = 甲 ^ 乙 ^ 甲 = 乙; arr[j] = 甲</code></li></ol><p>可以看到通过三次异或元素我们成功将 <code>arr[i]</code> 和 <code>arr[j]</code> 的数据交换了过来。</p><blockquote><p>注意：使用这种方法来实现两数交换，被交换的两数在内存上必须是两块独立的空间，否则会使两个数的值变成 0.</p></blockquote><h3 id="2、一个与异或有关的题"><a href="#2、一个与异或有关的题" class="headerlink" title="2、一个与异或有关的题"></a>2、一个与异或有关的题</h3><p>题目描述：一个数组中有一种数出现了奇数次，其他数出现了偶数次，请你求出这个数</p><p>这题的解法很简单，我们只需把数组中所以的数都异或一遍，最后得到的结果即为要求的数。</p><p>由于异或运算具有结合律和交换律，所以我们可以先把所以出现偶数个的数两两异或，会到的若干个 0，在将出现奇数个数的那个数零零异或，会得到若干个 0，还会剩下一个这个数，将所以的 0 和这个数异或就可以得到这个数了。</p><p>代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printOddTimesNum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        res <span class="token operator">^=</span> a<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、进阶题"><a href="#3、进阶题" class="headerlink" title="3、进阶题"></a>3、进阶题</h3><p>题目描述：一个数组中有两种数出现了奇数次，其他数出现了偶数次，请你求出这两个数</p><p>这题的解法较为难理解，我们假设这两个数为 a 和 b，将数组中所有的数异或得到的结果为 a ^ b，由题意知， $a \not= b $，故 $a ^{\wedge} b \not = 0$，不妨记 $eor = a ^{\wedge} b$，则 $eor \not = 0$，接下来要想办法分离 a 和 b。</p><p>由于 $a ^ b \not = 0$，所以 a 和 b 的二进制为至少有一个不相同，这样一来 eor 至少有一个二进制位为 1。假定这个二进制为为第八位，那么 a 和 b 的第八位比如不同。也就是说，可以通过 eor 的第八位区分出 a 和 b。同时，我们也可以通过第八位来划分数组，即第八位上为 0 的为一部分，第八位上为 1 的为另一部分，a 和 b 必不可能在同一部分里。其他的数在自己所在的那部分必然会出现偶数次。我们可以拿到 eor 最右侧的 1，然后通过这个是数来划分数组。</p><p><img src="https://s2.loli.net/2022/01/19/xmvIJuQ9XzdRhBp.png" alt="image-20220113182143544"></p><p>下面给出一段代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> rightOne <span class="token operator">=</span> eor <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">~</span>eor <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这段代码就可以求出 eor 最右侧的1，可能有点难理解，我们直接看一个例子：</p><p><img src="https://s2.loli.net/2022/01/19/iaOcKDVj2Ao9Uly.png" alt="image-20220113182333300"></p><p>然后就可以求出这两个数了，完整代码如下：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printOddTimesNum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> eor <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rightOne <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        eor <span class="token operator">^=</span> a<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    rightOne <span class="token operator">=</span> eor <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token operator">~</span>eor <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">&amp;</span> rightOne<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            a <span class="token operator">^=</span> c<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    b <span class="token operator">=</span> a <span class="token operator">^</span> eor<span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="位运算" scheme="https://lemonsama123.gitee.io/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
    <category term="异或运算" scheme="https://lemonsama123.gitee.io/tags/%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Lambda表达式</title>
    <link href="https://lemonsama123.gitee.io/posts/bbcf5ff7.html"/>
    <id>https://lemonsama123.gitee.io/posts/bbcf5ff7.html</id>
    <published>2021-12-16T14:55:34.000Z</published>
    <updated>2021-12-17T06:53:13.190Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>GCD</title>
    <link href="https://lemonsama123.gitee.io/posts/2071db18.html"/>
    <id>https://lemonsama123.gitee.io/posts/2071db18.html</id>
    <published>2021-12-16T14:48:19.000Z</published>
    <updated>2022-01-19T06:17:43.534Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>GCD，即<a href="https://baike.baidu.com/item/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/869308?fr=aladdin">最大公约数</a>，是指多个整数共有约数中最大的一个，常见的求解方法有<a href="https://baike.baidu.com/item/%E8%B4%A8%E5%9B%A0%E6%95%B0%E5%88%86%E8%A7%A3">质因数分解法</a>、<a href="https://baike.baidu.com/item/%E7%9F%AD%E9%99%A4%E6%B3%95">短除法</a>、<a href="https://baike.baidu.com/item/%E8%BE%97%E8%BD%AC%E7%9B%B8%E9%99%A4%E6%B3%95">辗转相除法</a>和<a href="https://baike.baidu.com/item/%E6%9B%B4%E7%9B%B8%E5%87%8F%E6%8D%9F%E6%B3%95">更相减损法</a></p><h2 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a>辗转相除法</h2><h3 id="引例"><a href="#引例" class="headerlink" title="引例"></a>引例</h3><p>我们尝试使用辗转相除法求 319 和 377 的最大公倍数：</p><p><img src="https://s2.loli.net/2022/01/19/xpFos89vyVhBLmq.png" alt="image-20220102214834011"></p><p>通过上述求解过程，我们可以得到递归方程：<br>$$<br>\text{GCD}(a, b) = \text{GCD}(b, a \mod b)<br>$$<br>结束条件为：$b = 0$</p><h3 id="递归实现"><a href="#递归实现" class="headerlink" title="递归实现"></a>递归实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">GCD</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> a<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">GCD</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="迭代实现"><a href="#迭代实现" class="headerlink" title="迭代实现"></a>迭代实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">GCD</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> t <span class="token operator">=</span> a<span class="token punctuation">;</span>        a <span class="token operator">=</span> b<span class="token punctuation">;</span>        b <span class="token operator">=</span> t <span class="token operator">%</span> b<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Stein算法"><a href="#Stein算法" class="headerlink" title="Stein算法"></a>Stein算法</h2><p><a href="https://baike.baidu.com/item/Stein%E7%AE%97%E6%B3%95/7874057#4">Stein算法</a>是一种计算两个数最大公约数的算法，是针对欧几里德算法在对大整数进行运算时，需要试商导致增加运算时间的缺陷而提出的改进算法。</p><h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h3><ol><li>设置 $a_{n}=|a|$、$b_{n}=|b|$、$c_{n} = 1$ 和 $ n = 1$</li><li>如果 $a_{n} = b_{n}$，那么 $a_{n}$（或 $b_{n}$）* $c_{n}$ 是最大公约数，算法结束</li><li>如果 $a_{n} = 0$，$b_{n}$ 是最大公约数，算法结束</li><li>如果 $b_{n} = 0$，$a_n$ 是最大公约数，算法结束</li><li>如果 $a_{n}$ 和 $b_{n}$ 都是偶数，则 $a_{n+1} = \frac{a_n}{2}$，$b_{n+1} = \frac{b_n}{2}$，$c_{n+1} = c_{n}*2$</li><li>如果 $a_{n}$ 是偶数，$b_{n}$ 不是偶数，则 $a_{n+1} = \frac{a_{n}}{2}$，$b_{n+1} = b_{n}$，$c_{n+1}= c_{n}$</li><li>如果 $b_{n}$ 是偶数，$a_{n}$ 不是偶数，则$b_{n+1}=\frac{b_{n}}{2}$，$a_{n+1} = a_{n}$，$c_{n+1} = c_{n}$</li><li>如果 $a_{n}$ 和 $b_{n}$ 都不是偶数，则 $a_{n+1} = \frac{|An-Bn|}{2}$，$b_{n+1} = \min(a_{n},b_{n})$，$c_{n+1} = c_{n}$</li><li>n=n+1，转2</li></ol><h3 id="Java-实现"><a href="#Java-实现" class="headerlink" title="Java 实现"></a>Java 实现</h3><p>。。。。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>快速幂</title>
    <link href="https://lemonsama123.gitee.io/posts/20c47d09.html"/>
    <id>https://lemonsama123.gitee.io/posts/20c47d09.html</id>
    <published>2021-12-16T14:41:52.000Z</published>
    <updated>2022-03-21T06:46:45.462Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>快速幂（Fast Power）</strong>算法的核心思想就是每一步都把指数分成两半，而相应的底数做平方运算。这样不仅能把非常大的指数给不断变小，所需要执行的循环次数也变小，而最后表示的结果却一直不会变。可以以 $O(\log n)$ 的时间复杂度计算乘方。</p><h2 id="引例"><a href="#引例" class="headerlink" title="引例"></a>引例</h2><p>来看一个简单的问题：求 3 的 10 次幂，怎样算比较快？</p><p><strong>方法1</strong>：最简单的想法：$3 \times 3 = 9, 9 \times 3 = 27, \cdots , 19683 \times 3 = 359049$，共需做 9 次乘法</p><p><strong>方法2</strong>：先算 3 的 5 次幂，$3 \times 3 \times 3 \times 3 \times 3 = 243$，再计算 $3^{5}$ 的平方，共需做 6 次乘法</p><p><strong>方法3</strong>：先计算 $3^{2}$，再计算 $3^{5} = 3^{2} \times 3^{2} \times 3$，再计算其平方，共需做 5 次乘法</p><h2 id="递归快速幂"><a href="#递归快速幂" class="headerlink" title="递归快速幂"></a>递归快速幂</h2><p>快速幂，无非是<strong>二分</strong>的思想。根据刚刚的例子可以得到递归方程：<br>$$<br>a^{n}=\left\lbrace\begin{array}{ll}<br>a^{n-1} \cdot a, &amp; n \text { 为奇数}  \newline<br>a^{\frac{n}{2}} \cdot a^{\frac{n}{2}}, &amp; n \text { 为不为 0 的偶数}\newline<br>1, &amp; n=0<br>\end{array}\right.<br>$$<br>根据递归方程可以写成代码：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">fastPower</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">fastPower</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> a<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token function">fastPower</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> res <span class="token operator">*</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：变量 res 是必要的，因为如果不把 $a^{\frac{n}{2}}$ 记录下来，直接写成 <code>fastPower(a, n &gt;&gt; 2) * fastPower(a, n &gt;&gt; 2)</code>，会计算两次 $a^{\frac{n}{2}}$，算法就退化为 $O(n)$ 了</p><p>在实际问题中，可能要求求出幂后对一个素数取模，这时我们没有必要真的先求出结果再取模，可根据<a href="https://baike.baidu.com/item/%E5%90%8C%E4%BD%99%E5%AE%9A%E7%90%86/1212360?fr=aladdin">同余定理</a>，步步取模</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">fastPowerMod</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> mod<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">fastPower</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> a <span class="token operator">%</span> mod<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token function">fastPower</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>        <span class="token keyword">return</span> res <span class="token operator">*</span> res <span class="token operator">%</span> mod<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>众所周知，递归简洁，但会产生额外的空间开销。我们可以把递归改成迭代（循环），来避免对系统栈的大量占用，即<strong>非递归快速幂</strong></p><h2 id="非递归快速幂"><a href="#非递归快速幂" class="headerlink" title="非递归快速幂"></a>非递归快速幂</h2><p>我们可以直接由<strong>递归快速幂</strong>得到<strong>非递归快速幂</strong>：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">fastPower</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res <span class="token operator">*=</span> a<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        a <span class="token operator">*=</span> a<span class="token punctuation">;</span>        n <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们换一个角度来看非递归快速幂。还是 3 的 10 次幂，但这次，我们把 10 写成二进制的形式，也就是 $(1010)_{2}$。</p><p>现在我们要计算 $3^{(1010)}$，可以这样做 $3^{(1010)} = 3^{(1000)} \cdot 3^{(10)}$，实际上，对于任意的整数次幂，我们都可以拆分成若干个 $3^{(100\cdots)}$ 的形式，这正好对应 $3^{1}$、$3^{2}$、$3^{4} \cdots$，我们只需把底数不断平方就可以得到结果。</p><p>先来看看代码，再仔细推敲推敲：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">fastPower1</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            res <span class="token operator">*=</span> a<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        a <span class="token operator">*=</span> a<span class="token punctuation">;</span>        n <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://s2.loli.net/2022/01/18/MuobpcCsEBOTG6S.png" alt="image-20220102185917835" style="zoom: 50%;"><p>对于指数的二进制数，如果某一位为 0，则这一位的对应的数弃去，如果为 1，则让 res 乘上对应的 a 的次幂</p><h2 id="矩阵快速幂"><a href="#矩阵快速幂" class="headerlink" title="矩阵快速幂"></a>矩阵快速幂</h2><p>上述的都是整数的快速幂。实际上，只要一个数据类型支持乘法且满足结合律，都可使用快速幂，<strong>矩阵快速幂</strong>就是其典型应用，而<a href="https://baike.baidu.com/item/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/99145?fr=aladdin">斐波那契数列</a>是矩阵快速幂的一个典型应用</p><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><p>$$<br>F_{n}=\left\lbrace\begin{array}{ll}<br>1 &amp; (n \leq 2)\newline<br>F_{n-1}+F_{n-2} &amp; (n \geq 3)<br>\end{array}\right.<br>$$</p><p>题目描述：求出 $F_{n} \mod 10^9 + 7$ 的值</p><p>设矩阵 $A=\left[\begin{array}{ll}<br>0 &amp; 1 \newline<br>1 &amp; 1<br>\end{array}\right]$，我们有：<br>$$<br>A\left[\begin{array}{c}<br>F_{n} \newline<br>F_{n+1}<br>\end{array}\right]=\left[\begin{array}{c}<br>F_{n+1} \newline<br>F_{n}+F_{n+1}<br>\end{array}\right]=\left[\begin{array}{l}<br>F_{n+1} \newline<br>F_{n+2}<br>\end{array}\right]<br>$$<br>于是：<br>$$<br>\begin{aligned}<br>\left[\begin{array}{c}<br>F_{n} \newline<br>F_{n+1}<br>\end{array}\right] &amp;=A\left[\begin{array}{c}<br>F_{n-1} \newline<br>F_{n}<br>\end{array}\right] \newline<br>&amp;=A^{2}\left[\begin{array}{c}<br>F_{n-2} \newline<br>F_{n-1}<br>\end{array}\right] \newline<br>&amp;=\ldots \newline<br>&amp;=A^{n-1}\left[\begin{array}{c}<br>F_{1} \newline<br>F_{2}<br>\end{array}\right] \newline<br>&amp;=A^{n-1}\left[\begin{array}{c}<br>1 \newline<br>1<br>\end{array}\right]<br>\end{aligned}<br>$$<br>这样，我们就将这个问题转化为了某个矩阵的幂，接下来就可以用矩阵快速幂求解了：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Matrix</span> <span class="token punctuation">{</span>    <span class="token keyword">long</span> a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> b1<span class="token punctuation">,</span> b2<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> mod <span class="token operator">=</span> <span class="token number">1000000007</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token keyword">long</span> a1<span class="token punctuation">,</span> <span class="token keyword">long</span> a2<span class="token punctuation">,</span> <span class="token keyword">long</span> b1<span class="token punctuation">,</span> <span class="token keyword">long</span> b2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>a1 <span class="token operator">=</span> a1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>a2 <span class="token operator">=</span> a2<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>b1 <span class="token operator">=</span> b1<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>b2 <span class="token operator">=</span> b2<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">Matrix</span> <span class="token function">addition</span><span class="token punctuation">(</span><span class="token class-name">Matrix</span> matrix<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span>a1 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>a1 <span class="token operator">+</span> a2 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>b1 <span class="token operator">%</span> mod<span class="token punctuation">,</span>                          a1 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>a2 <span class="token operator">+</span> a2 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>b2 <span class="token operator">%</span> mod<span class="token punctuation">,</span>                          b1 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>a1 <span class="token operator">+</span> b2 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>b1 <span class="token operator">%</span> mod<span class="token punctuation">,</span>                          b1 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>a2 <span class="token operator">+</span> b2 <span class="token operator">*</span> matrix<span class="token punctuation">.</span>b2 <span class="token operator">%</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Matrix</span> <span class="token function">matrixFastPower</span><span class="token punctuation">(</span><span class="token class-name">Matrix</span> matrix<span class="token punctuation">,</span> <span class="token keyword">long</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Matrix</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                ans <span class="token operator">=</span> ans<span class="token punctuation">.</span><span class="token function">addition</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            matrix <span class="token operator">=</span> matrix<span class="token punctuation">.</span><span class="token function">addition</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>            n <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Scanner</span> scanner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">long</span> x <span class="token operator">=</span> scanner<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Matrix</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Matrix</span> ans <span class="token operator">=</span> <span class="token function">matrixFastPower</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ans<span class="token punctuation">.</span>a1 <span class="token operator">+</span> ans<span class="token punctuation">.</span>a2<span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p>[1] <a href="https://zhuanlan.zhihu.com/p/95902286">Pecco</a></p></li><li><p>[2] <a href="https://baike.baidu.com/item/%E5%BF%AB%E9%80%9F%E5%B9%82/5500243?fr=aladdin">快速幂</a></p></li><li><p>[3] <a href="https://baike.baidu.com/item/%E5%90%8C%E4%BD%99%E5%AE%9A%E7%90%86/1212360?fr=aladdin">同余定理</a></p></li><li><p>[4] <a href="https://baike.baidu.com/item/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/99145?fr=aladdin">斐波那契数列</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://lemonsama123.gitee.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="快速幂" scheme="https://lemonsama123.gitee.io/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
    <category term="矩阵" scheme="https://lemonsama123.gitee.io/tags/%E7%9F%A9%E9%98%B5/"/>
    
  </entry>
  
  <entry>
    <title>Java GUI</title>
    <link href="https://lemonsama123.gitee.io/posts/94bc9262.html"/>
    <id>https://lemonsama123.gitee.io/posts/94bc9262.html</id>
    <published>2021-12-14T13:13:40.000Z</published>
    <updated>2022-01-19T09:59:44.866Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>告诉大家该什么学？</p><ul><li>这是什么？</li><li>它什么玩？</li><li>该如何去在我们平时运用？</li></ul><p>组件</p><ul><li>窗口</li><li>弹窗</li><li>面板</li><li>文本框</li><li>列表框</li><li>按钮</li><li>图片</li><li>监听事件</li><li>鼠标</li><li>键盘</li><li>破解工具</li></ul><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>GUI 的核心：Swing 和 AWT</p><ol><li>界面不美观</li><li>需要 JRE 环境</li></ol><p>为什么要学习？</p><ol><li>了解 MVC 架构，了解监听</li><li>可以写出自己心中的一些小工具</li><li>工作的时候也可能需要维护到 Swing 界面（虽然概率不大）</li></ol><h2 id="2、AWT"><a href="#2、AWT" class="headerlink" title="2、AWT"></a>2、AWT</h2><h3 id="2-1-AWT-介绍"><a href="#2-1-AWT-介绍" class="headerlink" title="2.1 AWT 介绍"></a>2.1 AWT 介绍</h3><ol><li>包含了很多类和接口，用于 GUI（图像用户编程）编程</li><li>包含很多元素：窗口、按钮、文本框等</li><li>java.awt</li></ol><p>  <img src="https://s2.loli.net/2022/01/19/rpjFkqAKE4C3ydX.png" alt="image-20211215162841693"></p><h3 id="2-2-组件和容器"><a href="#2-2-组件和容器" class="headerlink" title="2.2 组件和容器"></a>2.2 组件和容器</h3><h4 id="1、Frame"><a href="#1、Frame" class="headerlink" title="1、Frame"></a>1、Frame</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FrameTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token string">"第一个GUI界面"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置窗口大小</span>        frame<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置颜色</span>        frame<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置弹出初始位置</span>        frame<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置大小固定</span>        frame<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//必须设置可见性</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/19/9PtcWgKDqveZ4C2.png" alt="image-20211224094339646"></p><p>问题：无法关闭窗口，只能停止java程序</p><ul><li>如何一次性输出多个frame</li></ul><h5 id="封装一个-JFrame-类，创建多个窗口"><a href="#封装一个-JFrame-类，创建多个窗口" class="headerlink" title="封装一个 JFrame 类，创建多个窗口"></a>封装一个 JFrame 类，创建多个窗口</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFrameTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">MyFrame</span> myFrame1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyFrame</span> myFrame2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>YELLOW<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyFrame</span> myFrame3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>PINK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyFrame</span> myFrame4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>MAGENTA<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFrame</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token class-name">Color</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">"MyFrame"</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">++</span>count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setBackground</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/19/viUdKfzrgIq89Ho.png" alt="image-20211224095513762"></p><h4 id="2、面板（Panel）"><a href="#2、面板（Panel）" class="headerlink" title="2、面板（Panel）"></a>2、面板（Panel）</h4><p>frame中放置一个固定面板</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PanelTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Panel</span> panel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Panel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0x43FF02</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//panel 坐标设置，相对于 frame</span>        panel<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        panel<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">0xFFA2161B</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//事件监听，监听窗口结束</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/19/pANmlHhDzgx86Yj.png" alt="image-20211224100635380"></p><blockquote><p>由于写了添加了事件监听器，所以点击关闭可以退出窗口</p></blockquote><h3 id="2-3-布局管理器"><a href="#2-3-布局管理器" class="headerlink" title="2.3 布局管理器"></a>2.3 布局管理器</h3><h4 id="1、流式布局"><a href="#1、流式布局" class="headerlink" title="1、流式布局"></a>1、流式布局</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlowLayoutTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//按钮组件</span>        <span class="token class-name">Button</span> button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"button1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"button2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"button3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置为流式布局</span>        frame<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//添加按钮</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button1<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button2<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button3<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/19/jGQbErhBUHxnDeZ.png" alt="image-20211224101554575"></p><p>注意：流式布局默认为居中，如果想要靠左或靠右请将 <code>frame.setLayout(new FlowLayout());</code> 改为 <code>frame.setLayout(new FlowLayout(FlowLayout.LEFT));</code> 或 <code>frame.setLayout(new FlowLayout(FlowLayout.RIGHT));</code>，效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/SbgsGvyE2PHCIAi.png" alt="image-20211224101824287"></p><p><img src="https://s2.loli.net/2022/01/19/YU41sWgPiJvhpdX.png" alt="image-20211224101906916"></p><h4 id="2、东南西北中"><a href="#2、东南西北中" class="headerlink" title="2、东南西北中"></a>2、东南西北中</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BorderLayoutTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token string">"BorderLayoutTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> east <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"East"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> west <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"West"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> south <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"South"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> north <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"North"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> center <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Center"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>east<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>EAST<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>west<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>WEST<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>south<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>NORTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>north<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>SOUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>center<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/19/fHLwP7RQAFbe32m.png" alt="image-20211224102907465"></p><h4 id="3、表格布局（Grid）"><a href="#3、表格布局（Grid）" class="headerlink" title="3、表格布局（Grid）"></a>3、表格布局（Grid）</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GridLayoutTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token string">"GridLayoutTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> btn1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"btn1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> btn2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"btn2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> btn3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"btn3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> btn4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"btn4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> btn5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"btn5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> btn6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"btn6"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn1<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn2<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn3<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn4<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn5<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>btn6<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//自动填充</span>        frame<span class="token punctuation">.</span><span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/lemonsama123/image/raw/master/image/image-20211224103409532.png" alt="image-20211224103409532"></p><h4 id="4、练习"><a href="#4、练习" class="headerlink" title="4、练习"></a>4、练习</h4><p>分析：</p><p><img src="https://s2.loli.net/2022/01/19/Xrfyhk6sQCwVRmz.png" alt="kuangstudyabc62467-a3df-4e48-8aa6-b758a2369961"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exercise1</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Panel</span> panel1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Panel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Panel</span> panel2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Panel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Panel</span> panel3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Panel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Panel</span> panel4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Panel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        panel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"East-1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>EAST<span class="token punctuation">)</span><span class="token punctuation">;</span>        panel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"West-1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>WEST<span class="token punctuation">)</span><span class="token punctuation">;</span>        panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"p2-btn-1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        panel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"p2-btn-2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        panel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel2<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        panel3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"East-2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>EAST<span class="token punctuation">)</span><span class="token punctuation">;</span>        panel3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"West-2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>WEST<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            panel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"for-"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        panel3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel4<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel1<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>panel3<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://gitee.com/lemonsama123/image/raw/master/image/image-20211224122950937.png" alt="image-20211224122950937"></p><h4 id="5、总结"><a href="#5、总结" class="headerlink" title="5、总结"></a>5、总结</h4><ol><li>Frame 是一个顶级窗口</li><li>Panel 无法单独显示，必须添加到某个容器中</li><li>布局管理器<ol><li>流式</li><li>东西南北中</li><li>表格</li></ol></li><li>大小、定位、背景颜色、可见性、监听</li></ol><h3 id="2-4-事件监听"><a href="#2-4-事件监听" class="headerlink" title="2.4 事件监听"></a>2.4 事件监听</h3><blockquote><p>事件监听：当某个事件发生的时候做点什么</p></blockquote><h5 id="关闭事件和单个按钮事件"><a href="#关闭事件和单个按钮事件" class="headerlink" title="关闭事件和单个按钮事件"></a>关闭事件和单个按钮事件</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lemonsama<span class="token punctuation">.</span>lesson2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionListener</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyActionListener</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>lemonsama<span class="token punctuation">.</span>lesson2</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyActionListenerTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//按下按钮，触发事件</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token string">"ActionEventTest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token class-name">Frame</span> frame<span class="token punctuation">)</span> <span class="token punctuation">{</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/HDYsp2tLjn1dMg4.png"></p><p>点击按钮后输出：</p><p><img src="https://s2.loli.net/2022/01/19/RYaycCUFsDuqOIM.png" alt="image-20211224124607977"></p><h5 id="两个按钮和关闭事件"><a href="#两个按钮和关闭事件" class="headerlink" title="两个按钮和关闭事件"></a>两个按钮和关闭事件</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionListener</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMonitor</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"按钮被点击了：msg=&gt;"</span><span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getActionCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActionEventTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//开始按钮，实现同一个事件</span>        <span class="token comment">//开始  停止</span>        <span class="token class-name">Frame</span> frame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Frame</span><span class="token punctuation">(</span><span class="token string">"开始-停止"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"stop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyMonitor</span> myMonitor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyMonitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//可以显示定义触发返回的命令，不写则返回 label 的值</span>        <span class="token comment">//可以实现都个按钮只写一个监听类</span>        button2<span class="token punctuation">.</span><span class="token function">setActionCommand</span><span class="token punctuation">(</span><span class="token string">"button2-stop"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>myMonitor<span class="token punctuation">)</span><span class="token punctuation">;</span>        button2<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>myMonitor<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button1<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>NORTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button2<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>SOUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        frame<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">closeWindow</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token class-name">Frame</span> frame<span class="token punctuation">)</span> <span class="token punctuation">{</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/GduQo8UrgBqIPAa.png" alt="image-20211224125819525"></p><p>分别点击 start 和 stop 按钮后输出如下：</p><p><img src="https://s2.loli.net/2022/01/19/T8mRaCZEtAs9PU4.png" alt="image-20211224125855193"></p><h3 id="2-5-输入框（TextField）监听"><a href="#2-5-输入框（TextField）监听" class="headerlink" title="2.5 输入框（TextField）监听"></a>2.5 输入框（TextField）监听</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionListener</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyActionListener1</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">TextField</span> source <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TextField</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> text <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//回车设置为空</span>        source<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFrame</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">TextField</span> textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>textField<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">MyActionListener1</span> myActionListener1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyActionListener1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        textField<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span>myActionListener1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置替换码</span>        textField<span class="token punctuation">.</span><span class="token function">setEchoChar</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextFieldTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">MyFrame</span> myFrame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">closeWindow</span><span class="token punctuation">(</span>myFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token class-name">Frame</span> frame<span class="token punctuation">)</span> <span class="token punctuation">{</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/5bhLq7ctDrlAek6.png" alt="image-20211224131223725"></p><p>输入一些内容并回车：</p><p><img src="https://s2.loli.net/2022/01/19/jyET7XfDxwieRWc.png" alt="image-20211224131248616"></p><p><img src="https://s2.loli.net/2022/01/19/QzMqJLrtWgoydKA.png" alt="image-20211224131301777"></p><p><img src="https://s2.loli.net/2022/01/19/c6TmMnY5fyEgrPp.png" alt="image-20211224131310675"></p><h3 id="2-6-简易计算器（加法）的实现"><a href="#2-6-简易计算器（加法）的实现" class="headerlink" title="2.6 简易计算器（加法）的实现"></a>2.6 简易计算器（加法）的实现</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionListener</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Calculator</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token class-name">TextField</span> textField1<span class="token punctuation">;</span>    <span class="token class-name">TextField</span> textField2<span class="token punctuation">;</span>    <span class="token class-name">TextField</span> textField3<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        textField1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        textField2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        textField3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Label</span> label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlowLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>textField1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>textField2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>textField3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CalculatorListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">CalculatorListener</span> <span class="token keyword">implements</span> <span class="token class-name">ActionListener</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>textField1<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>textField2<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textField3<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textField1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            textField2<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">closeWindow</span><span class="token punctuation">(</span><span class="token class-name">Frame</span> frame<span class="token punctuation">)</span> <span class="token punctuation">{</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CalculatorTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Calculator</span> calculator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        calculator<span class="token punctuation">.</span><span class="token function">loadFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/G7oRJU4TuyCSsQp.png" alt="image-20211224134141937"></p><p>演示：</p><p><img src="https://s2.loli.net/2022/01/19/IZqpFcxEld3RPwV.png" alt="image-20211224134207913"></p><p><img src="https://s2.loli.net/2022/01/19/jRkqzhDdg18fKHM.png" alt="image-20211224134212776"></p><h3 id="2-7-画笔"><a href="#2-7-画笔" class="headerlink" title="2.7 画笔"></a>2.7 画笔</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyPaint</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">loadFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paint</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//画笔需要有颜色</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawOval</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">fillOval</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//实心圆</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//画笔用完，还原到最初的颜色</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PaintTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">MyPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/4OvejJaczdk5x9F.png" alt="image-20211224192221700"></p><h3 id="2-8-鼠标监听"><a href="#2-8-鼠标监听" class="headerlink" title="2.8 鼠标监听"></a>2.8 鼠标监听</h3><p>目的：鼠标画画</p><p><img src="https://s2.loli.net/2022/01/19/MT9XyYEJOpIZHtC.png" alt="kuangstudyf0e355a9-8f80-4ab0-ae00-1d9848188922"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">MouseEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFrame</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token comment">//画画需要画笔，需要监听鼠标的位置，需要集合来存储这个点</span>    <span class="token class-name">ArrayList</span> points<span class="token punctuation">;</span>    <span class="token comment">//我的窗口</span>    <span class="token keyword">public</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//存鼠标点击的点</span>        points <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//鼠标监听器，针对与这个窗口</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addMouseListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyMouseListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//画笔事件</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paint</span><span class="token punctuation">(</span><span class="token class-name">Graphics</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//画画需要监听鼠标事件</span>        <span class="token class-name">Iterator</span> iterator <span class="token operator">=</span> points<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Point</span> next <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Point</span><span class="token punctuation">)</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>            g<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>x<span class="token punctuation">,</span> next<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">//添加一个点到界面上</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addPaint</span><span class="token punctuation">(</span><span class="token class-name">Point</span> point<span class="token punctuation">)</span> <span class="token punctuation">{</span>        points<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//适配器模式</span>    <span class="token comment">//鼠标监听器</span>    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">MyMouseListener</span> <span class="token keyword">extends</span> <span class="token class-name">MouseAdapter</span> <span class="token punctuation">{</span>        <span class="token comment">//鼠标点击</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mousePressed</span><span class="token punctuation">(</span><span class="token class-name">MouseEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">MyFrame</span> myFrame <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MyFrame</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//我们在点击的时候，就会在界面上产生一个点</span>            <span class="token comment">//这个点就是当前鼠标</span>            myFrame<span class="token punctuation">.</span><span class="token function">addPaint</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//每次点击都需要刷新画笔重新画点</span>            myFrame<span class="token punctuation">.</span><span class="token function">repaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MouseListenerTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">MyFrame</span> myFrame <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token string">"画"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">shoutWindow</span><span class="token punctuation">(</span>myFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//窗口关闭监听器</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">shoutWindow</span><span class="token punctuation">(</span><span class="token class-name">Frame</span> frame<span class="token punctuation">)</span> <span class="token punctuation">{</span>        frame<span class="token punctuation">.</span><span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/8jzgyrdh4WGoI9v.png" alt="image-20211224195717112"></p><h3 id="2-9-窗口监听"><a href="#2-9-窗口监听" class="headerlink" title="2.9 窗口监听"></a>2.9 窗口监听</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">WindowEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WindowFream</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">WindowFream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">addWindowListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WindowAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">windowClosing</span><span class="token punctuation">(</span><span class="token class-name">WindowEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WindowTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">WindowFream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/19/4imnlQ9SNY3PdrI.png" alt="image-20211224230638866"></p><h3 id="2-10-键盘监听"><a href="#2-10-键盘监听" class="headerlink" title="2.10 键盘监听"></a>2.10 键盘监听</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">KeyAdapter</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">KeyEvent</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KeyFrame</span> <span class="token keyword">extends</span> <span class="token class-name">Frame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">KeyFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addKeyListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">KeyAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//键盘按下</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">keyPressed</span><span class="token punctuation">(</span><span class="token class-name">KeyEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//获取键盘码，可以计算出按下的键</span>                <span class="token keyword">int</span> keyCode <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getKeyCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>keyCode <span class="token operator">==</span> e<span class="token punctuation">.</span>VK_UP<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"你按下了上键"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> keyListenerTest <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">KeyFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/Iyuc6ne8DKP9Hat.png" alt="image-20211224232954120"></p><p>按下上键后输出：</p><p><img src="https://gitee.com/lemonsama123/image/raw/master/image/image-20211224233023068.png" alt="image-20211224233023068"></p><h2 id="3、Swing"><a href="#3、Swing" class="headerlink" title="3、Swing"></a>3、Swing</h2><h3 id="3-1-窗口、面板"><a href="#3-1-窗口、面板" class="headerlink" title="3.1 窗口、面板"></a>3.1 窗口、面板</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFrame</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JLabel</span> jLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"JLabel"</span><span class="token punctuation">,</span> <span class="token class-name">JLabel</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">WindowConstants</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JFrameTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">MyFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/K5MNRymFqnS9l1s.png" alt="image-20211225105555228"></p><h3 id="3-2-弹窗"><a href="#3-2-弹窗" class="headerlink" title="3.2 弹窗"></a>3.2 弹窗</h3><p><code>JDialog</code>，弹窗，默认就有关闭事件</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDialog</span> <span class="token keyword">extends</span> <span class="token class-name">JDialog</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">MyDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"this is a Label"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionEvent</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>event<span class="token punctuation">.</span></span><span class="token class-name">ActionListener</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DialogTest</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">DialogTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">WindowConstants</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//获取容器</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//设置绝对布局</span>        contentPane<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JButton</span> jButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token string">"点击弹出一个对话框"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jButton<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jButton<span class="token punctuation">.</span><span class="token function">addActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">actionPerformed</span><span class="token punctuation">(</span><span class="token class-name">ActionEvent</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">new</span> <span class="token class-name">MyDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jButton<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">DialogTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/MzCHP2FJp76qOd8.png" alt="image-20211225111112198"></p><p><img src="https://s2.loli.net/2022/01/19/kdJGKrMsIlCwqQO.png" alt="image-20211225111151337"></p><h3 id="3-3-标签-label"><a href="#3-3-标签-label" class="headerlink" title="3.3 标签(label)"></a>3.3 标签(label)</h3><p>icon 图标(可以放在标签中也可以放在按钮中)，可以自己绘制放到标签中</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IconTest</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token keyword">implements</span> <span class="token class-name">Icon</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> width<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> height<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">IconTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token class-name">IconTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">IconTest</span> iconTest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IconTest</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JLabel</span> jLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"IconTest"</span><span class="token punctuation">,</span> iconTest<span class="token punctuation">,</span> <span class="token class-name">SwingConstants</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">WindowConstants</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">IconTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">paintIcon</span><span class="token punctuation">(</span><span class="token class-name">Component</span> c<span class="token punctuation">,</span> <span class="token class-name">Graphics</span> g<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>        g<span class="token punctuation">.</span><span class="token function">fillOval</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getIconWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getIconHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如图：</p><p><img src="https://s2.loli.net/2022/01/19/keyGs3x7w1DElbv.png" alt="image-20211225115957214"></p><p>可以将图片当做图标来使用 ImageIcon</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URL<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyImageIcon</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">MyImageIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">JLabel</span> jLabel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JLabel</span><span class="token punctuation">(</span><span class="token string">"ImageIcon"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">URL</span> resource <span class="token operator">=</span> <span class="token class-name">MyImageIcon</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"1640404870375.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ImageIcon</span> imageIcon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>        jLabel<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span>imageIcon<span class="token punctuation">)</span><span class="token punctuation">;</span>        jLabel<span class="token punctuation">.</span><span class="token function">setHorizontalAlignment</span><span class="token punctuation">(</span><span class="token class-name">SwingConstants</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jLabel<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">MyImageIcon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/FwaHRXQVEmoMsZv.png" alt="image-20211225120417924"></p><h3 id="3-4-面板"><a href="#3-4-面板" class="headerlink" title="3.4 面板"></a>3.4 面板</h3><p>JPanel</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyJPanel</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">MyJPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPanel</span> jPanel1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPanel</span> jPanel2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPanel</span> jPanel3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPanel</span> jPanel4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPanel</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">GridLayout</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel2<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel3<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPanel4<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jPanel1<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jPanel2<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jPanel3<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jPanel4<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">MyJPanel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>JScrollPanel，滚动条面板</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JScrollTest</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">JScrollTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//文本域</span>        <span class="token class-name">JTextArea</span> jTextArea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextArea</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jTextArea<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"文本框"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JScrollPane</span> jScrollPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JScrollPane</span><span class="token punctuation">(</span>jTextArea<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jScrollPane<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">JScrollTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/qfbJjDpmYWzsoFL.png" alt="image-20211225121929153"></p><h3 id="3-5-按钮"><a href="#3-5-按钮" class="headerlink" title="3.5 按钮"></a>3.5 按钮</h3><h4 id="自定义图片标签按钮"><a href="#自定义图片标签按钮" class="headerlink" title="自定义图片标签按钮"></a>自定义图片标签按钮</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URL<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JButtonTest</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">JButtonTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">URL</span> resource <span class="token operator">=</span> <span class="token class-name">JButtonTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"1640404870375.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Icon</span> <span class="token class-name">Icon</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JButton</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span><span class="token class-name">Icon</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        button<span class="token punctuation">.</span><span class="token function">setToolTipText</span><span class="token punctuation">(</span><span class="token string">"图片按钮"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">JButtonTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/H4eGwuPqMh1sifz.png" alt="image-20211225122813338"></p><h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URL<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JButtonTest2</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">JButtonTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">URL</span> resource <span class="token operator">=</span> <span class="token class-name">JButtonTest2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"1640404870375.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Icon</span> <span class="token class-name">Icon</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JRadioButton</span> jRadioButton1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"JRadioButton01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JRadioButton</span> jRadioButton2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"JRadioButton02"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JRadioButton</span> jRadioButton3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JRadioButton</span><span class="token punctuation">(</span><span class="token string">"JRadioButton03"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//由于单选框只能选择一个，一般分组，一个组中只能选择一个</span>        <span class="token class-name">ButtonGroup</span> buttonGroup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ButtonGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        buttonGroup<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jRadioButton1<span class="token punctuation">)</span><span class="token punctuation">;</span>        buttonGroup<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jRadioButton2<span class="token punctuation">)</span><span class="token punctuation">;</span>        buttonGroup<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jRadioButton3<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jRadioButton1<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jRadioButton2<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>NORTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jRadioButton3<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>SOUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">JButtonTest2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/XLObyjYE7rxFQ2V.png" alt="image-20211225125815005"></p><p><img src="https://s2.loli.net/2022/01/19/kqnFhNzb1VplCR3.png" alt="image-20211225125820565"></p><p><img src="https://s2.loli.net/2022/01/19/8Zf5nS7st9ByGAH.png" alt="image-20211225125834553"></p><h4 id="复选按钮"><a href="#复选按钮" class="headerlink" title="复选按钮"></a>复选按钮</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URL<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JButtonTest3</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">JButtonTest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">URL</span> resource <span class="token operator">=</span> <span class="token class-name">JButtonTest3</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"1640404870375.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Icon</span> <span class="token class-name">Icon</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageIcon</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JCheckBox</span> checkBox1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JCheckBox</span><span class="token punctuation">(</span><span class="token string">"checkBox01"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JCheckBox</span> checkBox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JCheckBox</span><span class="token punctuation">(</span><span class="token string">"checkBox02"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>checkBox1<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>NORTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>checkBox2<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>SOUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span><span class="token class-name">JFrame</span><span class="token punctuation">.</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">JButtonTest3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/5lha9jFOQydUT8f.png" alt="image-20211225130152945"></p><p><img src="https://s2.loli.net/2022/01/19/rDtyoRMvBqiOL35.png" alt="image-20211225130202104"></p><h3 id="3-6-列表"><a href="#3-6-列表" class="headerlink" title="3.6 列表"></a>3.6 列表</h3><h4 id="下拉框"><a href="#下拉框" class="headerlink" title="下拉框"></a>下拉框</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComboboxTest01</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ComboboxTest01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JComboBox</span> status <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JComboBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        status<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        status<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">"正在上映"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        status<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">"已下架"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        status<span class="token punctuation">.</span><span class="token function">addItem</span><span class="token punctuation">(</span><span class="token string">"即将上映"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">ComboboxTest01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/FTMm6KLWdQVYiR3.png" alt="image-20211225131041198"></p><h4 id="列表框"><a href="#列表框" class="headerlink" title="列表框"></a>列表框</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComboboxTest02</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">ComboboxTest02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> contents <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token class-name">JList</span> jList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JList</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">ComboboxTest02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/7nuXEpzvTr3Oge5.png" alt="image-20211225131551204"></p><h3 id="3-7-文本框"><a href="#3-7-文本框" class="headerlink" title="3.7 文本框"></a>3.7 文本框</h3><h4 id="文本框"><a href="#文本框" class="headerlink" title="文本框"></a>文本框</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextTest01</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">TextTest01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JTextField</span> jTextField1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JTextField</span> jTextField2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextField</span><span class="token punctuation">(</span><span class="token string">"world"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jTextField1<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>NORTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jTextField2<span class="token punctuation">,</span> <span class="token class-name">BorderLayout</span><span class="token punctuation">.</span>SOUTH<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">TextTest01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/nr6sBxpCE5cGUml.png" alt="image-20211225132312290"></p><h4 id="密码框"><a href="#密码框" class="headerlink" title="密码框"></a>密码框</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextTest02</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">TextTest02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JPasswordField</span> jPasswordField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JPasswordField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jPasswordField<span class="token punctuation">.</span><span class="token function">setEchoChar</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jPasswordField<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">TextTest02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://s2.loli.net/2022/01/19/ZfjGvOJ3I82muLd.png" alt="image-20211225132513703"></p><h4 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>swing<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TextTest03</span> <span class="token keyword">extends</span> <span class="token class-name">JFrame</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token class-name">TextTest03</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Container</span> contentPane <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContentPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//文本域</span>        <span class="token class-name">JTextArea</span> jTextArea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JTextArea</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        jTextArea<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"文本框"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JScrollPane</span> jScrollPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JScrollPane</span><span class="token punctuation">(</span>jTextArea<span class="token punctuation">)</span><span class="token punctuation">;</span>        contentPane<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jScrollPane<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setDefaultCloseOperation</span><span class="token punctuation">(</span>EXIT_ON_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">TextTest03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p><img src="https://gitee.com/lemonsama123/image/raw/master/image/image-20211225132833620.png" alt="image-20211225132833620"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Java" scheme="https://lemonsama123.gitee.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://lemonsama123.gitee.io/tags/Java/"/>
    
    <category term="GUI" scheme="https://lemonsama123.gitee.io/tags/GUI/"/>
    
    <category term="AWT" scheme="https://lemonsama123.gitee.io/tags/AWT/"/>
    
    <category term="Swing" scheme="https://lemonsama123.gitee.io/tags/Swing/"/>
    
  </entry>
  
</feed>
